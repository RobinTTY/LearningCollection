"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[7174],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},g=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),g=c(n),m=r,d=g["".concat(l,".").concat(m)]||g[m]||u[m]||a;return n?o.createElement(d,i(i({ref:t},p),{},{components:n})):o.createElement(d,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}g.displayName="MDXCreateElement"},6154:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return g}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],s={id:"importingExportingData",title:"Importing and Exporting data",sidebar_position:3},l=void 0,c={unversionedId:"Databases/MongoDB/M001 MongoDB Basics/importingExportingData",id:"Databases/MongoDB/M001 MongoDB Basics/importingExportingData",isDocsHomePage:!1,title:"Importing and Exporting data",description:"`txt",source:"@site/docs/Databases/MongoDB/M001 MongoDB Basics/Importing and Exporting data.md",sourceDirName:"Databases/MongoDB/M001 MongoDB Basics",slug:"/Databases/MongoDB/M001 MongoDB Basics/importingExportingData",permalink:"/LearningCollection/Databases/MongoDB/M001 MongoDB Basics/importingExportingData",editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/Databases/MongoDB/M001 MongoDB Basics/Importing and Exporting data.md",version:"current",sidebarPosition:3,frontMatter:{id:"importingExportingData",title:"Importing and Exporting data",sidebar_position:3},sidebar:"mySidebar",previous:{title:"Documents and Collections",permalink:"/LearningCollection/Databases/MongoDB/M001 MongoDB Basics/documentsAndCollections"},next:{title:"Querying, Creating, Updating and Deleting documents with Mongo shell",permalink:"/LearningCollection/Databases/MongoDB/M001 MongoDB Basics/queryingCreatingUpdatingDeleting"}},p=[{value:"Example",id:"example",children:[]},{value:"The URI string",id:"the-uri-string",children:[]}],u={toc:p};function g(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-txt"},'mongoimport --uri "<AtlasClusterURI>       // import json\n            --drop=<filename>.json\nmongoexport --uri "<AtlasClusterURI>       // export json\n            --collection=<collectionName>\n            --out=<filename>.json\nmongorestore --uri "<AtlasClusterURI>      // import bson\n             --drop dump\nmongodump --uri "<AtlasClusterURI>         // export bson\n\n')),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-txt"},'mongoimport --uri "mongodb+srv://<user>:<password>@cluster0.9mv1n.mongodb.net:27017,cluster0-shard-00-00.9mv1n.mongodb.net:27017,cluster0-shard-00-02.9mv1n.mongodb.net:27017/<dbName>?ssl=true&replicaSet=atlas-ojxaoh-shard-0&authSource=admin" --collection <collectionName> --drop --file C:/.../<exportedData>.json\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"--drop:")," Modifies the import process so that the target instance drops the collection before importing the data from the input.",(0,a.kt)("br",{parentName:"p"}),"\n","More options see: ",(0,a.kt)("a",{parentName:"p",href:"https://docs.mongodb.com/database-tools/mongoimport/"},"MongoDB Docs")),(0,a.kt)("h2",{id:"the-uri-string"},"The URI string"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The connection string is a srv-string"),(0,a.kt)("li",{parentName:"ul"},"srv is used to establish a secure connection")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-txt"},"mongodb+srv://<your username>:<your password>@<your cluster>.mongodb.net/<database>\n")))}g.isMDXComponent=!0}}]);