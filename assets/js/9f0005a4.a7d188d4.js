"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[5277],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=o,f=m["".concat(u,".").concat(d)]||m[d]||c[d]||i;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3448:function(e,t,n){n.r(t),n.d(t,{assets:function(){return f},contentTitle:function(){return m},default:function(){return y},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return g}});var r=n(7462),o=n(3366),i=n(7294),a=n(3905);function l(e,t){return l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},l(e,t)}var u=function(e){var t,n;function r(){return e.apply(this,arguments)||this}n=e,(t=r).prototype=Object.create(n.prototype),t.prototype.constructor=t,l(t,n);var o=r.prototype;return o.componentDidMount=function(){this._updateIframeContent()},o.componentDidUpdate=function(e,t){this._updateIframeContent()},o._defineUrl=function(){var e=this.props,t=e.id,n=e.file;return"https://gist.github.com/"+t+".js"+(n?"?file="+n:"")},o._updateIframeContent=function(){var e=this.props,t=e.id,n=e.file,r=this.iframeNode,o=r.document;r.contentDocument?o=r.contentDocument:r.contentWindow&&(o=r.contentWindow.document);var i='<html><head><base target="_parent"><style>*{font-size:12px;}</style></head><body '+("onload=\"parent.document.getElementById('"+(n?"gist-"+t+"-"+n:"gist-"+t)+"').style.height=document.body.scrollHeight + 'px'\"")+">"+('<script type="text/javascript" src="'+this._defineUrl()+'"><\/script>')+"</body></html>";o.open(),o.writeln(i),o.close()},o.render=function(){var e=this,t=this.props,n=t.id,r=t.file;return i.createElement("iframe",{ref:function(t){e.iframeNode=t},width:"100%",frameBorder:0,id:r?"gist-"+n+"-"+r:"gist-"+n})},r}(i.PureComponent),s=u,p=["components"],c={id:"trustedDeveloperUtilities",title:"Trusted Developer Utilities Proxy Execution",sidebar_position:2},m=void 0,d={unversionedId:"Security/trustedDeveloperUtilities",id:"Security/trustedDeveloperUtilities",title:"Trusted Developer Utilities Proxy Execution",description:"- Category: Execution",source:"@site/docs/Security/Trusted Developer Utilities.mdx",sourceDirName:"Security",slug:"/Security/trustedDeveloperUtilities",permalink:"/LearningCollection/Security/trustedDeveloperUtilities",editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/Security/Trusted Developer Utilities.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"trustedDeveloperUtilities",title:"Trusted Developer Utilities Proxy Execution",sidebar_position:2},sidebar:"mySidebar",previous:{title:"Data Obfuscation",permalink:"/LearningCollection/Security/dataObfuscation"},next:{title:"DLL Side-Loading",permalink:"/LearningCollection/Security/dllSideLoading"}},f={},g=[{value:"MSBuild",id:"msbuild",level:2},{value:"Example of a normal project file",id:"example-of-a-normal-project-file",level:3},{value:"Example of a malicious project file",id:"example-of-a-malicious-project-file",level:3},{value:"Achievable results",id:"achievable-results",level:3},{value:"Mitigation",id:"mitigation",level:3}],b={toc:g};function y(e){var t=e.components,n=(0,o.Z)(e,p);return(0,a.kt)("wrapper",(0,r.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Category: Execution"),(0,a.kt)("li",{parentName:"ul"},"Goal: Execute malicious payload")),(0,a.kt)("p",null,"There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering. These utilities are often signed with legitimate certificates that allow them to execute on a system.\nThis fact can be abused to proxy execute malicious code through a trusted process that effectively bypasses application control solutions."),(0,a.kt)("h2",{id:"msbuild"},"MSBuild"),(0,a.kt)("p",null,"MSBuild.exe (Microsoft Build Engine) is a ",(0,a.kt)("strong",{parentName:"p"},"build tool")," used by Visual Studio but can also be used independently. It is used to control how the build platform processes and builds software (including compilation, packaging, testing, deployment, etc.)."),(0,a.kt)("p",null,"MSBuild can be used to build different types of projects, like C++ and C#."),(0,a.kt)("h3",{id:"example-of-a-normal-project-file"},"Example of a normal project file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="utf-8"?>\n<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">\n  <ItemGroup Label="ProjectConfigurations">\n    <ProjectConfiguration Include="Debug|Win32">\n      <Configuration>Debug</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n    <ProjectConfiguration Include="Release|Win32">\n      <Configuration>Release</Configuration>\n      <Platform>Win32</Platform>\n    </ProjectConfiguration>\n  </ItemGroup>\n  <PropertyGroup Label="Globals">\n    <ProjectGuid>{96F21549-A7BF-4695-A1B1-B43625B91A14}</ProjectGuid>\n    <Keyword>Win32Proj</Keyword>\n    <RootNamespace>SomeProjName</RootNamespace>\n  </PropertyGroup>\n  <Import Project="$(VCTargetsPath)\\Microsoft.Cpp.Default.props" />\n  <PropertyGroup Condition="\'$(Configuration)|$(Platform)\'==\'Debug|Win32\'" Label="Configuration">\n    <ConfigurationType>Application</ConfigurationType>\n    <CharacterSet>Unicode</CharacterSet>\n  </PropertyGroup>\n  <PropertyGroup Condition="\'$(Configuration)|$(Platform)\'==\'Release|Win32\'" Label="Configuration">\n    <ConfigurationType>Application</ConfigurationType>\n    <WholeProgramOptimization>true</WholeProgramOptimization>\n    <CharacterSet>Unicode</CharacterSet>\n  </PropertyGroup>\n  <Import Project="$(VCTargetsPath)\\Microsoft.Cpp.props" />\n  <ImportGroup Label="ExtensionSettings">\n  </ImportGroup>\n  <ImportGroup Label="PropertySheets" Condition="\'$(Configuration)|$(Platform)\'==\'Debug|Win32\'">\n    <Import Project="$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props" Condition="exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')" Label="LocalAppDataPlatform" />\n  </ImportGroup>\n  <ImportGroup Label="PropertySheets" Condition="\'$(Configuration)|$(Platform)\'==\'Release|Win32\'">\n    <Import Project="$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props" Condition="exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')" Label="LocalAppDataPlatform" />\n  </ImportGroup>\n  <PropertyGroup Label="UserMacros" />\n  <PropertyGroup Condition="\'$(Configuration)|$(Platform)\'==\'Debug|Win32\'">\n    <LinkIncremental>true</LinkIncremental>\n  </PropertyGroup>\n  <PropertyGroup Condition="\'$(Configuration)|$(Platform)\'==\'Release|Win32\'">\n    <LinkIncremental>false</LinkIncremental>\n  </PropertyGroup>\n  <ItemDefinitionGroup Condition="\'$(Configuration)|$(Platform)\'==\'Debug|Win32\'">\n    <ClCompile>\n      <PrecompiledHeader>Use</PrecompiledHeader>\n      <WarningLevel>Level3</WarningLevel>\n      <MinimalRebuild>true</MinimalRebuild>\n      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\n      <Optimization>Disabled</Optimization>\n      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n    </ClCompile>\n    <Link>\n      <SubSystem>Console</SubSystem>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemDefinitionGroup Condition="\'$(Configuration)|$(Platform)\'==\'Release|Win32\'">\n    <ClCompile>\n      <WarningLevel>Level3</WarningLevel>\n      <PrecompiledHeader>Use</PrecompiledHeader>\n      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n      <Optimization>MaxSpeed</Optimization>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n      <FunctionLevelLinking>true</FunctionLevelLinking>\n      <IntrinsicFunctions>true</IntrinsicFunctions>\n      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n    </ClCompile>\n    <Link>\n      <SubSystem>Console</SubSystem>\n      <GenerateDebugInformation>true</GenerateDebugInformation>\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n      <OptimizeReferences>true</OptimizeReferences>\n    </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup>\n    <None Include="ReadMe.txt" />\n  </ItemGroup>\n  <ItemGroup>\n    <ClInclude Include="pch.h" />\n    <ClInclude Include="targetver.h" />\n  </ItemGroup>\n  <ItemGroup>\n    <ClCompile Include="SomeProjName.cpp" />\n    <ClCompile Include="pch.cpp">\n      <PrecompiledHeader Condition="\'$(Configuration)|$(Platform)\'==\'Debug|Win32\'">Create</PrecompiledHeader>\n      <PrecompiledHeader Condition="\'$(Configuration)|$(Platform)\'==\'Release|Win32\'">Create</PrecompiledHeader>\n    </ClCompile>\n  </ItemGroup>\n  <Import Project="$(VCTargetsPath)\\Microsoft.Cpp.targets" />\n  <ImportGroup Label="ExtensionTargets">\n  </ImportGroup>\n</Project>\n')),(0,a.kt)("h3",{id:"example-of-a-malicious-project-file"},"Example of a malicious project file"),(0,a.kt)(s,{id:"822fcc1e97c4bae37fcb77d03b43ad8f",mdxType:"Gist"}),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/3gstudent/BlogPic/master/2016-9-20/4-2.png",alt:"Execution"})),(0,a.kt)("p",null,"In the MSBuild schema, a Task element represents an individual build instruction (or task). MSBuild includes a multitude of predefined tasks. For example:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The Copy task copies files to a new location"),(0,a.kt)("li",{parentName:"ul"},"The Csc task invokes the Visual C# compiler"),(0,a.kt)("li",{parentName:"ul"},"The Vbc task invokes the Visual Basic compiler"),(0,a.kt)("li",{parentName:"ul"},"The Message task writes a message to a logger"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"The Exec task runs a specified program")," (still needs another executable!)")),(0,a.kt)("p",null,'With .Net Framework 4.0 (Release: 2010), a new feature "Inline Tasks" was introduced. The element which introduces this new feature is ',(0,a.kt)("inlineCode",{parentName:"p"},"UsingTask"),", which can execute arbitrary code embedded in the xml file."),(0,a.kt)("h3",{id:"achievable-results"},"Achievable results"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Application whitelists can be bypassed"),(0,a.kt)("li",{parentName:"ul"},"Provides a way to execute shellode directly")),(0,a.kt)("h3",{id:"mitigation"},"Mitigation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Static analysis tools can identify threats in project files"),(0,a.kt)("li",{parentName:"ul"},"Third party project files shouldn't be executed without review")))}y.isMDXComponent=!0}}]);