"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[2098],{20356:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>a});var s=i(74848),l=i(28453);const t={title:"Elastic Beanstalk",sidebar_position:15},r=void 0,o={id:"cloud/aws/certified-developer-associate/elastic-beanstalk",title:"Elastic Beanstalk",description:"What is Elastic Beanstalk:",source:"@site/docs/cloud/aws/certified-developer-associate/elastic-beanstalk.md",sourceDirName:"cloud/aws/certified-developer-associate",slug:"/cloud/aws/certified-developer-associate/elastic-beanstalk",permalink:"/LearningCollection/cloud/aws/certified-developer-associate/elastic-beanstalk",draft:!1,unlisted:!1,editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/cloud/aws/certified-developer-associate/elastic-beanstalk.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{title:"Elastic Beanstalk",sidebar_position:15},sidebar:"docs",previous:{title:"Cloudfront",permalink:"/LearningCollection/cloud/aws/certified-developer-associate/cloudfront"},next:{title:"Exam Scoring",permalink:"/LearningCollection/cloud/aws/certified-developer-associate/exam-scoring"}},c={},a=[{value:"Web vs Worker Environment",id:"web-vs-worker-environment",level:2},{value:"Web Environment Types",id:"web-environment-types",level:3},{value:"Deployment Policies",id:"deployment-policies",level:2},{value:"Configuration Files",id:"configuration-files",level:2},{value:"Environment Manifest",id:"environment-manifest",level:2},{value:"CLI",id:"cli",level:2},{value:"Custom Image",id:"custom-image",level:2},{value:"Configuring RDS",id:"configuring-rds",level:2}];function d(e){const n={code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"What is Elastic Beanstalk:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"PaaS: Run/Manage applications without maintaining the infrastructure"}),"\n",(0,s.jsx)(n.li,{children:"Not recommended for Production applications"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Supported languages:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ruby"}),"\n",(0,s.jsx)(n.li,{children:"Python"}),"\n",(0,s.jsx)(n.li,{children:"PHP"}),"\n",(0,s.jsx)(n.li,{children:"Go"}),"\n",(0,s.jsx)(n.li,{children:"NodeJs"}),"\n",(0,s.jsx)(n.li,{children:"C#"}),"\n",(0,s.jsx)(n.li,{children:"and more"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"web-vs-worker-environment",children:"Web vs Worker Environment"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Web Environment: For running web applications"}),"\n",(0,s.jsx)(n.li,{children:"Worker Environment: For background or long running jobs"}),"\n",(0,s.jsx)(n.li,{children:"Can be deployed together (frontend/backend)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"web-environment-types",children:"Web Environment Types"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Load-Balanced Env","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"uses Auto Scaling Groups (ASG)"}),"\n",(0,s.jsx)(n.li,{children:"uses Elastic Load Balancing (ELB)"}),"\n",(0,s.jsx)(n.li,{children:"Designed to scale"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Single-Instance Env","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"no Load balancer => saves cost"}),"\n",(0,s.jsx)(n.li,{children:"apart from that no difference to load-balanced env"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"deployment-policies",children:"Deployment Policies"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"deployment-policies",src:i(68337).A+"",width:"1396",height:"601"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Single-Instance Env doesn't support all of the policies"}),"\n",(0,s.jsxs)(n.li,{children:["All at once","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Deploys new versions to all instances at once"}),"\n",(0,s.jsx)(n.li,{children:"All instances out of service during deployment"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Rolling","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Deploys new app version to batch of instances at a time"}),"\n",(0,s.jsx)(n.li,{children:"Takes out a configurable percentage of instances offline per batch"}),"\n",(0,s.jsx)(n.li,{children:"Capacity is reduced while a batch is taken offline"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Rolling with additional batch","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ensures capacity is never reduced during update"}),"\n",(0,s.jsx)(n.li,{children:"Launches new instances before updating a batch"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Immutable (safest way to deploy for critical applications)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Creates a new ASG with EC2 instances"}),"\n",(0,s.jsx)(n.li,{children:"Deploys the updated version of the app on the new instances"}),"\n",(0,s.jsx)(n.li,{children:"Points the ELB to the new ASG and deletes the old ASG"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"In Place Deployment: All the deployment policies provided by EB are considered in-place since they are within the scope of a single EB environment."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Blue/Green","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"run tow identical production environments"}),"\n",(0,s.jsx)(n.li,{children:"shift traffic from Blue (old) to Green (new)"}),"\n",(0,s.jsx)(n.li,{children:"not in-place => blue/green because it requires two EB environments, swapping occurs at the DNS level"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["EB Traffic Splitting","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Allows you to forward a portion of your traffic to the new environment after a period of time then move the rest"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"configuration-files",children:"Configuration Files"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:".ebextensions: hidden folder at the root of the project which contains config files"}),"\n",(0,s.jsx)(n.li,{children:".config: extension for the config files"}),"\n",(0,s.jsxs)(n.li,{children:["config files can configure:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Option Settings"}),"\n",(0,s.jsx)(n.li,{children:"Linux/Windows server configuration"}),"\n",(0,s.jsx)(n.li,{children:"Custom resources"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"environment-manifest",children:"Environment Manifest"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["File at the root of the project ",(0,s.jsx)(n.code,{children:"env.yml"})]}),"\n",(0,s.jsxs)(n.li,{children:["Allows you to configure:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Name of env"}),"\n",(0,s.jsx)(n.li,{children:"Stack (programming language)"}),"\n",(0,s.jsx)(n.li,{children:"Associating the environment links"}),"\n",(0,s.jsx)(n.li,{children:"Default Configuration of Services"}),"\n",(0,s.jsx)(n.li,{children:"etc."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Makes EB environment portable"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"cli",children:"CLI"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Let's you create and manage your EB environments","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"eb init"})," - Inits a new env, creates config files"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"eb create"})," - Creates new env and deploys an application to it"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"eb clone"})," - Creates a clone of existing env"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"eb deploy"})," - Deploys app to an existing env"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"eb logs"})," - Get slogs"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"eb events"})," - Gets events"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"eb health"})," - Gets health status"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"eb terminate"})," - Terminates and deletes env + resources"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"eb abort"})," - Cancels an env update or deployment that is in progress"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"eb status"})," - Gets status of an env"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"eb list"})," - List all envs"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"custom-image",children:"Custom Image"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If you need to install a lot of software that isn't used in the standard AMIs (Amazon Machine Image) you can setup a custom image."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"configuring-rds",children:"Configuring RDS"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["A database can be added inside or outside the EB env","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"When inside env it will be deleted when EB env is terminated"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},68337:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/deployment-policies-90d3eae855d589afe0b2f9772051bbbf.png"},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var s=i(96540);const l={},t=s.createContext(l);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);