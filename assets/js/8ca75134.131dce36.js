"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[3687],{4238:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"kubernetes/cka-exam/cka-exam","title":"CKA Exam notes","description":"Important notes for CKA Exam:","source":"@site/docs/kubernetes/cka-exam/cka-exam.md","sourceDirName":"kubernetes/cka-exam","slug":"/kubernetes/cka-exam/","permalink":"/LearningCollection/kubernetes/cka-exam/","draft":false,"unlisted":false,"editUrl":"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/kubernetes/cka-exam/cka-exam.md","tags":[],"version":"current","frontMatter":{"id":"cka-exam","title":"CKA Exam notes"},"sidebar":"docs","previous":{"title":"Architecture","permalink":"/LearningCollection/kubernetes/architecture"},"next":{"title":"CKA Exam Questions","permalink":"/LearningCollection/kubernetes/cka-exam/questions"}}');var t=s(74848),r=s(28453);const l={id:"cka-exam",title:"CKA Exam notes"},a=void 0,c={},o=[{value:"Important notes for CKA Exam:",id:"important-notes-for-cka-exam",level:2},{value:"Possible Tasks",id:"possible-tasks",level:2},{value:"Storage",id:"storage",level:3},{value:"Scheduling",id:"scheduling",level:3},{value:"Security",id:"security",level:3},{value:"Things to remember",id:"things-to-remember",level:2},{value:"Dynamic env values",id:"dynamic-env-values",level:3},{value:"Install a local package",id:"install-a-local-package",level:3},{value:"Upgrade existing helm chart",id:"upgrade-existing-helm-chart",level:3},{value:"Number of replicas wrong",id:"number-of-replicas-wrong",level:3},{value:"Create PersistentVolume on a specific node",id:"create-persistentvolume-on-a-specific-node",level:3},{value:"Enforce pod security standard",id:"enforce-pod-security-standard",level:3},{value:"Fix kubeconfig",id:"fix-kubeconfig",level:3},{value:"Edit controlplane pod",id:"edit-controlplane-pod",level:3}];function d(e){const n={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"important-notes-for-cka-exam",children:"Important notes for CKA Exam:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Don't forget to set context before each task"}),"\n",(0,t.jsx)(n.li,{children:"Copy + Paste is important (ctrl + shift + v | Shift + Insert)"}),"\n",(0,t.jsxs)(n.li,{children:["Important Linux commands","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'kubectl logs >pod-name> | grep "abc" > /tmp/access-failed.txt'}),"\n",(0,t.jsx)(n.li,{children:'vim: "set paste" command'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"possible-tasks",children:"Possible Tasks"}),"\n",(0,t.jsx)(n.h3,{id:"storage",children:"Storage"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Create a StorageClass"}),"\n",(0,t.jsx)(n.li,{children:"Create a PersistentVolume"}),"\n",(0,t.jsx)(n.li,{children:"Create a PersistentVolumeClaim"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"scheduling",children:"Scheduling"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Applying affinity to pods"}),"\n",(0,t.jsx)(n.li,{children:"Applying taints to nodes"}),"\n",(0,t.jsx)(n.li,{children:"Applying tolerations to pods"}),"\n",(0,t.jsx)(n.li,{children:"Configuring and using autoscaling (VPA/HPA)"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Enforce restricted pod security standard"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"things-to-remember",children:"Things to remember"}),"\n",(0,t.jsx)(n.h3,{id:"dynamic-env-values",children:"Dynamic env values"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",metastring:"{8-12}",children:"spec:\n  volumes:\n    - name: shared-volume\n      emptyDir: {}\n  containers:\n    - image: nginx:1-alpine\n      name: mc-pod-1\n      env:\n        - name: NODE_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: spec.nodeName\n"})}),"\n",(0,t.jsx)(n.h3,{id:"install-a-local-package",children:"Install a local package"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"apt install ./cri-docker_0.3.16.3-0.debian.deb"})," or ",(0,t.jsx)(n.code,{children:"dpkg -i ./cri-docker_0.3.16.3-0.debian.deb"})]}),"\n",(0,t.jsxs)(n.p,{children:["Start service: ",(0,t.jsx)(n.code,{children:"systemctl start cri-docker"}),(0,t.jsx)(n.br,{}),"\n","Start on boot: ",(0,t.jsx)(n.code,{children:"systemctl enable cri-docker"})]}),"\n",(0,t.jsx)(n.h3,{id:"upgrade-existing-helm-chart",children:"Upgrade existing helm chart"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["List helm charts: ",(0,t.jsx)(n.code,{children:"helm list -n <namespace-name>"})]}),"\n",(0,t.jsxs)(n.li,{children:["Update repos: ",(0,t.jsx)(n.code,{children:"helm repo update"})]}),"\n",(0,t.jsxs)(n.li,{children:["Search repos: ",(0,t.jsx)(n.code,{children:"helm search repo <search-term>"})]}),"\n",(0,t.jsxs)(n.li,{children:["Add repo: ",(0,t.jsx)(n.code,{children:"helm add repo <repo-name>"})]}),"\n",(0,t.jsxs)(n.li,{children:["Upgrade repo: ",(0,t.jsx)(n.code,{children:"helm upgrade <release-name> <chart-name> --version <version-name>"})," (Chart name is those from repo search)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"number-of-replicas-wrong",children:"Number of replicas wrong"}),"\n",(0,t.jsx)(n.p,{children:"If after adjusting resource quota a deployment still has not the wanted number of replicas => Delete the associated replicaset"}),"\n",(0,t.jsx)(n.h3,{id:"create-persistentvolume-on-a-specific-node",children:"Create PersistentVolume on a specific node"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"nodeAffinity"})," has to be used to place the pv on a specific node"]}),"\n",(0,t.jsx)(n.h3,{id:"enforce-pod-security-standard",children:"Enforce pod security standard"}),"\n",(0,t.jsxs)(n.p,{children:["Just follow the docs: ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/configure-pod-container/enforce-standards-namespace-labels/",children:"Kubernetes Docs"})]}),"\n",(0,t.jsx)(n.h3,{id:"fix-kubeconfig",children:"Fix kubeconfig"}),"\n",(0,t.jsx)(n.p,{children:"To test a kubeconfig file, use the command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"k get node --kubeconfig <kubeconfig-file>\n"})}),"\n",(0,t.jsx)(n.p,{children:"This will help you verify if the kubeconfig is set up correctly and can communicate with the cluster."}),"\n",(0,t.jsx)(n.h3,{id:"edit-controlplane-pod",children:"Edit controlplane pod"}),"\n",(0,t.jsxs)(n.p,{children:["To edit a control plane pod,\nyou have to edit the static pod manifest file located in ",(0,t.jsx)(n.code,{children:"/etc/kubernetes/manifests/"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(96540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);