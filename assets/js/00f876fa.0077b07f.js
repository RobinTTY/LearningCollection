"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[4729],{1686:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var n=r(4848),s=r(8453);const o={id:"api-errors",title:"API Errors"},i=void 0,a={id:"csharp/asp-net/core-concepts/api-errors",title:"API Errors",description:"For communicating the errors and exceptions to our API clients, we should specify a response format. In some cases, we would also like to let our users know what actually happened when something went wrong, instead of just telling them it was a 404 or 500 error. IETF RFC 7807 addresses this topic and creates a standardized format by specifying the Problem Details object.",source:"@site/docs/csharp/asp-net/core-concepts/api-errors.md",sourceDirName:"csharp/asp-net/core-concepts",slug:"/csharp/asp-net/core-concepts/api-errors",permalink:"/LearningCollection/csharp/asp-net/core-concepts/api-errors",draft:!1,unlisted:!1,editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/csharp/asp-net/core-concepts/api-errors.md",tags:[],version:"current",frontMatter:{id:"api-errors",title:"API Errors"},sidebar:"docs",previous:{title:"Validating Input",permalink:"/LearningCollection/csharp/asp-net/core-concepts/validating-input"},next:{title:"Handling Files",permalink:"/LearningCollection/csharp/asp-net/core-concepts/handling-files"}},c={},l=[{value:"<code>ProblemDetails</code> structure",id:"problemdetails-structure",level:2},{value:"Modifying problem details",id:"modifying-problem-details",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["For communicating the errors and exceptions to our API clients, we should specify a response format. In some cases, we would also like to let our users know what actually happened when something went wrong, instead of just telling them it was a 404 or 500 error. ",(0,n.jsx)(t.a,{href:"https://datatracker.ietf.org/doc/html/rfc7807",children:"IETF RFC 7807"})," addresses this topic and creates a standardized format by specifying the ",(0,n.jsx)(t.code,{children:"Problem Details"})," object."]}),"\n",(0,n.jsxs)(t.h2,{id:"problemdetails-structure",children:[(0,n.jsx)(t.code,{children:"ProblemDetails"})," structure"]}),"\n",(0,n.jsx)(t.p,{children:"An instance of the ProblemDetails object serialized to json can for example look like this:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n  "type": "https://tools.ietf.org/html/rfc9110#section-15.5.5",\n  "title": "Not Found",\n  "status": 404,\n  "traceId": "55de454e-4875-4530-ba00-0e772b83a8ad"\n}\n'})}),"\n",(0,n.jsx)(t.h2,{id:"modifying-problem-details",children:"Modifying problem details"}),"\n",(0,n.jsx)(t.p,{children:"It is possible to adjust the returned problem details. To do that we can adjust the service registration:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",children:'builder.Services.AddProblemDetails(options => {\n    options.CustomizeProblemDetails = ctx => {\n        ctx.ProblemDetails.Extensions.Add("server", Environment.MachineName);\n    }\n});\n'})})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>a});var n=r(6540);const s={},o=n.createContext(s);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);