"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[3006],{92816:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"cloud/aws/certified-developer-associate/ecs-ecr-fargate","title":"ECS, ECR, Fargate","description":"Docker Containers Management on AWS","source":"@site/docs/cloud/aws/certified-developer-associate/ecs-ecr-fargate.md","sourceDirName":"cloud/aws/certified-developer-associate","slug":"/cloud/aws/certified-developer-associate/ecs-ecr-fargate","permalink":"/LearningCollection/cloud/aws/certified-developer-associate/ecs-ecr-fargate","draft":false,"unlisted":false,"editUrl":"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/cloud/aws/certified-developer-associate/ecs-ecr-fargate.md","tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"title":"ECS, ECR, Fargate","sidebar_position":12},"sidebar":"docs","previous":{"title":"Cloudfront","permalink":"/LearningCollection/cloud/aws/certified-developer-associate/cloudfront"},"next":{"title":"Elastic Beanstalk","permalink":"/LearningCollection/cloud/aws/certified-developer-associate/elastic-beanstalk"}}');var a=s(74848),l=s(28453);const t={title:"ECS, ECR, Fargate",sidebar_position:12},r=void 0,c={},d=[{value:"Docker Containers Management on AWS",id:"docker-containers-management-on-aws",level:2},{value:"Amazon ECS",id:"amazon-ecs",level:2},{value:"EC2 Launch Type",id:"ec2-launch-type",level:3},{value:"Fargate Launch Type",id:"fargate-launch-type",level:3},{value:"IAM Roles for ECS",id:"iam-roles-for-ecs",level:3},{value:"EC2 Instance Profile (EC2 Launch Type only)",id:"ec2-instance-profile-ec2-launch-type-only",level:4},{value:"ECS Task Role",id:"ecs-task-role",level:4},{value:"Load Balancer Integrations",id:"load-balancer-integrations",level:3},{value:"Data Volumes (EFS)",id:"data-volumes-efs",level:3},{value:"Auto Scaling",id:"auto-scaling",level:3},{value:"Launch Type \u2013 Auto Scaling EC2 Instances",id:"launch-type--auto-scaling-ec2-instances",level:4},{value:"ECS Rolling Updates",id:"ecs-rolling-updates",level:3},{value:"ECS tasks invoked by Event Bridge",id:"ecs-tasks-invoked-by-event-bridge",level:3},{value:"Intercept Stopped Tasks using EventBridge",id:"intercept-stopped-tasks-using-eventbridge",level:3},{value:"Task Definitions",id:"task-definitions",level:3},{value:"Load Balancing",id:"load-balancing",level:3},{value:"EC2 Launch Type",id:"ec2-launch-type-1",level:4},{value:"Fargate",id:"fargate",level:4},{value:"One IAM Role per Task Definition",id:"one-iam-role-per-task-definition",level:3},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Data Volumes (Bind Mounts)",id:"data-volumes-bind-mounts",level:3},{value:"Task Placement",id:"task-placement",level:3},{value:"Binpack",id:"binpack",level:4},{value:"Random",id:"random",level:4},{value:"Spread",id:"spread",level:4},{value:"Task Placement Constraints",id:"task-placement-constraints",level:3},{value:"Amazon ECR",id:"amazon-ecr",level:2},{value:"Using AWS CLI",id:"using-aws-cli",level:3},{value:"AWS Copilot",id:"aws-copilot",level:2},{value:"Amazon EKS Overview",id:"amazon-eks-overview",level:2},{value:"Node Types",id:"node-types",level:3},{value:"Data Volumes",id:"data-volumes",level:3}];function o(e){const n={a:"a",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"docker-containers-management-on-aws",children:"Docker Containers Management on AWS"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Amazon Elastic Container Service (Amazon ECS)","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Amazon\u2019s own container platform"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Amazon Elastic Kubernetes Service (Amazon EKS)","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Amazon\u2019s managed Kubernetes (open source)"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["AWS Fargate","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Amazon\u2019s own Serverless container platform"}),"\n",(0,a.jsx)(n.li,{children:"Works with ECS and with EKS"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Amazon ECR","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Store container images"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"amazon-ecs",children:"Amazon ECS"}),"\n",(0,a.jsx)(n.h3,{id:"ec2-launch-type",children:"EC2 Launch Type"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"ECS = Elastic Container Service"}),"\n",(0,a.jsx)(n.li,{children:"Launch Docker containers on AWS = Launch ECS Tasks on ECS Clusters"}),"\n",(0,a.jsx)(n.li,{children:"EC2 Launch Type: you must provision & maintain the infrastructure (the EC2 instances)"}),"\n",(0,a.jsx)(n.li,{children:"Each EC2 Instance must run the ECS Agent to register in the ECS Cluster"}),"\n",(0,a.jsx)(n.li,{children:"AWS takes care of starting / stopping containers"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"amazon-ecs",src:s(33017).A+"",width:"844",height:"823"})}),"\n",(0,a.jsx)(n.h3,{id:"fargate-launch-type",children:"Fargate Launch Type"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Launch Docker containers on AWS"}),"\n",(0,a.jsx)(n.li,{children:"You do not provision the infrastructure (no EC2 instances to manage)"}),"\n",(0,a.jsx)(n.li,{children:"It\u2019s all Serverless!"}),"\n",(0,a.jsx)(n.li,{children:"You just create task definitions"}),"\n",(0,a.jsx)(n.li,{children:"AWS just runs ECS Tasks for you based on the CPU / RAM you need"}),"\n",(0,a.jsx)(n.li,{children:"To scale, just increase the number of tasks. Simple - no more EC2 instances"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"iam-roles-for-ecs",children:"IAM Roles for ECS"}),"\n",(0,a.jsx)(n.h4,{id:"ec2-instance-profile-ec2-launch-type-only",children:"EC2 Instance Profile (EC2 Launch Type only)"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Used by the ECS agent"}),"\n",(0,a.jsx)(n.li,{children:"Makes API calls to ECS service"}),"\n",(0,a.jsx)(n.li,{children:"Send container logs to CloudWatch Logs"}),"\n",(0,a.jsx)(n.li,{children:"Pull Docker image from ECR"}),"\n",(0,a.jsx)(n.li,{children:"Reference sensitive data in Secrets Manager or SSM Parameter Store"}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"ecs-task-role",children:"ECS Task Role"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Allows each task to have a specific role"}),"\n",(0,a.jsx)(n.li,{children:"Use different roles for the different ECS Services you run"}),"\n",(0,a.jsx)(n.li,{children:"Task Role is defined in the task definition"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"ecs-task-role",src:s(82433).A+"",width:"751",height:"754"})}),"\n",(0,a.jsx)(n.h3,{id:"load-balancer-integrations",children:"Load Balancer Integrations"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Application Load Balancer supported and works for most use cases"}),"\n",(0,a.jsx)(n.li,{children:"Network Load Balancer recommended only for high throughput / high performance use cases, or to pair it with AWS Private Link"}),"\n",(0,a.jsx)(n.li,{children:"Classic Load Balancer supported but not recommended (no advanced features \u2013 no Fargate)"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"load-balancer-ecs",src:s(60570).A+"",width:"874",height:"786"})}),"\n",(0,a.jsx)(n.h3,{id:"data-volumes-efs",children:"Data Volumes (EFS)"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Mount EFS file systems onto ECS tasks"}),"\n",(0,a.jsx)(n.li,{children:"Works for both EC2 and Fargate launch types"}),"\n",(0,a.jsx)(n.li,{children:"Tasks running in any AZ will share the same data in the EFS file system"}),"\n",(0,a.jsx)(n.li,{children:"Fargate + EFS = Serverless"}),"\n",(0,a.jsx)(n.li,{children:"Use cases: persistent multi-AZ shared storage for your containers"}),"\n",(0,a.jsx)(n.li,{children:"Note: Amazon S3 cannot be mounted as a file system"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"ecs-efs",src:s(89705).A+"",width:"610",height:"814"})}),"\n",(0,a.jsx)(n.h3,{id:"auto-scaling",children:"Auto Scaling"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Automatically increase/decrease the desired number of ECS tasks"}),"\n",(0,a.jsxs)(n.li,{children:["Amazon ECS Auto Scaling uses AWS Application Auto Scaling","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"ECS Service Average CPU Utilization"}),"\n",(0,a.jsx)(n.li,{children:"ECS Service Average Memory Utilization - Scale on RAM"}),"\n",(0,a.jsx)(n.li,{children:"ALB Request Count Per Target \u2013 metric coming from the ALB"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Target Tracking \u2013 scale based on target value for a specific CloudWatch metric"}),"\n",(0,a.jsx)(n.li,{children:"Step Scaling \u2013 scale based on a specified CloudWatch Alarm"}),"\n",(0,a.jsx)(n.li,{children:"Scheduled Scaling \u2013 scale based on a specified date/time (predictable changes)"}),"\n",(0,a.jsx)(n.li,{children:"ECS Service Auto Scaling (task level) \u2260 EC2 Auto Scaling (EC2 instance level)"}),"\n",(0,a.jsx)(n.li,{children:"Fargate Auto Scaling is much easier to setup (because Serverless)"}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"launch-type--auto-scaling-ec2-instances",children:"Launch Type \u2013 Auto Scaling EC2 Instances"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Accommodate ECS Service Scaling by adding underlying EC2 Instances"}),"\n",(0,a.jsxs)(n.li,{children:["Auto Scaling Group Scaling","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Scale your ASG based on CPU Utilization"}),"\n",(0,a.jsx)(n.li,{children:"Add EC2 instances over time"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["ECS Cluster Capacity Provider","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Used to automatically provision and scale the infrastructure for your ECS Tasks"}),"\n",(0,a.jsx)(n.li,{children:"Capacity Provider paired with an Auto Scaling Group"}),"\n",(0,a.jsx)(n.li,{children:"Add EC2 Instances when you\u2019re missing capacity (CPU, RAM\u2026)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"ecs-scaling",src:s(73586).A+"",width:"1765",height:"925"})}),"\n",(0,a.jsx)(n.h3,{id:"ecs-rolling-updates",children:"ECS Rolling Updates"}),"\n",(0,a.jsx)(n.p,{children:"When updating from v1 to v2, we can control:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"how many tasks can be started and stopped"}),"\n",(0,a.jsx)(n.li,{children:"and in which order"}),"\n",(0,a.jsx)(n.li,{children:"done by giving minimum and maximum healthy services percentage"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"ecs-tasks-invoked-by-event-bridge",children:"ECS tasks invoked by Event Bridge"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Tasks can be invoked through an event"}),"\n",(0,a.jsx)(n.li,{children:"Can also be done on a schedule instead of on an action (e.g. every hour)"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"ecs-event-bridge",src:s(49375).A+"",width:"1627",height:"771"})}),"\n",(0,a.jsx)(n.h3,{id:"intercept-stopped-tasks-using-eventbridge",children:"Intercept Stopped Tasks using EventBridge"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"ecs-event-pattern",src:s(76932).A+"",width:"1645",height:"766"})}),"\n",(0,a.jsx)(n.h3,{id:"task-definitions",children:"Task Definitions"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Task definitions are metadata in JSON form to tell ECS how to run a Docker container"}),"\n",(0,a.jsxs)(n.li,{children:["It contains crucial information, such as:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Image Name"}),"\n",(0,a.jsx)(n.li,{children:"Port Binding for Container and Host"}),"\n",(0,a.jsx)(n.li,{children:"Memory and CPU required"}),"\n",(0,a.jsx)(n.li,{children:"Environment variables"}),"\n",(0,a.jsx)(n.li,{children:"Networking information"}),"\n",(0,a.jsx)(n.li,{children:"IAM Role"}),"\n",(0,a.jsx)(n.li,{children:"Logging configuration (ex CloudWatch)"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Can define up to 10 containers in a Task Definition"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"load-balancing",children:"Load Balancing"}),"\n",(0,a.jsx)(n.h4,{id:"ec2-launch-type-1",children:"EC2 Launch Type"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"We get a Dynamic Host Port Mapping if you define only the container port in the task definition"}),"\n",(0,a.jsx)(n.li,{children:"The ALB finds the right port on your EC2 Instances"}),"\n",(0,a.jsx)(n.li,{children:"You must allow on the EC2 instance\u2019s Security Group any port from the ALB\u2019s Security Group"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"ecs-load-balancing",src:s(50903).A+"",width:"1000",height:"769"})}),"\n",(0,a.jsx)(n.h4,{id:"fargate",children:"Fargate"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Each tas has a unique private IP"}),"\n",(0,a.jsx)(n.li,{children:"Only define the container port (host port is not applicable)"}),"\n",(0,a.jsxs)(n.li,{children:["Example","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["ECS ENI Security Group","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Allow port 80 from the ALB"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["ALB Security Group","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Allow port 80/443 from web"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"load-balancing-fargate",src:s(15022).A+"",width:"982",height:"781"})}),"\n",(0,a.jsx)(n.h3,{id:"one-iam-role-per-task-definition",children:"One IAM Role per Task Definition"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Each task definition can take a task role"}),"\n",(0,a.jsx)(n.li,{children:"The task role can control the access to resources"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"ecs-task-role-rule",src:s(63078).A+"",width:"1326",height:"727"})}),"\n",(0,a.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Environment Variable","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Hardcoded \u2013 e.g., URLs"}),"\n",(0,a.jsx)(n.li,{children:"SSM Parameter Store \u2013 sensitive variables (e.g., API keys, shared configs)"}),"\n",(0,a.jsx)(n.li,{children:"Secrets Manager \u2013 sensitive variables (e.g., DB passwords)"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Environment Files (bulk) \u2013 Amazon S3"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"environment-variables",src:s(93114).A+"",width:"1153",height:"415"})}),"\n",(0,a.jsx)(n.h3,{id:"data-volumes-bind-mounts",children:"Data Volumes (Bind Mounts)"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Share data between multiple containers in the same Task Definition"}),"\n",(0,a.jsx)(n.li,{children:"Works for both EC2 and Fargate tasks"}),"\n",(0,a.jsxs)(n.li,{children:["EC2 Tasks \u2013 using EC2 instance storage","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Data are tied to the lifecycle of the EC2 instance"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Fargate Tasks \u2013 using ephemeral storage","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Data are tied to the container(s) using them"}),"\n",(0,a.jsx)(n.li,{children:"20 GiB \u2013 200 GiB (default 20 GiB)"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Use cases:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Share ephemeral data between multiple containers"}),"\n",(0,a.jsx)(n.li,{children:"\u201cSidecar\u201d container pattern, where the \u201csidecar\u201d container used to send metrics/logs to other destinations (separation of conerns)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"data-volumes",src:s(24087).A+"",width:"609",height:"718"})}),"\n",(0,a.jsx)(n.h3,{id:"task-placement",children:"Task Placement"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"When an ECS task is started with EC2 Launch Type, ECS must determine where to place it, with the constraints of CPU and memory (RAM)"}),"\n",(0,a.jsx)(n.li,{children:"Similarly, when a service scales in, ECS needs to determine which task to terminate"}),"\n",(0,a.jsxs)(n.li,{children:["You can define:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Task Placement Strategy"}),"\n",(0,a.jsx)(n.li,{children:"Task Placement Constraints"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Note: only for ECS Tasks with EC2 Launch Type (Fargate not supported)"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"ecs-task-placement",src:s(11704).A+"",width:"828",height:"720"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Task Placement Strategies are a best effort"}),"\n",(0,a.jsxs)(n.li,{children:["When Amazon ECS places a task, it uses the following process to select the appropriate EC2 Container instance:","\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Identify which instances that satisfy the CPU, memory, and port requirements"}),"\n",(0,a.jsx)(n.li,{children:"Identify which instances that satisfy the Task Placement Constraints"}),"\n",(0,a.jsx)(n.li,{children:"Identify which instances that satisfy the Task Placement Strategies"}),"\n",(0,a.jsx)(n.li,{children:"Select the instances"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"binpack",children:"Binpack"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Tasks are placed on the least available amount of CPU and Memory"}),"\n",(0,a.jsx)(n.li,{children:"Minimizes the number of EC2 instances in use (cost savings)"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"binpack",src:s(55845).A+"",width:"1468",height:"535"})}),"\n",(0,a.jsx)(n.h4,{id:"random",children:"Random"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Tasks are placed randomly"}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"spread",children:"Spread"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Tasks are placed evenly based on the specified value"}),"\n",(0,a.jsxs)(n.li,{children:["Example: instanceId, attribute",":ecs",".availability-zone, \u2026"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"spread",src:s(61608).A+"",width:"1743",height:"562"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"placement-mix",src:s(83521).A+"",width:"1642",height:"642"})}),"\n",(0,a.jsx)(n.h3,{id:"task-placement-constraints",children:"Task Placement Constraints"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["distinctInstance","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Tasks are placed on a different EC2 instance"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["memberOf","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Tasks are placed on EC2 instances that satisfy a specified expression"}),"\n",(0,a.jsx)(n.li,{children:"Uses the Cluster Query Language (advanced)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"placement-constraints",src:s(4719).A+"",width:"1578",height:"279"})}),"\n",(0,a.jsx)(n.h2,{id:"amazon-ecr",children:"Amazon ECR"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"ECR = Elastic Container Registry"}),"\n",(0,a.jsx)(n.li,{children:"Store and manage Docker images on AWS"}),"\n",(0,a.jsxs)(n.li,{children:["Private and Public repository (Amazon ECR Public Gallery ",(0,a.jsx)(n.a,{href:"https://gallery.ecr.aws",children:"https://gallery.ecr.aws"}),")"]}),"\n",(0,a.jsx)(n.li,{children:"Fully integrated with ECS, backed by Amazon S3 Access is controlled through IAM (permission errors => policy)"}),"\n",(0,a.jsx)(n.li,{children:"Supports image vulnerability scanning, versioning, image tags, image lifecycle, \u2026"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"ecr",src:s(97187).A+"",width:"417",height:"808"})}),"\n",(0,a.jsx)(n.h3,{id:"using-aws-cli",children:"Using AWS CLI"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Login Command","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"aws ecr get-login-password --region region | docker login --username AWS--password-stdin aws_account_id.dkr.ecr.region.amazonaws.com"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Docker Commands","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["docker push aws_account_id.dkr.ecr.region.amazonaws.com/demo",":latest"]}),"\n",(0,a.jsxs)(n.li,{children:["docker pull aws_account_id.dkr.ecr.region.amazonaws.com/demo",":latest"]}),"\n",(0,a.jsx)(n.li,{children:"In case an EC2 instance (or you) can\u2019t pull a Docker image, check IAM permissions"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"aws-copilot",children:"AWS Copilot"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"CLI tool to build, release, and operate production-ready containerized apps"}),"\n",(0,a.jsx)(n.li,{children:"Run your apps on AppRunner, ECS, and Fargate"}),"\n",(0,a.jsx)(n.li,{children:"Helps you focus on building apps rather than setting up infrastructure"}),"\n",(0,a.jsx)(n.li,{children:"Provisions all required infrastructure for containerized apps (ECS, VPC, ELB, ECR\u2026)"}),"\n",(0,a.jsx)(n.li,{children:"Automated deployments with one command using CodePipeline"}),"\n",(0,a.jsx)(n.li,{children:"Deploy to multiple environments"}),"\n",(0,a.jsx)(n.li,{children:"Troubleshooting, logs, health status\u2026"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"copilot",src:s(72741).A+"",width:"1713",height:"355"})}),"\n",(0,a.jsx)(n.h2,{id:"amazon-eks-overview",children:"Amazon EKS Overview"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Amazon EKS = Amazon Elastic Kubernetes Service"}),"\n",(0,a.jsx)(n.li,{children:"It is a way to launch managed Kubernetes clusters on AWS"}),"\n",(0,a.jsx)(n.li,{children:"Kubernetes is an open-source system for automatic deployment, scaling and management of containerized (usually Docker) application"}),"\n",(0,a.jsx)(n.li,{children:"It\u2019s an alternative to ECS, similar goal but different API"}),"\n",(0,a.jsx)(n.li,{children:"EKS supports EC2 if you want to deploy worker nodes or Fargate to deploy serverless containers"}),"\n",(0,a.jsx)(n.li,{children:"Use case: if your company is already using Kubernetes on-premises or in another cloud, and wants to migrate to AWS using Kubernetes"}),"\n",(0,a.jsx)(n.li,{children:"Kubernetes is cloud-agnostic (can be used in any cloud \u2013 Azure, GCP\u2026)"}),"\n",(0,a.jsx)(n.li,{children:"For multiple regions, deploy one EKS cluster per region"}),"\n",(0,a.jsx)(n.li,{children:"Collect logs and metrics using CloudWatch Container Insights"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"eks",src:s(36258).A+"",width:"1741",height:"775"})}),"\n",(0,a.jsx)(n.h3,{id:"node-types",children:"Node Types"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Managed Node Groups","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Creates and manages Nodes (EC2 instances) for you"}),"\n",(0,a.jsx)(n.li,{children:"Nodes are part of an ASG managed by EKS"}),"\n",(0,a.jsx)(n.li,{children:"Supports On-Demand or Spot Instances"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Self-Managed Nodes","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Nodes created by you and registered to the EKS cluster and managed by an ASG"}),"\n",(0,a.jsx)(n.li,{children:"You can use prebuilt AMI - Amazon EKS Optimized AMI"}),"\n",(0,a.jsx)(n.li,{children:"Supports On-Demand or Spot Instances"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["AWS Fargate","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"No maintenance required; no nodes managed"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"data-volumes",children:"Data Volumes"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Need to specify StorageClass manifest on your EKS cluster"}),"\n",(0,a.jsx)(n.li,{children:"Leverages a Container Storage Interface (CSI) compliant driver"}),"\n",(0,a.jsxs)(n.li,{children:["Support for\u2026","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Amazon EBS"}),"\n",(0,a.jsx)(n.li,{children:"Amazon EFS (works with Fargate)"}),"\n",(0,a.jsx)(n.li,{children:"Amazon FSx for Lustre"}),"\n",(0,a.jsx)(n.li,{children:"Amazon FSx for NetApp ONTAP"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},33017:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/amazon-ecs-a64d95d89614d6bd03783accb77d2e8b.png"},55845:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/binpack-bb68368ed44bdcd5f1326ac2baa538ef.png"},72741:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/copilot-21139c96533029ecea6e666b69b6e8be.png"},24087:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/data-volumes-50c5c886ed4a41849d1c5b523d111e98.png"},97187:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/ecr-14a5c61e09347398ed4ff318b861a87a.png"},89705:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/ecs-efs-25fb5d645edbd39381f10bed90f3a665.png"},49375:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/ecs-event-bridge-9abcc97846c63c3b110de666f4375464.png"},76932:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/ecs-event-pattern-08291a8656b3af1bbdf6351f6eba4d71.png"},50903:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/ecs-load-balancing-3da61144334d4506f07fe72183103a59.png"},73586:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/ecs-scaling-509899ccfcf275ec6dc2875a53eb7e88.png"},11704:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/ecs-task-placement-94478813d77496c1ef626505b42d0638.png"},63078:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/ecs-task-role-rule-72c62c7c28e4c5114788e9dbc6aa39d4.png"},82433:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/ecs-task-role-0d493934b05c6526ff24f5b97e0245c5.png"},36258:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/eks-b34c239bd99bf85f94f4cdef5424d37c.png"},93114:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/environment-variables-a7018f44fc397bbc07b461f4eda7c21d.png"},60570:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/load-balancer-ecs-9dca92a2de00fcf544503d89e6664f07.png"},15022:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/load-balancing-fargate-cb9170c4c3e00ad25f3de84dad025a87.png"},4719:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/placement-constraints-a94ae2db67f9d9a7dde1fac30367bfa5.png"},83521:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/placement-mix-ae0bdab089a28189f9b786d840968018.png"},61608:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/spread-1b5fd8d07bd9939bae327b3c93e370a3.png"},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>r});var i=s(96540);const a={},l=i.createContext(a);function t(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);