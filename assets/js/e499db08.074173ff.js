"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[9176],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>b});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var i=n.createContext({}),p=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,s=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(a),m=l,b=d["".concat(i,".").concat(m)]||d[m]||u[m]||s;return a?n.createElement(b,r(r({ref:t},c),{},{components:a})):n.createElement(b,r({ref:t},c))}));function b(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var s=a.length,r=new Array(s);r[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[d]="string"==typeof e?e:l,r[1]=o;for(var p=2;p<s;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9823:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var n=a(7462),l=(a(7294),a(3905));const s={id:"table-relationships",title:"Table Relationships",sidebar_position:3},r=void 0,o={unversionedId:"databases/sql/core-concepts/database-design/table-relationships",id:"databases/sql/core-concepts/database-design/table-relationships",title:"Table Relationships",description:"Relational databases are powerful because of the relationships between the tables. These relationships help us to keep our databases clean and efficient. A relationship between tables assumes that one of these tables has a foreign key that references the primary key of another table.",source:"@site/docs/databases/sql/core-concepts/database-design/table-relationships.md",sourceDirName:"databases/sql/core-concepts/database-design",slug:"/databases/sql/core-concepts/database-design/table-relationships",permalink:"/LearningCollection/databases/sql/core-concepts/database-design/table-relationships",draft:!1,editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/databases/sql/core-concepts/database-design/table-relationships.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"table-relationships",title:"Table Relationships",sidebar_position:3},sidebar:"finance",previous:{title:"Database Schema",permalink:"/LearningCollection/databases/sql/core-concepts/database-design/database-schema"},next:{title:"Normalization",permalink:"/LearningCollection/databases/sql/core-concepts/database-design/normalization"}},i={},p=[{value:"Types of relationships",id:"types-of-relationships",level:2},{value:"One-to-one",id:"one-to-one",level:3},{value:"One-to-many",id:"one-to-many",level:3},{value:"Examples",id:"examples",level:4},{value:"Many-to-many",id:"many-to-many",level:3},{value:"Examples",id:"examples-1",level:4}],c={toc:p},d="wrapper";function u(e){let{components:t,...s}=e;return(0,l.kt)(d,(0,n.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Relational databases are powerful because of the relationships between the tables. These relationships help us to keep our databases clean and efficient. A relationship between tables assumes that one of these tables has a ",(0,l.kt)("inlineCode",{parentName:"p"},"foreign key")," that references the ",(0,l.kt)("inlineCode",{parentName:"p"},"primary key")," of another table."),(0,l.kt)("h2",{id:"types-of-relationships"},"Types of relationships"),(0,l.kt)("p",null,"There are 3 primary types of relationships in a relational database:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"One-to-one"),(0,l.kt)("li",{parentName:"ul"},"One-to-many"),(0,l.kt)("li",{parentName:"ul"},"Many-to-many")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"relations",src:a(8852).Z,width:"763",height:"340"})),(0,l.kt)("h3",{id:"one-to-one"},"One-to-one"),(0,l.kt)("p",null,"A one-to-one relationship most often manifests as a field or set of fields on a row in a table. For example, a user will have exactly one password."),(0,l.kt)("h3",{id:"one-to-many"},"One-to-many"),(0,l.kt)("p",null,"A one-to-many relationship is probably the most commonly used relationship. A one-to-many relationship occurs when a single record in one table is related to potentially many records in another table."),(0,l.kt)("h4",{id:"examples"},"Examples"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A ",(0,l.kt)("inlineCode",{parentName:"li"},"customers")," table and a ",(0,l.kt)("inlineCode",{parentName:"li"},"orders")," table. Each customer has 0, 1, or many orders that they've placed"),(0,l.kt)("li",{parentName:"ul"},"A ",(0,l.kt)("inlineCode",{parentName:"li"},"users")," table and a ",(0,l.kt)("inlineCode",{parentName:"li"},"transactions")," table. Each user has 0, 1, or many transactions that taken part in.")),(0,l.kt)("h3",{id:"many-to-many"},"Many-to-many"),(0,l.kt)("p",null,"A many-to-many relationship occurs when multiple records in one table can be related to multiple records in another table."),(0,l.kt)("h4",{id:"examples-1"},"Examples"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A ",(0,l.kt)("inlineCode",{parentName:"li"},"products")," table and a ",(0,l.kt)("inlineCode",{parentName:"li"},"suppliers")," table - Products may have 0 to many suppliers, and suppliers can supply 0 to many products."),(0,l.kt)("li",{parentName:"ul"},"A ",(0,l.kt)("inlineCode",{parentName:"li"},"classes")," table and a ",(0,l.kt)("inlineCode",{parentName:"li"},"students")," table - Students can take potentially many classes and classes can have many students enrolled.")),(0,l.kt)("p",null,'This type of relationship is usually implemented using a third table, often called a "join table", "junction table" or "link table". This table contains the ',(0,l.kt)("inlineCode",{parentName:"p"},"primary key")," of each of the tables it's joining together:"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"link-table",src:a(5851).Z,width:"1072",height:"281"})))}u.isMDXComponent=!0},5851:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/link-table-d38a06c3f7c1fa10dd1daabdc215177b.svg"},8852:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/relations-8030087c53ee875a0c3394918b164b4c.png"}}]);