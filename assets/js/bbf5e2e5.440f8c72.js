"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[7871],{66358:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"kubernetes/architecture","title":"Architecture","description":"This diagram shows the main components of a Kubernetes cluster:","source":"@site/docs/kubernetes/architecture.md","sourceDirName":"kubernetes","slug":"/kubernetes/architecture","permalink":"/LearningCollection/kubernetes/architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/kubernetes/architecture.md","tags":[],"version":"current","frontMatter":{"id":"architecture","title":"Architecture"},"sidebar":"docs","previous":{"title":"Notes on MongoDB","permalink":"/LearningCollection/databases/mongodb/m220n-mongodb-for-dotnet-developers/notesOnMongoDB"},"next":{"title":"CKA Exam notes","permalink":"/LearningCollection/kubernetes/cka-exam"}}');var s=r(74848),l=r(28453);const i={id:"architecture",title:"Architecture"},o=void 0,c={},d=[{value:"Master Node Components",id:"master-node-components",level:2},{value:"etcd",id:"etcd",level:3},{value:"Kube API Server",id:"kube-api-server",level:3},{value:"Example: Create pod",id:"example-create-pod",level:4},{value:"Kube Controller Manager",id:"kube-controller-manager",level:3},{value:"Kube Scheduler",id:"kube-scheduler",level:3},{value:"Worker Node Components",id:"worker-node-components",level:2},{value:"Kubelet",id:"kubelet",level:3},{value:"Kube Proxy",id:"kube-proxy",level:3},{value:"Container Runtime",id:"container-runtime",level:3}];function a(e){const n={h2:"h2",h3:"h3",h4:"h4",li:"li",mermaid:"mermaid",ol:"ol",p:"p",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.mermaid,{value:'graph TB\n    subgraph "Master Node"\n        API[kube-apiserver]\n        CM[kube-controller-manager]\n        SCHED[kube-scheduler]\n        ETCD[(etcd)]\n        \n        ETCD --\x3e API\n        API --\x3e CM\n        API --\x3e SCHED\n    end\n    \n    subgraph "Worker Node"\n        KUBELET[kubelet]\n        PROXY[kube-proxy]\n        CONTAINER[Container Runtime]\n        \n        KUBELET --\x3e API\n        PROXY --\x3e API\n        KUBELET --\x3e CONTAINER\n    end\n\n    style API fill:#4285f4,stroke:#000,color:#fff\n    style ETCD fill:#db4437,stroke:#000,color:#fff\n    style CM fill:#0f9d58,stroke:#000,color:#fff\n    style SCHED fill:#9334e6,stroke:#000,color:#fff\n    style KUBELET fill:#fbbc04,stroke:#000,color:#fff\n    style PROXY fill:#fa7b17,stroke:#000,color:#fff'}),"\n",(0,s.jsx)(n.p,{children:"This diagram shows the main components of a Kubernetes cluster:"}),"\n",(0,s.jsx)(n.h2,{id:"master-node-components",children:"Master Node Components"}),"\n",(0,s.jsx)(n.h3,{id:"etcd",children:"etcd"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Key-value store that stores all cluster data"}),"\n",(0,s.jsx)(n.li,{children:"Can be distributed across different nodes in the cluster"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"kube-api-server",children:"Kube API Server"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"API server that exposes the Kubernetes API"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-create-pod",children:"Example: Create pod"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Authenticates user"}),"\n",(0,s.jsx)(n.li,{children:"Validates request"}),"\n",(0,s.jsx)(n.li,{children:"Retrieves data"}),"\n",(0,s.jsx)(n.li,{children:"Update ETCD"}),"\n",(0,s.jsx)(n.li,{children:"Is being monitored by the kube-scheduler which communicates which node to place pod on"}),"\n",(0,s.jsx)(n.li,{children:"Communicates to kubelet to create the pod"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"kube-controller-manager",children:"Kube Controller Manager"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Watches state of the system"}),"\n",(0,s.jsx)(n.li,{children:"Brings system to desired state through the api-server"}),"\n",(0,s.jsxs)(n.li,{children:["Node Controller","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Polls nodes every 5s"}),"\n",(0,s.jsx)(n.li,{children:"Grace period 40s (NotReady)"}),"\n",(0,s.jsx)(n.li,{children:"Eviction after 5min"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Replication Controller","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Monitors replica sets"}),"\n",(0,s.jsx)(n.li,{children:"Assures desired number of pods are available"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"kube-scheduler",children:"Kube Scheduler"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Schedules pods based on available resources and affinity/taints"}),"\n",(0,s.jsxs)(n.li,{children:["Process:","\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Filter nodes"}),"\n",(0,s.jsx)(n.li,{children:"Rank nodes"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"worker-node-components",children:"Worker Node Components"}),"\n",(0,s.jsx)(n.h3,{id:"kubelet",children:"Kubelet"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Agent that runs on each node and ensures containers are running in a pod"}),"\n",(0,s.jsx)(n.li,{children:"Monitors nodes & pods and reports to the api-server"}),"\n",(0,s.jsx)(n.li,{children:"Registers the node with the cluster"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"kube-proxy",children:"Kube Proxy"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Network proxy that maintains network rules on nodes (to forward traffic to services)"}),"\n",(0,s.jsx)(n.li,{children:"Maps IP of service to IP of the right pod"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"container-runtime",children:"Container Runtime"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Software responsible for running containers (e.g., Docker, containerd)"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var t=r(96540);const s={},l=t.createContext(s);function i(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);