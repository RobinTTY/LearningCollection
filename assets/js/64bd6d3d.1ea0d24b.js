"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[2260],{38549:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"csharp/libraries/hot-chocolate/types/unions","title":"Unions","description":"A union type represents a set of object types. It is very similar to an interface, except that there is no requirement for common fields between the specified types.","source":"@site/docs/csharp/libraries/hot-chocolate/types/unions.md","sourceDirName":"csharp/libraries/hot-chocolate/types","slug":"/csharp/libraries/hot-chocolate/types/unions","permalink":"/LearningCollection/csharp/libraries/hot-chocolate/types/unions","draft":false,"unlisted":false,"editUrl":"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/csharp/libraries/hot-chocolate/types/unions.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"unions","title":"Unions","sidebar_position":5},"sidebar":"docs","previous":{"title":"Interfaces","permalink":"/LearningCollection/csharp/libraries/hot-chocolate/types/interfaces"},"next":{"title":"System.Text.Json","permalink":"/LearningCollection/csharp/libraries/system-text-json"}}');var o=n(74848),i=n(28453);const r={id:"unions",title:"Unions",sidebar_position:5},c=void 0,a={},l=[];function p(e){const t={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"A union type represents a set of object types. It is very similar to an interface, except that there is no requirement for common fields between the specified types."}),"\n",(0,o.jsx)(t.p,{children:"Unions can be defined like the following:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",children:'[UnionType("PostContent")]\npublic interface IPostContent\n{\n}\n\npublic class TextContent : IPostContent\n{\n    public string Text { get; set; }\n}\n\npublic class ImageContent : IPostContent\n{\n    public string ImageUrl { get; set; }\n\n    public int Height { get; set; }\n}\n\npublic class Query\n{\n    public IPostContent GetContent()\n    {\n        // Omitted code for brevity\n    }\n}\n'})}),"\n",(0,o.jsx)(t.p,{children:"We use a marker interface (or an abstract class) to define object types as part of a union."})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var s=n(96540);const o={},i=s.createContext(o);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);