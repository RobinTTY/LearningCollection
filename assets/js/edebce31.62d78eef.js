"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[4416],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),s=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return i.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=r,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return n?i.createElement(f,a(a({ref:t},u),{},{components:n})):i.createElement(f,a({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9298:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var i=n(7462),r=n(3366),o=(n(7294),n(3905)),a=["components"],l={id:"dllSideLoading",title:"DLL Side-Loading",sidebar_position:3},c=void 0,s={unversionedId:"Security/dllSideLoading",id:"Security/dllSideLoading",isDocsHomePage:!1,title:"DLL Side-Loading",description:"- Category: Defense Evasion",source:"@site/docs/Security/DLL Side-Loading.md",sourceDirName:"Security",slug:"/Security/dllSideLoading",permalink:"/LearningCollection/Security/dllSideLoading",editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/Security/DLL Side-Loading.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"dllSideLoading",title:"DLL Side-Loading",sidebar_position:3},sidebar:"mySidebar",previous:{title:"Trusted Developer Utilities",permalink:"/LearningCollection/Security/trustedDeveloperUtilities"},next:{title:"Interesting Topics",permalink:"/LearningCollection/Interesting Topics/interestingTopics"}},u=[{value:"Examples of DLL Side-Loading",id:"examples-of-dll-side-loading",children:[{value:"OceanLotus KerrDown",id:"oceanlotus-kerrdown",children:[]}]}],d={toc:u};function p(e){var t=e.components,n=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Category: Defense Evasion"),(0,o.kt)("li",{parentName:"ul"},"Technique: Hijack Execution Flow"),(0,o.kt)("li",{parentName:"ul"},"Goal: Execute malicious payload")),(0,o.kt)("p",null,"DLL Side-Loading involves execution of a malicious payload in form of a DLL. Rather than just planting the DLL within the search order of a program (to await invocation by a user process) the adversaries may directly side-load the payload by invoking a legitimate application that executes the payload."),(0,o.kt)("h2",{id:"examples-of-dll-side-loading"},"Examples of DLL Side-Loading"),(0,o.kt)("h3",{id:"oceanlotus-kerrdown"},"OceanLotus KerrDown"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"OceanLotus (APT32) is a sophisticated threat actor originating out of south east asia"),(0,o.kt)("li",{parentName:"ul"},"KerrDown uses DLL Side-Loading to load ",(0,o.kt)("a",{parentName:"li",href:"https://www.infocyte.com/cyber-security/2020/09/02/cobalt-strike-the-new-favorite-among-thieves/"},"Cobalt Strike")," beacons into memory")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://unit42.paloaltonetworks.com/wp-content/uploads/2019/01/Figure-6-Execution-flow-of-sideloaded-malicious-downloader.png",alt:"KerrDown"})),(0,o.kt)("h4",{id:"process"},"Process"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Victim needs to open a lure document, which includes an image file with a message in Vietnamese which that asks the victim to enable macros to view the contents of the file\n",(0,o.kt)("img",{parentName:"li",src:"https://unit42.paloaltonetworks.com/wp-content/uploads/2019/01/Figure-1-Lure-document.png",alt:"Delivery"})),(0,o.kt)("li",{parentName:"ul"},"Two different base64 blobs are inserted in the page in separate tables, the font size has been changed to 1 which may deceive victims to overlook the content",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"this may be used to hide the content from automated tools which can detect the presence of an embedded binary within files")))),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://unit42.paloaltonetworks.com/wp-content/uploads/2019/01/Figure-2-Base64-encoded-pedll-files-embedded-as-text-in-the-document..png",alt:"Base64"})))}p.isMDXComponent=!0}}]);