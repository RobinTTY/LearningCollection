"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[6324],{19004:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"web/css/basics/types-of-css","title":"Types of CSS","description":"There are several ways to apply CSS styles to an HTML document. Those are:","source":"@site/docs/web/css/basics/types-of-css.md","sourceDirName":"web/css/basics","slug":"/web/css/basics/types-of-css","permalink":"/LearningCollection/web/css/basics/types-of-css","draft":false,"unlisted":false,"editUrl":"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/web/css/basics/types-of-css.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"types-of-css","title":"Types of CSS","sidebar_position":1},"sidebar":"docs","previous":{"title":"Interface Elements","permalink":"/LearningCollection/web/html/interface-elements"},"next":{"title":"Selectors","permalink":"/LearningCollection/web/css/basics/selectors"}}');var l=t(74848),i=t(28453);const r={id:"types-of-css",title:"Types of CSS",sidebar_position:1},a=void 0,c={},o=[{value:"External CSS",id:"external-css",level:2},{value:"Internal CSS",id:"internal-css",level:2},{value:"Inline CSS",id:"inline-css",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.p,{children:"There are several ways to apply CSS styles to an HTML document. Those are:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"External CSS"}),"\n",(0,l.jsx)(n.li,{children:"Internal CSS"}),"\n",(0,l.jsx)(n.li,{children:"Inline CSS"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"external-css",children:"External CSS"}),"\n",(0,l.jsxs)(n.p,{children:["CSS styles written in a separate file are called ",(0,l.jsx)(n.strong,{children:"External Style Sheets"}),". To include External Style Sheets in an HTML document, use an unpaired ",(0,l.jsx)(n.code,{children:"<link>"})," tag:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-html",metastring:'title="index.html" {6}',children:'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <title>Connecting External CSS to HTML</title>\n    <link rel="stylesheet" href="style.css" />\n  </head>\n  <body></body>\n</html>\n'})}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"href"})," attribute specifies the file's address, and the ",(0,l.jsx)(n.code,{children:"rel"})," attribute with the stylesheet value tells the browser that we are connecting styles and not something else."]}),"\n",(0,l.jsxs)(n.p,{children:["It is best to include the styles inside the ",(0,l.jsx)(n.code,{children:"<head>"}),", but it's not a strong requirement. The ",(0,l.jsx)(n.code,{children:"<link>"})," tag will also work fine elsewhere on the page."]}),"\n",(0,l.jsx)(n.h2,{id:"internal-css",children:"Internal CSS"}),"\n",(0,l.jsxs)(n.p,{children:["CSS styles can be written directly in HTML markup instead of a separate file. Such sets of styles are usually called ",(0,l.jsx)(n.strong,{children:"Internal Style Sheets"}),". They are wrapped in a paired ",(0,l.jsx)(n.code,{children:"<style>"})," tag and must be located inside ",(0,l.jsx)(n.code,{children:"<head>"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-html",metastring:'title="index.html" {6-10}',children:'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <title>Connecting Internal CSS to HTML</title>\n    <style>\n      body {\n        background-color: #f0f0f0;\n      }\n    </style>\n  </head>\n  <body></body>\n</html>\n'})}),"\n",(0,l.jsx)(n.p,{children:"This method of connection is usually only good when there are very few styles."}),"\n",(0,l.jsx)(n.h2,{id:"inline-css",children:"Inline CSS"}),"\n",(0,l.jsx)(n.p,{children:"You can also define a style for a single element using the HTML attribute style. In this case, CSS properties are written as attribute values:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-html",metastring:'title="index.html" {8}',children:'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <title>Connecting Internal CSS to HTML</title>\n  </head>\n  <body>\n    <p style="css property; css property;">Inline CSS</p>\n  </body>\n</html>\n'})}),"\n",(0,l.jsx)(n.p,{children:"However, this way of connection is considered bad practice because it complicates project support since the code becomes more difficult to read."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(96540);const l={},i=s.createContext(l);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);