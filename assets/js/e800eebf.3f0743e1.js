"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[7386],{6706:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var t=s(4848),o=s(8453);const r={id:"functionalVsClassComponents",title:"Functional vs Class Components",sidebar_position:4},a=void 0,c={id:"web/react/core-concepts/functionalVsClassComponents",title:"Functional vs Class Components",description:"In the world of React, there are two basic ways of writing a React component. One uses a function and the other uses a class. With the introduction of React hooks, the React team pushes the use of functional components whenever possible (which better follows JavaScript's functional nature).",source:"@site/docs/web/react/core-concepts/Functional vs Class Components.md",sourceDirName:"web/react/core-concepts",slug:"/web/react/core-concepts/functionalVsClassComponents",permalink:"/LearningCollection/web/react/core-concepts/functionalVsClassComponents",draft:!1,unlisted:!1,editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/web/react/core-concepts/Functional vs Class Components.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"functionalVsClassComponents",title:"Functional vs Class Components",sidebar_position:4},sidebar:"docs",previous:{title:"Styling Components",permalink:"/LearningCollection/web/react/core-concepts/stylingComponents"},next:{title:"Context",permalink:"/LearningCollection/web/react/advanced-concepts/context"}},i={},l=[{value:"Example",id:"example",level:2},{value:"Functional Component",id:"functional-component",level:3},{value:"Class Component",id:"class-component",level:3}];function u(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["In the world of React, there are two basic ways of writing a React component. One uses a function and the other uses a class. With the introduction of ",(0,t.jsx)(n.a,{href:"https://reactjs.org/docs/hooks-intro.html",children:"React hooks"}),", the React team pushes the use of functional components whenever possible (which better follows JavaScript's functional nature)."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"https://reactjs.org/docs/hooks-intro.html#motivation",children:"motivation"})," behind this move is:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"It\u2019s hard to reuse stateful logic between components"}),"\n",(0,t.jsx)(n.li,{children:"Complex components become hard to understand"}),"\n",(0,t.jsx)(n.li,{children:"Classes confuse both people and machines"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["A functional component with hooks can do ",(0,t.jsx)(n.a,{href:"https://reactjs.org/docs/hooks-faq.html#do-hooks-cover-all-use-cases-for-classes",children:"almost"})," everything a class component can do, without any of the draw backs mentioned above. Where we still need class components is for instance for ",(0,t.jsx)(n.a,{href:"https://reactjs.org/docs/error-boundaries.html#introducing-error-boundaries",children:"error boundaries"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.h3,{id:"functional-component",children:"Functional Component"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'import { Component } from "react";\n\nimport User from "./User";\nimport classes from "./Users.module.css";\n\nconst DUMMY_USERS = [\n  { id: "u1", name: "John" },\n  { id: "u2", name: "Jess" },\n  { id: "u3", name: "Lia" },\n];\n\nconst Users = () => {\n  const [showUsers, setShowUsers] = useState(true);\n\n  const toggleUsersHandler = () => {\n    setShowUsers((curState) => !curState);\n  };\n\n  const usersList = (\n    <ul>\n      {DUMMY_USERS.map((user) => (\n        <User key={user.id} name={user.name} />\n      ))}\n    </ul>\n  );\n\n  return (\n    <div className={classes.users}>\n      <button onClick={toggleUsersHandler}>\n        {showUsers ? "Hide" : "Show"} Users\n      </button>\n      {showUsers && usersList}\n    </div>\n  );\n};\n\nexport default Users;\n'})}),"\n",(0,t.jsx)(n.h3,{id:"class-component",children:"Class Component"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'import { Component } from "react";\n\nimport User from "./User";\nimport classes from "./Users.module.css";\n\nconst DUMMY_USERS = [\n  { id: "u1", name: "Max" },\n  { id: "u2", name: "Manuel" },\n  { id: "u3", name: "Julie" },\n];\n\nclass Users extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showUsers: true,\n      more: "Test",\n    };\n  }\n\n  toggleUsersHandler() {\n    // this.state.showUsers = false; // NOT!\n    this.setState((curState) => {\n      return { showUsers: !curState.showUsers };\n    });\n  }\n\n  render() {\n    const usersList = (\n      <ul>\n        {DUMMY_USERS.map((user) => (\n          <User key={user.id} name={user.name} />\n        ))}\n      </ul>\n    );\n\n    return (\n      <div className={classes.users}>\n        <button onClick={this.toggleUsersHandler.bind(this)}>\n          {this.state.showUsers ? "Hide" : "Show"} Users\n        </button>\n        {this.state.showUsers && usersList}\n      </div>\n    );\n  }\n}\n\nexport default Users;\n'})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var t=s(6540);const o={},r=t.createContext(o);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);