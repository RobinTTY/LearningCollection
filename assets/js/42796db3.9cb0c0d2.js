"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[9438],{79734:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var s=n(74848),l=n(28453);const t={title:"Route 53",sidebar_position:7},r=void 0,a={id:"cloud/aws/certified-developer-associate/route53",title:"Route 53",description:"- Route 53 is a highly available, scalable, fully managed and Authoritative DNS",source:"@site/docs/cloud/aws/certified-developer-associate/route53.md",sourceDirName:"cloud/aws/certified-developer-associate",slug:"/cloud/aws/certified-developer-associate/route53",permalink:"/LearningCollection/cloud/aws/certified-developer-associate/route53",draft:!1,unlisted:!1,editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/cloud/aws/certified-developer-associate/route53.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Route 53",sidebar_position:7},sidebar:"docs",previous:{title:"ElastiCache",permalink:"/LearningCollection/cloud/aws/certified-developer-associate/elasti-cache"},next:{title:"Virtual Private Cloud (VPC)",permalink:"/LearningCollection/cloud/aws/certified-developer-associate/vpc"}},o={},c=[{value:"Route 53 \u2013 Records",id:"route-53--records",level:2},{value:"Record Types",id:"record-types",level:3},{value:"Route 53 \u2013 Hosted Zones",id:"route-53--hosted-zones",level:2},{value:"Public vs. Private Hosted Zones",id:"public-vs-private-hosted-zones",level:3},{value:"Records TTL (Time To Live)",id:"records-ttl-time-to-live",level:2},{value:"CNAME vs Alias",id:"cname-vs-alias",level:2},{value:"Alias Records",id:"alias-records",level:3},{value:"Alias Records Targets",id:"alias-records-targets",level:3},{value:"Routing Policies",id:"routing-policies",level:2},{value:"Simple",id:"simple",level:3},{value:"Weighted",id:"weighted",level:3},{value:"Latency-based",id:"latency-based",level:3},{value:"Health Checks",id:"health-checks",level:2},{value:"Monitor an Endpoint",id:"monitor-an-endpoint",level:3},{value:"Calculated Health Checks",id:"calculated-health-checks",level:3},{value:"Private Hosted Zones",id:"private-hosted-zones",level:3},{value:"Routing Policies",id:"routing-policies-1",level:2},{value:"Failover (Active-Passive)",id:"failover-active-passive",level:3},{value:"Geolocation",id:"geolocation",level:3},{value:"Geoproximity",id:"geoproximity",level:3},{value:"Traffic flow",id:"traffic-flow",level:3},{value:"IP-based Routing",id:"ip-based-routing",level:3},{value:"Multi-Value",id:"multi-value",level:3},{value:"Domain Registar vs. DNS Service",id:"domain-registar-vs-dns-service",level:2},{value:"3rd Party Registrar with Amazon Route 53",id:"3rd-party-registrar-with-amazon-route-53",level:3}];function d(e){const i={a:"a",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Route 53 is a highly available, scalable, fully managed and Authoritative DNS","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Authoritative = the customer (you) can update the DNS records"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.li,{children:"Route 53 is also a Domain Registrar"}),"\n",(0,s.jsx)(i.li,{children:"Ability to check the health of your resources"}),"\n",(0,s.jsx)(i.li,{children:"The only AWS service which provides 100% availability SLA"}),"\n",(0,s.jsx)(i.li,{children:"Why Route 53? 53 is a reference to the traditional DNS port"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"dns",src:n(71996).A+"",width:"1822",height:"840"})}),"\n",(0,s.jsx)(i.h2,{id:"route-53--records",children:"Route 53 \u2013 Records"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"How you want to route traffic for a domain"}),"\n",(0,s.jsxs)(i.li,{children:["Each record contains:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Domain/subdomain Name"})," \u2013 e.g., example.com"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Record Type"})," \u2013 e.g., A or AAAA"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Value"})," \u2013 e.g., 12.34.56.78"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Routing Policy"})," \u2013 how Route 53 responds to queries"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"TTL"})," \u2013 amount of time the record cached at DNS Resolvers"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Route 53 supports the following DNS record types:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"(must know) A / AAAA / CNAME / NS"}),"\n",(0,s.jsx)(i.li,{children:"(advanced) CAA / DS / MX / NAPTR / PTR / SOA / TXT / SPF / SRV"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"record-types",children:"Record Types"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"A"})," \u2013 maps a hostname to IPv4"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"AAAA"})," \u2013 maps a hostname to IPv6"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"CNAME"})," \u2013 maps a hostname to another hostname","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"The target is a domain name which must have an A or AAAA record"}),"\n",(0,s.jsx)(i.li,{children:"Can\u2019t create a CNAME record for the top node of a DNS namespace (Zone Apex)"}),"\n",(0,s.jsxs)(i.li,{children:["Example: you can\u2019t create for example.com, but you can create for ",(0,s.jsx)(i.a,{href:"http://www.example.com",children:"www.example.com"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["NS \u2013 Name Servers for the Hosted Zone","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Control how traffic is routed for a domain"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"route-53--hosted-zones",children:"Route 53 \u2013 Hosted Zones"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"A container for records that define how to route traffic to a domain and its subdomains"}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Public Hosted Zones"})," \u2013 contains records that specify how to route traffic on the Internet (public domain names)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"e.g. application1.mypublicdomain.com"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Private Hosted Zones"})," \u2013 contain records that specify how you route traffic within one or more VPCs (private domain names)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"e.g. application1.company.internal"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"public-vs-private-hosted-zones",children:"Public vs. Private Hosted Zones"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"public-private-host-zone",src:n(95866).A+"",width:"1828",height:"769"})}),"\n",(0,s.jsx)(i.h2,{id:"records-ttl-time-to-live",children:"Records TTL (Time To Live)"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["High TTL \u2013 e.g., 24 hr","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Less traffic on Route 53"}),"\n",(0,s.jsx)(i.li,{children:"Possibly outdated records"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Low TTL \u2013 e.g., 60 sec.","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"More traffic on Route 53 ($$)"}),"\n",(0,s.jsx)(i.li,{children:"Records are outdated for less time"}),"\n",(0,s.jsx)(i.li,{children:"Easy to change records"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.li,{children:"Except for Alias records, TTL is mandatory for each DNS record"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"dns-ttsl",src:n(90614).A+"",width:"1008",height:"676"})}),"\n",(0,s.jsx)(i.h2,{id:"cname-vs-alias",children:"CNAME vs Alias"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["AWS Resources (Load Balancer, CloudFront...) expose an AWS hostname","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"lb1-1234.us-east-2.elb.amazonaws.com and you want myapp.mydomain.com"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["CNAME:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Points a hostname to any other hostname. (app.mydomain.com => blabla.anything.com)"}),"\n",(0,s.jsx)(i.li,{children:"ONLY FOR NON ROOT DOMAIN (aka. something.mydomain.com)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Alias:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Points a hostname to an AWS Resource (app.mydomain.com => blabla.amazonaws.com)"}),"\n",(0,s.jsx)(i.li,{children:"Works for ROOT DOMAIN and NON ROOT DOMAIN (aka mydomain.com)"}),"\n",(0,s.jsx)(i.li,{children:"Free of charge"}),"\n",(0,s.jsx)(i.li,{children:"Native health check"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"alias-records",children:"Alias Records"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Maps a hostname to an AWS resource"}),"\n",(0,s.jsx)(i.li,{children:"An extension to DNS functionality"}),"\n",(0,s.jsx)(i.li,{children:"Automatically recognizes changes in the resource\u2019s IP addresses"}),"\n",(0,s.jsx)(i.li,{children:"Unlike CNAME, it can be used for the top node of a DNS namespace (Zone Apex), e.g.: example.com"}),"\n",(0,s.jsx)(i.li,{children:"Alias Record is always of type A/AAAA for AWS resources (IPv4 / IPv6)"}),"\n",(0,s.jsx)(i.li,{children:"You can\u2019t set the TTL"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"alias-records",src:n(65456).A+"",width:"664",height:"871"})}),"\n",(0,s.jsx)(i.h3,{id:"alias-records-targets",children:"Alias Records Targets"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Elastic Load Balancers"}),"\n",(0,s.jsx)(i.li,{children:"CloudFront Distributions"}),"\n",(0,s.jsx)(i.li,{children:"API Gateway"}),"\n",(0,s.jsx)(i.li,{children:"Elastic Beanstalk environments"}),"\n",(0,s.jsx)(i.li,{children:"S3 Websites"}),"\n",(0,s.jsx)(i.li,{children:"VPC Interface Endpoints"}),"\n",(0,s.jsx)(i.li,{children:"Global Accelerator accelerator"}),"\n",(0,s.jsx)(i.li,{children:"Route 53 record in the same hosted zone"}),"\n",(0,s.jsx)(i.li,{children:"You cannot set an ALIAS record for an EC2 DNS name"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"routing-policies",children:"Routing Policies"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Define how Route 53 responds to DNS queries"}),"\n",(0,s.jsxs)(i.li,{children:["Don\u2019t get confused by the word \u201cRouting\u201d","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"It\u2019s not the same as Load balancer routing which routes the traffic"}),"\n",(0,s.jsx)(i.li,{children:"DNS does not route any traffic, it only responds to the DNS queries"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Route 53 Supports the following Routing Policies","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Simple"}),"\n",(0,s.jsx)(i.li,{children:"Weighted"}),"\n",(0,s.jsx)(i.li,{children:"Failover"}),"\n",(0,s.jsx)(i.li,{children:"Latency based"}),"\n",(0,s.jsx)(i.li,{children:"Geolocation"}),"\n",(0,s.jsx)(i.li,{children:"Multi-Value Answer"}),"\n",(0,s.jsx)(i.li,{children:"Geoproximity (using Route 53 Traffic Flow feature)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"simple",children:"Simple"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Typically, route traffic to a single resource"}),"\n",(0,s.jsx)(i.li,{children:"Can specify multiple values in the same record"}),"\n",(0,s.jsx)(i.li,{children:"If multiple values are returned, a random one is chosen by the client"}),"\n",(0,s.jsx)(i.li,{children:"When Alias enabled, specify only one AWS resource"}),"\n",(0,s.jsx)(i.li,{children:"Can\u2019t be associated with Health Check"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"simple-routing-policy",src:n(35907).A+"",width:"819",height:"807"})}),"\n",(0,s.jsx)(i.h3,{id:"weighted",children:"Weighted"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Control the % of the requests that go to each specific resource"}),"\n",(0,s.jsxs)(i.li,{children:["Assign each record a relative weight:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"\ud835\udc61\ud835\udc5f\ud835\udc4e\ud835\udc53\ud835\udc53\ud835\udc56\ud835\udc50 (%) = weight of a specific record / Sum of all weights for all records"}),"\n",(0,s.jsx)(i.li,{children:"Weights don\u2019t need to sum up to 100"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.li,{children:"DNS records must have the same name and type"}),"\n",(0,s.jsx)(i.li,{children:"Can be associated with Health Checks"}),"\n",(0,s.jsx)(i.li,{children:"Use cases: load balancing between regions, testing new application versions\u2026"}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.strong,{children:"Assign a weight of 0 to a record to stop sending traffic to a resource"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.strong,{children:"If all records have weight of 0, then all records will be returned equally"})}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"routing-policy-weighted",src:n(736).A+"",width:"739",height:"820"})}),"\n",(0,s.jsx)(i.h3,{id:"latency-based",children:"Latency-based"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Redirect to the resource that has the least latency close to us"}),"\n",(0,s.jsx)(i.li,{children:"Super helpful when latency for users is a priority"}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.strong,{children:"Latency is based on traffic between users and AWS Regions"})}),"\n",(0,s.jsx)(i.li,{children:"Germany users may be directed to the US (if that\u2019s the lowest latency)"}),"\n",(0,s.jsx)(i.li,{children:"Can be associated with Health Checks (has a failover capability)"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"latency-based",src:n(1445).A+"",width:"1015",height:"610"})}),"\n",(0,s.jsx)(i.h2,{id:"health-checks",children:"Health Checks"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"HTTP Health Checks are only for public resources"}),"\n",(0,s.jsxs)(i.li,{children:["Health Check => Automated DNS Failover:","\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Health checks that monitor an endpoint (application, server, other AWS resource)"}),"\n",(0,s.jsx)(i.li,{children:"Health checks that monitor other health checks (Calculated Health Checks)"}),"\n",(0,s.jsx)(i.li,{children:"Health checks that monitor CloudWatch Alarms (full control !!) \u2013 e.g., throttles of DynamoDB, alarms on RDS, custom metrics, \u2026 (helpful for private resources)"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.li,{children:"Health Checks are integrated with CW metrics"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"health-checks-route53",src:n(38669).A+"",width:"742",height:"874"})}),"\n",(0,s.jsx)(i.h3,{id:"monitor-an-endpoint",children:"Monitor an Endpoint"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["About 15 global health checkers will check the endpoint health","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Healthy/Unhealthy Threshold \u2013 3 (default)"}),"\n",(0,s.jsx)(i.li,{children:"Interval \u2013 30 sec (can set to 10 sec \u2013 higher cost)"}),"\n",(0,s.jsx)(i.li,{children:"Supported protocol: HTTP, HTTPS and TCP"}),"\n",(0,s.jsx)(i.li,{children:"If > 18% of health checkers report the endpoint is healthy, Route 53 considers it Healthy. Otherwise, it\u2019s Unhealthy"}),"\n",(0,s.jsx)(i.li,{children:"Ability to choose which locations you want Route 53 to use"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.li,{children:"Health Checks pass only when the endpoint responds with the 2xx and 3xx status codes"}),"\n",(0,s.jsx)(i.li,{children:"Health Checks can be setup to pass / fail based on the text in the first 5120 bytes of the response"}),"\n",(0,s.jsx)(i.li,{children:"Configure you router/firewall to allow incoming requests from Route 53 Health Checkers"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"monitor-an-endpoint",src:n(66461).A+"",width:"742",height:"874"})}),"\n",(0,s.jsx)(i.h3,{id:"calculated-health-checks",children:"Calculated Health Checks"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Combine the results of multiple Health Checks into a single Health Check"}),"\n",(0,s.jsx)(i.li,{children:"You can use OR, AND, or NOT"}),"\n",(0,s.jsx)(i.li,{children:"Can monitor up to 256 Child Health Checks"}),"\n",(0,s.jsx)(i.li,{children:"Specify how many of the health checks need to pass to make the parent pass"}),"\n",(0,s.jsx)(i.li,{children:"Usage: perform maintenance to your website without causing all health checks to fail"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"calculated-health-checks",src:n(93398).A+"",width:"594",height:"817"})}),"\n",(0,s.jsx)(i.h3,{id:"private-hosted-zones",children:"Private Hosted Zones"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Route 53 health checkers are outside the VPC"}),"\n",(0,s.jsx)(i.li,{children:"They can\u2019t access private endpoints (private VPC or on-premises resource)"}),"\n",(0,s.jsx)(i.li,{children:"You can create a CloudWatch Metric and associate a CloudWatch Alarm, then create a Health Check that checks the alarm itself"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"private-hosted-zones",src:n(87032).A+"",width:"594",height:"817"})}),"\n",(0,s.jsx)(i.h2,{id:"routing-policies-1",children:"Routing Policies"}),"\n",(0,s.jsx)(i.h3,{id:"failover-active-passive",children:"Failover (Active-Passive)"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"routing-failover",src:n(62132).A+"",width:"1536",height:"721"})}),"\n",(0,s.jsx)(i.h3,{id:"geolocation",children:"Geolocation"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Different from Latency-based!"}),"\n",(0,s.jsx)(i.li,{children:"This routing is based on user location"}),"\n",(0,s.jsx)(i.li,{children:"Specify location by Continent, Country or by US State (if there\u2019s overlapping, most precise location selected)"}),"\n",(0,s.jsx)(i.li,{children:"Should create a \u201cDefault\u201d record (in case there\u2019s no match on location)"}),"\n",(0,s.jsx)(i.li,{children:"Use cases: website localization, restrict content distribution, load balancing, \u2026"}),"\n",(0,s.jsx)(i.li,{children:"Can be associated with Health Checks"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"routing-geolocation",src:n(65506).A+"",width:"885",height:"807"})}),"\n",(0,s.jsx)(i.h3,{id:"geoproximity",children:"Geoproximity"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Route traffic to your resources based on the geographic location of users and resources"}),"\n",(0,s.jsx)(i.li,{children:"Ability to shift more traffic to resources based on the defined bias"}),"\n",(0,s.jsxs)(i.li,{children:["To change the size of the geographic region, specify bias values:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"To expand (1 to 99) \u2013 more traffic to the resource"}),"\n",(0,s.jsx)(i.li,{children:"To shrink (-1 to -99) \u2013 less traffic to the resource"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Resources can be:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"AWS resources (specify AWS region)"}),"\n",(0,s.jsx)(i.li,{children:"Non-AWS resources (specify Latitude and Longitude)"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.li,{children:"You must use Route 53 Traffic Flow to use this feature"}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.img,{alt:"geoproximity1",src:n(7942).A+"",width:"1561",height:"768"}),"\n",(0,s.jsx)(i.img,{alt:"geoproximity2",src:n(32829).A+"",width:"1534",height:"757"})]}),"\n",(0,s.jsx)(i.h3,{id:"traffic-flow",children:"Traffic flow"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Simplify the process of creating and maintaining records in large and complex configurations"}),"\n",(0,s.jsx)(i.li,{children:"Visual editor to manage complex routing decision trees"}),"\n",(0,s.jsxs)(i.li,{children:["Configurations can be saved as Traffic Flow Policy","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Can be applied to different Route 53 Hosted Zones (different domain names)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Supports versioning"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"traffic-flow-policy",src:n(91934).A+"",width:"820",height:"889"})}),"\n",(0,s.jsx)(i.h3,{id:"ip-based-routing",children:"IP-based Routing"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Routing is based on clients\u2019 IP addresses"}),"\n",(0,s.jsx)(i.li,{children:"You provide a list of CIDRs for your clients and the corresponding endpoints/locations (user-IP-to-endpoint mappings)"}),"\n",(0,s.jsx)(i.li,{children:"Use cases: Optimize performance, reduce network costs\u2026"}),"\n",(0,s.jsx)(i.li,{children:"Example: route end users from a particular ISP to a specific endpoint"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"ip-based.routing",src:n(53536).A+"",width:"631",height:"832"})}),"\n",(0,s.jsx)(i.h3,{id:"multi-value",children:"Multi-Value"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Use when routing traffic to multiple resources"}),"\n",(0,s.jsx)(i.li,{children:"Route 53 return multiple values/resources"}),"\n",(0,s.jsx)(i.li,{children:"Can be associated with Health Checks (return only values for healthy resources)"}),"\n",(0,s.jsx)(i.li,{children:"Up to 8 healthy records are returned for each Multi-Value query"}),"\n",(0,s.jsx)(i.li,{children:"Multi-Value is not a substitute for having an ELB"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"multi-value-routing-policy",src:n(50276).A+"",width:"1471",height:"276"})}),"\n",(0,s.jsx)(i.h2,{id:"domain-registar-vs-dns-service",children:"Domain Registar vs. DNS Service"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"You buy or register your domain name with a Domain Registrar typically by paying annual charges (e.g., GoDaddy, Amazon Registrar Inc., \u2026)"}),"\n",(0,s.jsx)(i.li,{children:"The Domain Registrar usually provides you with a DNS service to manage your DNS records"}),"\n",(0,s.jsx)(i.li,{children:"But you can use another DNS service to manage your DNS records"}),"\n",(0,s.jsx)(i.li,{children:"Example: purchase the domain from GoDaddy and use Route 53 to manage your DNS records"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"dns-management",src:n(6210).A+"",width:"1702",height:"730"})}),"\n",(0,s.jsx)(i.h3,{id:"3rd-party-registrar-with-amazon-route-53",children:"3rd Party Registrar with Amazon Route 53"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["If you buy your domain on a 3rd party registrar, you can still use Route 53 as the DNS Service provider","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Create a Hosted Zone in Route 53"}),"\n",(0,s.jsx)(i.li,{children:"Update NS Records on 3rd party website to use Route 53 Name Servers"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.li,{children:"Domain Registrar != DNS Service"}),"\n",(0,s.jsx)(i.li,{children:"But every Domain Registrar usually comes with some DNS features"}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65456:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/alias-records-37ab9709516da830d1eaf1c02a907483.png"},93398:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/calculated-health-checks-4abe1540c079fb70f407a6bf3cfcd02b.png"},6210:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/dns-management-8343eb07889ece7aa4bd1ea098dbe457.png"},90614:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/dns-ttsl-8810589c23846e59e9d61fcc7b9dccbd.png"},71996:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/dns-888aa6c51d6ac37a36a8a5430aeda0fb.png"},7942:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/geoproximity1-4012fa05b11de9deb0f6fc36ce7a7ab6.png"},32829:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/geoproximity2-6c4c75e723b9808913e460ca296dc9ac.png"},38669:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/health-checks-route53-2258a52a6adf1f0dcd9cd3dd0b44afb5.png"},53536:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/ip-based.routing-c529173987723624c9aa1cba652908cd.png"},1445:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/latency-based-4dbc4c829bced581b53a2a5a1438f849.png"},66461:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/monitor-an-endpoint-2258a52a6adf1f0dcd9cd3dd0b44afb5.png"},50276:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/multi-value-routing-policy-52188e3083360428cffdcb370a7c0254.png"},87032:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/private-hosted-zones-4abe1540c079fb70f407a6bf3cfcd02b.png"},95866:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/public-private-host-zone-26165344aa092e55bdb17a80d459523b.png"},62132:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/routing-failover-392e130b19393819b9508a6dfab48d9e.png"},65506:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/routing-geolocation-420ea32f3fbc84531ef697defece2b2b.png"},736:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/routing-policy-weighted-a44b4405917e9a26d254ba5a95e49039.png"},35907:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/simple-routing-policy-ce14ff948953e74da1a576afa511b106.png"},91934:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/traffic-flow-policy-42a9f0f0a4f9d6ea70ff662cfaafb53a.png"},28453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>a});var s=n(96540);const l={},t=s.createContext(l);function r(e){const i=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(t.Provider,{value:i},e.children)}}}]);