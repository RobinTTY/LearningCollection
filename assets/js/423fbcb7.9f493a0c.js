"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[6356],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(n),m=l,y=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(y,i(i({ref:t},p),{},{components:n})):r.createElement(y,i({ref:t},p))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,i=new Array(a);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6553:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return u}});var r=n(7462),l=n(3366),a=(n(7294),n(3905)),i=["components"],o={id:"types-of-css",title:"Types of CSS",sidebar_position:1},s=void 0,c={unversionedId:"Web/CSS/types-of-css",id:"Web/CSS/types-of-css",title:"Types of CSS",description:"There are several ways to apply CSS styles to an HTML document. Those are:",source:"@site/docs/Web/CSS/types-of-css.md",sourceDirName:"Web/CSS",slug:"/Web/CSS/types-of-css",permalink:"/LearningCollection/Web/CSS/types-of-css",editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/Web/CSS/types-of-css.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"types-of-css",title:"Types of CSS",sidebar_position:1},sidebar:"mySidebar",previous:{title:"Element Types",permalink:"/LearningCollection/Web/HTML/element-types"},next:{title:"Selectors",permalink:"/LearningCollection/Web/CSS/selectors"}},p={},u=[{value:"External CSS",id:"external-css",level:2},{value:"Internal CSS",id:"internal-css",level:2},{value:"Inline CSS",id:"inline-css",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,l.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"There are several ways to apply CSS styles to an HTML document. Those are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"External CSS"),(0,a.kt)("li",{parentName:"ul"},"Internal CSS"),(0,a.kt)("li",{parentName:"ul"},"Inline CSS")),(0,a.kt)("h2",{id:"external-css"},"External CSS"),(0,a.kt)("p",null,"CSS styles written in a separate file are called ",(0,a.kt)("strong",{parentName:"p"},"External Style Sheets"),". To include External Style Sheets in an HTML document, use an unpaired ",(0,a.kt)("inlineCode",{parentName:"p"},"<link>")," tag:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html" {6}',title:'"index.html"',"{6}":!0},'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <title>Connecting External CSS to HTML</title>\n    <link rel="stylesheet" href="style.css" />\n  </head>\n  <body></body>\n</html>\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"href")," attribute specifies the file's address, and the ",(0,a.kt)("inlineCode",{parentName:"p"},"rel")," attribute with the stylesheet value tells the browser that we are connecting styles and not something else."),(0,a.kt)("p",null,"It is best to include the styles inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"<head>"),", but it's not a strong requirement. The ",(0,a.kt)("inlineCode",{parentName:"p"},"<link>")," tag will also work fine elsewhere on the page."),(0,a.kt)("h2",{id:"internal-css"},"Internal CSS"),(0,a.kt)("p",null,"CSS styles can be written directly in HTML markup instead of a separate file. Such sets of styles are usually called ",(0,a.kt)("strong",{parentName:"p"},"Internal Style Sheets"),". They are wrapped in a paired ",(0,a.kt)("inlineCode",{parentName:"p"},"<style>")," tag and must be located inside ",(0,a.kt)("inlineCode",{parentName:"p"},"<head>"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html" {6-10}',title:'"index.html"',"{6-10}":!0},'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <title>Connecting Internal CSS to HTML</title>\n    <style>\n      body {\n        background-color: #f0f0f0;\n      }\n    </style>\n  </head>\n  <body></body>\n</html>\n')),(0,a.kt)("p",null,"This method of connection is usually only good when there are very few styles."),(0,a.kt)("h2",{id:"inline-css"},"Inline CSS"),(0,a.kt)("p",null,"You can also define a style for a single element using the HTML attribute style. In this case, CSS properties are written as attribute values:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html" {8}',title:'"index.html"',"{8}":!0},'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <title>Connecting Internal CSS to HTML</title>\n  </head>\n  <body>\n    <p style="css property; css property;">Inline CSS</p>\n  </body>\n</html>\n')),(0,a.kt)("p",null,"However, this way of connection is considered bad practice because it complicates project support since the code becomes more difficult to read."))}m.isMDXComponent=!0}}]);