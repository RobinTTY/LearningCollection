"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[8572],{99059:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"web/react/react-internals/rendering","title":"Rendering","description":"React is comprised of two main libraries, react and react-dom. The react package contains only the functionality necessary to define React components. It is typically used together with a React renderer like react-dom for the web, or react-native for the native environments.","source":"@site/docs/web/react/react-internals/Rendering.md","sourceDirName":"web/react/react-internals","slug":"/web/react/react-internals/rendering","permalink":"/LearningCollection/web/react/react-internals/rendering","draft":false,"unlisted":false,"editUrl":"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/web/react/react-internals/Rendering.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"rendering","title":"Rendering","sidebar_position":1},"sidebar":"docs","previous":{"title":"Custom Hooks","permalink":"/LearningCollection/web/react/hooks/advanced-hooks/customHooks"},"next":{"title":"Scheduling Updates","permalink":"/LearningCollection/web/react/react-internals/schedulingUpdates"}}');var a=t(74848),i=t(28453);const s={id:"rendering",title:"Rendering",sidebar_position:1},c=void 0,o={},d=[{value:"react-dom",id:"react-dom",level:2},{value:"Updates to the DOM",id:"updates-to-the-dom",level:3},{value:"Example of a re-render",id:"example-of-a-re-render",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["React is comprised of two main libraries, ",(0,a.jsx)(n.a,{href:"https://www.npmjs.com/package/react",children:"react"})," and ",(0,a.jsx)(n.a,{href:"https://www.npmjs.com/package/react-dom",children:"react-dom"}),". The ",(0,a.jsx)(n.code,{children:"react"})," package contains only the functionality necessary to define React components. It is typically used together with a React renderer like ",(0,a.jsx)(n.code,{children:"react-dom"})," for the web, or ",(0,a.jsx)(n.code,{children:"react-native"})," for the native environments."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Architecture",src:t(61108).A+"",width:"971",height:"691"})}),"\n",(0,a.jsxs)(n.p,{children:["In summary, while ",(0,a.jsx)(n.code,{children:"react"})," handles the creation of components, renderers handle the displaying."]}),"\n",(0,a.jsx)(n.h2,{id:"react-dom",children:"react-dom"}),"\n",(0,a.jsxs)(n.p,{children:["While ",(0,a.jsx)(n.code,{children:"react"})," determines:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"how the component tree currently looks like and"}),"\n",(0,a.jsx)(n.li,{children:"what it should look like (e.g. when data changes)"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"react-dom"})," receives:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"the differences (the required changes) and"}),"\n",(0,a.jsx)(n.li,{children:"manipulates the real DOM as a consequence"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"updates-to-the-dom",children:"Updates to the DOM"}),"\n",(0,a.jsx)(n.p,{children:"The re-execution of a component function doesn't mean that the DOM is re-rendered. Components are re-evaluated whenever props, state or context changes. React uses the virtual DOM as a representation of the actual DOM. React computes the necessary changes by using an in-memory version of the DOM, and rerenders the minimal amount necessary."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Architecture",src:t(4657).A+"",width:"954",height:"766"})}),"\n",(0,a.jsx)(n.h3,{id:"example-of-a-re-render",children:"Example of a re-render"}),"\n",(0,a.jsx)(n.p,{children:"Let's assume the current state of the DOM looks like this:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:"<div>\n  <h1>Hello World</h1>\n</div>\n"})}),"\n",(0,a.jsx)(n.p,{children:"Now assume that after a new evaluation the DOM should look like this:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",metastring:"{3}",children:"<div>\n  <h1>Hello World</h1>\n  <p>This is a paragraph</p>\n</div>\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The only required change is to add a new ",(0,a.jsx)(n.code,{children:"<p>"})," element. React will compute the difference between the two DOM trees and will only add the new ",(0,a.jsx)(n.code,{children:"<p>"})," element."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},61108:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/Architecture-b049c3e3c9764db97490e25e685ce7c5.svg"},4657:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/Rerender-6a6d43fa1b641c660adabb8857d38090.png"},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var r=t(96540);const a={},i=r.createContext(a);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);