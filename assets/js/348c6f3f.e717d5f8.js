"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[418],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(n),g=r,d=u["".concat(s,".").concat(g)]||u[g]||m[g]||l;return n?a.createElement(d,i(i({ref:t},p),{},{components:n})):a.createElement(d,i({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},5146:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const l={id:"manipulating-tables",title:"Manipulating Tables",sidebar_position:4},i=void 0,o={unversionedId:"Databases/sql/manipulating-tables",id:"Databases/sql/manipulating-tables",title:"Manipulating Tables",description:"Creating Tables",source:"@site/docs/Databases/sql/manipulating-tables.md",sourceDirName:"Databases/sql",slug:"/Databases/sql/manipulating-tables",permalink:"/LearningCollection/Databases/sql/manipulating-tables",draft:!1,editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/Databases/sql/manipulating-tables.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"manipulating-tables",title:"Manipulating Tables",sidebar_position:4},sidebar:"finance",previous:{title:"Querying Tables",permalink:"/LearningCollection/Databases/sql/querying-tables"},next:{title:"Schema Migration",permalink:"/LearningCollection/Databases/sql/schema-migration"}},s={},c=[{value:"Creating Tables",id:"creating-tables",level:2},{value:"Altering Tables",id:"altering-tables",level:2},{value:"Renaming a table or column",id:"renaming-a-table-or-column",level:3},{value:"Adding or droping a column",id:"adding-or-droping-a-column",level:3}],p={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"creating-tables"},"Creating Tables"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"CREATE TABLE")," statement is used to create a new table in a database."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE employees (id INTEGER, name TEXT, age INTEGER, is_manager BOOLEAN, salary INTEGER);\n")),(0,r.kt)("p",null,"Each field name is followed by its datatype.\nIt's also acceptable and common to break up the ",(0,r.kt)("inlineCode",{parentName:"p"},"CREATE TABLE")," statement with some whitespace like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE employees(\n    id INTEGER,\n    name TEXT,\n    age INTEGER,\n    is_manager BOOLEAN,\n    salary INTEGER\n);\n")),(0,r.kt)("h2",{id:"altering-tables"},"Altering Tables"),(0,r.kt)("p",null,"We often need to alter our database schema without deleting it and re-creating it. We can use use the ",(0,r.kt)("inlineCode",{parentName:"p"},"ALTER TABLE")," statement to make changes in place without deleting any data. The following statements are valid for the SQLite Syntax."),(0,r.kt)("h3",{id:"renaming-a-table-or-column"},"Renaming a table or column"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE employees\nRENAME TO contractors;\n\nALTER TABLE contractors\nRENAME COLUMN salary TO invoice;\n")),(0,r.kt)("h3",{id:"adding-or-droping-a-column"},"Adding or droping a column"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE contractors\nADD COLUMN job_title TEXT;\n\nALTER TABLE contractors\nDROP COLUMN is_manager;\n")))}m.isMDXComponent=!0}}]);