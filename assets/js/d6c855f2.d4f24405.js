"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[2254],{3787:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>b,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var s=t(4848),a=t(8453);const r={id:"destructuring-assignment",title:"Destructuring Assignment",sidebar_position:6},o=void 0,c={id:"web/javascript/core-concepts/destructuring-assignment",title:"Destructuring Assignment",description:"The destructuring assignment syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables.",source:"@site/docs/web/javascript/core-concepts/destructuring-assignment.md",sourceDirName:"web/javascript/core-concepts",slug:"/web/javascript/core-concepts/destructuring-assignment",permalink:"/LearningCollection/web/javascript/core-concepts/destructuring-assignment",draft:!1,unlisted:!1,editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/web/javascript/core-concepts/destructuring-assignment.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{id:"destructuring-assignment",title:"Destructuring Assignment",sidebar_position:6},sidebar:"docs",previous:{title:"Promise",permalink:"/LearningCollection/web/javascript/core-concepts/promise"},next:{title:"HTTP Requests",permalink:"/LearningCollection/web/javascript/advanced-concepts/http-requests"}},i={},l=[{value:"Examples",id:"examples",level:2},{value:"Syntax",id:"syntax",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"destructuring assignment"})," syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables."]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.p,{children:"A simple example of destructuring an array:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"let a, b, rest;\n[a, b] = [10, 20];\n\nconsole.log(a);\n// expected output: 10\n\nconsole.log(b);\n// expected output: 20\n\n[a, b, ...rest] = [10, 20, 30, 40, 50];\n\nconsole.log(rest);\n// expected output: Array [30,40,50]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Not all elements are required to be used:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const x = [1, 2, 3, 4, 5];\nconst [y, z] = x;\nconsole.log(y); // 1\nconsole.log(z); // 2\n"})}),"\n",(0,s.jsx)(n.p,{children:"Similarly, we can destructure objects on the left-hand side of the assignment:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const obj = { a: 1, b: 2 };\nconst { a, b } = obj;\n// is equivalent to:\n// const a = obj.a;\n// const b = obj.b;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const [a, b] = array;\nconst [a, , b] = array;\nconst [a = aDefault, b] = array;\nconst [a, b, ...rest] = array;\nconst [a, , b, ...rest] = array;\nconst [a, b, ...{ pop, push }] = array;\nconst [a, b, ...[c, d]] = array;\n\nconst { a, b } = obj;\nconst { a: a1, b: b1 } = obj;\nconst { a: a1 = aDefault, b = bDefault } = obj;\nconst { a, b, ...rest } = obj;\nconst { a: a1, b: b1, ...rest } = obj;\nconst { [key]: a } = obj;\n\nlet a, b, a1, b1, c, d, rest, pop, push;\n[a, b] = array;\n[a, , b] = array;\n[a = aDefault, b] = array;\n[a, b, ...rest] = array;\n[a, , b, ...rest] = array;\n[a, b, ...{ pop, push }] = array;\n[a, b, ...[c, d]] = array;\n\n({ a, b } = obj); // brackets are required\n({ a: a1, b: b1 } = obj);\n({ a: a1 = aDefault, b = bDefault } = obj);\n({ a, b, ...rest } = obj);\n({ a: a1, b: b1, ...rest } = obj);\n"})})]})}function b(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(6540);const a={},r=s.createContext(a);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);