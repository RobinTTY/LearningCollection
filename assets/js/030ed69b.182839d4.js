"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[4519],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||s;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<s;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9086:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const s={id:"manResetEvent",title:"ManualResetEvent",sidebar_position:2},o=void 0,i={unversionedId:"c-sharp/Advanced Concepts/Classes/manResetEvent",id:"c-sharp/Advanced Concepts/Classes/manResetEvent",title:"ManualResetEvent",description:"- Represents a thread synchronization event that, when signaled, must be reset manually",source:"@site/docs/c-sharp/Advanced Concepts/Classes/ManualResetEvent.md",sourceDirName:"c-sharp/Advanced Concepts/Classes",slug:"/c-sharp/Advanced Concepts/Classes/manResetEvent",permalink:"/LearningCollection/c-sharp/Advanced Concepts/Classes/manResetEvent",draft:!1,editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/c-sharp/Advanced Concepts/Classes/ManualResetEvent.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"manResetEvent",title:"ManualResetEvent",sidebar_position:2},sidebar:"finance",previous:{title:"Assembly",permalink:"/LearningCollection/c-sharp/Advanced Concepts/Classes/assemblyClass"},next:{title:"Attributes",permalink:"/LearningCollection/c-sharp/Advanced Concepts/attributes"}},l={},c=[],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Represents a thread synchronization event that, when signaled, must be reset manually"),(0,a.kt)("li",{parentName:"ul"},"If the current thread calls the WaitOne() method, it will be waiting(so stop doing anything) until any other thread calls the Set() method"),(0,a.kt)("li",{parentName:"ul"},"WaitOne(TimeSpan) behaves almost the same as the above, but if for example you pass 5 seconds time to this method, the current thread will be waiting for other threads to call the Set() method for 5 seconds and if no one called Set(), it calls it automatically and continue the work")))}d.isMDXComponent=!0}}]);