"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[3833],{21991:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"kubernetes/cka-exam/questions","title":"CKA Exam Questions","description":"Scale a deployment","source":"@site/docs/kubernetes/cka-exam/questions.md","sourceDirName":"kubernetes/cka-exam","slug":"/kubernetes/cka-exam/questions","permalink":"/LearningCollection/kubernetes/cka-exam/questions","draft":false,"unlisted":false,"editUrl":"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/kubernetes/cka-exam/questions.md","tags":[],"version":"current","frontMatter":{"id":"questions","title":"CKA Exam Questions"},"sidebar":"docs","previous":{"title":"CKA Exam notes","permalink":"/LearningCollection/kubernetes/cka-exam/"},"next":{"title":"Core Components","permalink":"/LearningCollection/kubernetes/core-components"}}');var i=a(74848),t=a(28453);const l={id:"questions",title:"CKA Exam Questions"},o=void 0,r={},c=[{value:"Scale a deployment",id:"scale-a-deployment",level:2},{value:"Create a NodePort service for a deployment",id:"create-a-nodeport-service-for-a-deployment",level:2},{value:"Create a PersistentVolume",id:"create-a-persistentvolume",level:2},{value:"Creating an Ingress resource",id:"creating-an-ingress-resource",level:2},{value:"Monitor cluster and application resources",id:"monitor-cluster-and-application-resources",level:2},{value:"Configure Pod admission and scheduling",id:"configure-pod-admission-and-scheduling",level:2},{value:"Multicontainer Pod",id:"multicontainer-pod",level:2},{value:"Monitor logs of a container",id:"monitor-logs-of-a-container",level:2},{value:"Add a sidecar container which runs a specific bash command",id:"add-a-sidecar-container-which-runs-a-specific-bash-command",level:2},{value:"Manage role based access control",id:"manage-role-based-access-control",level:2},{value:"Troubleshoot cluster with taints",id:"troubleshoot-cluster-with-taints",level:2},{value:"Use ConfigMaps and Secrets to configure applications",id:"use-configmaps-and-secrets-to-configure-applications",level:2},{value:"Use ConfigMaps and Secrets to configure applications",id:"use-configmaps-and-secrets-to-configure-applications-1",level:2},{value:"Define and enforce Network Policies",id:"define-and-enforce-network-policies",level:2},{value:"Use Helm to install cluster components",id:"use-helm-to-install-cluster-components",level:2},{value:"Rollback a deployment",id:"rollback-a-deployment",level:2},{value:"kubeadm: Join a new node to the cluster",id:"kubeadm-join-a-new-node-to-the-cluster",level:2},{value:"kubeadm: Upgrade an existing node",id:"kubeadm-upgrade-an-existing-node",level:2},{value:"Unresponsive Node Troubleshooting",id:"unresponsive-node-troubleshooting",level:2},{value:"Storage",id:"storage",level:2},{value:"Storage II",id:"storage-ii",level:2},{value:"Storage III",id:"storage-iii",level:2},{value:"Autoscaling",id:"autoscaling",level:2},{value:"Node Affinity",id:"node-affinity",level:2},{value:"Pod Security",id:"pod-security",level:2},{value:"Taints and Tolerations",id:"taints-and-tolerations",level:2},{value:"StatefulSets and Headless Services",id:"statefulsets-and-headless-services",level:2},{value:"CoreDNS Troubleshooting",id:"coredns-troubleshooting",level:2},{value:"CoreDNS Configuration",id:"coredns-configuration",level:2},{value:"Helm",id:"helm",level:2},{value:"Kustomize",id:"kustomize",level:2},{value:"Gateway API (&quot;guaranteed task&quot;)",id:"gateway-api-guaranteed-task",level:2},{value:"Pod Admission / Limit Ranges",id:"pod-admission--limit-ranges",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"scale-a-deployment",children:"Scale a deployment"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl scale deployment <deployment-name> --replicas=<number>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"create-a-nodeport-service-for-a-deployment",children:"Create a NodePort service for a deployment"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl expose deployment <deployment-name> --type=NodePort <service-name>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"create-a-persistentvolume",children:"Create a PersistentVolume"}),"\n",(0,i.jsxs)(n.p,{children:["Create a PersistentVolume named ",(0,i.jsx)(n.code,{children:"my-pv"})," with access mode ",(0,i.jsx)(n.code,{children:"ReadWriteOnce"})," and size ",(0,i.jsx)(n.code,{children:"10Gi"})," using hostPath"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: my-pv\nspec:\n  capacity:\n    storage: 10Gi\n  accessModes:\n    - ReadWriteOnce\n  hostPath:\n   path: /data/my-pv\n"})}),"\n",(0,i.jsx)(n.h2,{id:"creating-an-ingress-resource",children:"Creating an Ingress resource"}),"\n",(0,i.jsx)(n.p,{children:"Create an Ingress resource named luau that routes traffic on the path /aloha to the aloha service on port 54321"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: luau\nspec:\n  rules:\n    - http:\n        paths:\n          - path: /aloha\n            pathType: Prefix\n            backend:\n              service:\n                name: aloha\n                port:\n                  number: 54321    \n"})}),"\n",(0,i.jsx)(n.h2,{id:"monitor-cluster-and-application-resources",children:"Monitor cluster and application resources"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Identify all Pods in the integration namespace with the label ",(0,i.jsx)(n.code,{children:"app=intensive"})]}),"\n",(0,i.jsx)(n.li,{children:"Determine which of these Pods is using the most CPU resources"}),"\n",(0,i.jsx)(n.li,{children:"Write the name of the Pod consuming the most CPU resources to /opt/cka/answers/cpu_pod_01.txt"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl top pods -n integration # List all pods in the integration namespace and their CPU usage\nkubectl get pods -n integration -L app=intensive # List pods with label app=intensive\n"})}),"\n",(0,i.jsx)(n.h2,{id:"configure-pod-admission-and-scheduling",children:"Configure Pod admission and scheduling"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Create a Pod named noded that uses the nginx image"}),"\n",(0,i.jsx)(n.li,{children:"Ensure the Pod is scheduled to a node labeled disk=nvme"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: noded\nspec:\n  containers:\n    - name: nginx\n      image: nginx\n  nodeSelector:\n    disk: nvme\n"})}),"\n",(0,i.jsx)(n.h2,{id:"multicontainer-pod",children:"Multicontainer Pod"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Create a pod named multicontainer that has two containers:"}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A container running the redis:6.2.6 image"}),"\n",(0,i.jsx)(n.li,{children:"A container running the nginx:1.21.6 image"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: multicontainer\nspec:\n  containers:\n    - name: redis\n      image: redis:6.2.6\n    - name: nginx\n      image: nginx:1.21.6\n"})}),"\n",(0,i.jsx)(n.h2,{id:"monitor-logs-of-a-container",children:"Monitor logs of a container"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl logs <pod-name> -c <container-name>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"add-a-sidecar-container-which-runs-a-specific-bash-command",children:"Add a sidecar container which runs a specific bash command"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Pod\nmetadata:\n  name: logger\nspec:\n  containers:\n    - name: loggingpod\n      image: busybox\n      args: [/bin/sh, -c, "i=0; while true; do echo \'$i: $(date)\' >> /var/log/log01.log; i=$((i+1)); sleep 10; done"]\n      volumeMounts:\n        - name: logz\n          mountPath: /var/log\n    - name: sidecar\n      image: busybox\n      command: ["/bin/sh", "-c", "tail -f /var/log/log01.log"]\n      volumeMounts:\n        - name: logz\n          mountPath: /var/log\n  volumes:\n    - name: logz\n      emptyDir: {}\n  nodeName: node-1\n'})}),"\n",(0,i.jsx)(n.h2,{id:"manage-role-based-access-control",children:"Manage role based access control"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Create a ClusterRole named app-creator that allows create permissions for Deployments, StatefulSets, and DaemonSets"}),"\n",(0,i.jsx)(n.li,{children:"Create a ServiceAccount named app-dev"}),"\n",(0,i.jsx)(n.li,{children:"Bind the ServiceAccount app-dev to the ClusterRole app-creator using a ClusterRoleBinding"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: app-creator\nrules:\n  - apiGroups: ["apps"]\n    resources: ["deployments", "statefulsets", "daemonsets"]\n    verbs: ["create"]\n'})}),"\n",(0,i.jsx)(n.p,{children:"To find out which apiGroups are available, you can use the command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl api-resources | grep Stateful # Will show that StatefulSets belong to apps/v1\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: app-dev\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: app-dev-binding\nsubjects:\n  - kind: ServiceAccount\n    name: app-dev\n    namespace: default\nroleRef:\n  kind: ClusterRole\n  name: app-creator\n  apiGroup: rbac.authorization.k8s.io\n"})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshoot-cluster-with-taints",children:"Troubleshoot cluster with taints"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Inspect the nodes controller and node-1 for any taints they have. Write the results to heir respective files"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl describe node controller | grep -i Taints\nkubectl describe node node-1 | grep -i Taints\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The flag ",(0,i.jsx)(n.code,{children:"-i"}),' is used to perform a case-insensitive search for the term "Taints". Just in case you don\'t know how it is capitalized.']}),"\n",(0,i.jsx)(n.h2,{id:"use-configmaps-and-secrets-to-configure-applications",children:"Use ConfigMaps and Secrets to configure applications"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Create a ConfigMap called metal-cm containing the file ",(0,i.jsx)(n.code,{children:"~/mycode/yaml/metal.html"})]}),"\n",(0,i.jsxs)(n.li,{children:['To the deployment "enter-sandman" add the metal-cm ConfigMap mounted to the path ',(0,i.jsx)(n.code,{children:"var/www/index.html"})]}),"\n",(0,i.jsx)(n.li,{children:"Create the deployment in the metallica namespace"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl create configmap metal-cm --from-file=~/mycode/yaml/metal.html -n metallica\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: enter-sandman\n  namespace: metallica\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: enter-sandman\n  template:\n    metadata:\n      labels:\n        app: enter-sandman\n    spec:\n      containers:\n        - name: web\n          image: nginx\n          volumeMounts:\n            - name: metal-volume\n              mountPath: /var/www/index.html\n      volumes:\n        - name: metal-volume\n          configMap:\n            name: metal-cm\n"})}),"\n",(0,i.jsx)(n.h2,{id:"use-configmaps-and-secrets-to-configure-applications-1",children:"Use ConfigMaps and Secrets to configure applications"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"You will adjust an existing pod named kiwi-secret-pod in namespace kiwi"}),"\n",(0,i.jsxs)(n.li,{children:["Make a new secret named juicysecret. It must contain the following key/value pairs:","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"username=kiwis"}),"\n",(0,i.jsx)(n.li,{children:"password=aredelicious"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Make this content available in the pod kiwi-secret-pod as environment variables USERKIWI and PASSKIWI"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Secret\nmetadata:\n  name: juicysecret\n  namespace: kiwi\ntype: Opaque\ndata:\n  username: kiwis\n  password: aredelicious\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kiwi-secret-pod\n  namespace: kiwi\nspec:\n  containers:\n    - name: kiwi-container\n      image: kiwi-image\n      env:\n        - name: USERKIWI\n          valueFrom:\n            secretKeyRef:\n              name: juicysecret\n              key: username\n        - name: PASSKIWI\n          valueFrom:\n            secretKeyRef:\n              name: juicysecret\n              key: password\n"})}),"\n",(0,i.jsx)(n.h2,{id:"define-and-enforce-network-policies",children:"Define and enforce Network Policies"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"In namespace cherry you'll find two deployments named pit and stem. Both deployments are exposed via a service."}),"\n",(0,i.jsxs)(n.li,{children:["Make a NetworkPolicy named cherry-control that:","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"prevents outgoing traffic from the pit deployment"}),"\n",(0,i.jsx)(n.li,{children:"Except to that of the stem deployment"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: cherry-control\n  namespace: cherry\nspec:\n  podSelector:\n    matchLabels:\n      app: pit\n  policyTypes:\n  - Ingress\n  - Egress\n  egress:\n  - to:\n    - podSelector:\n        matchLabels:\n          app: stem\n"})}),"\n",(0,i.jsx)(n.h2,{id:"use-helm-to-install-cluster-components",children:"Use Helm to install cluster components"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Modify the Helm chart configuration located at ",(0,i.jsx)(n.code,{children:"~/ckad-helm-task"})," to ensure the deployment creates 3 replicas of a pod..."]}),"\n",(0,i.jsx)(n.li,{children:"Then install the chart into the cluster"}),"\n",(0,i.jsx)(n.li,{children:"The resources will be created in the battleofhelmsdeep namespace"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Pretty simple, just setting the replica count in the values.yaml file to 3."}),"\n",(0,i.jsx)(n.h2,{id:"rollback-a-deployment",children:"Rollback a deployment"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"There is an existing deployment named mufasa in namespace king-of-lions"}),"\n",(0,i.jsx)(n.li,{children:"Check the deployment history and rollback to a version that actually works"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl rollout history deployment mufasa -n king-of-lions\nkubectl rollout undo deployment mufasa -n king-of-lions\n"})}),"\n",(0,i.jsx)(n.h2,{id:"kubeadm-join-a-new-node-to-the-cluster",children:"kubeadm: Join a new node to the cluster"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Join node-2 to your existing kubeadm cluster. It has already been pre-provisioned with all necessary installations."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubeadm token create --print-join-command\nkubeadm join <control-plane-endpoint> --token <token> --discovery-token-ca-cert-hash sha256:<hash>\n"})}),"\n",(0,i.jsx)(n.p,{children:"The control-plane-endpoint is usually the IP address or hostname of the control plane node in your cluster. You can find it by running:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl cluster-info\n"})}),"\n",(0,i.jsx)(n.h2,{id:"kubeadm-upgrade-an-existing-node",children:"kubeadm: Upgrade an existing node"}),"\n",(0,i.jsx)(n.p,{children:"Look at kubeadm documentation, there are more steps."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubeadm upgrade plan\nkubeadm upgrade apply v1.32.1\n"})}),"\n",(0,i.jsx)(n.h2,{id:"unresponsive-node-troubleshooting",children:"Unresponsive Node Troubleshooting"}),"\n",(0,i.jsx)(n.p,{children:"If there is a node that is not ready:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl describe node <node-name>\n"})}),"\n",(0,i.jsx)(n.p,{children:"and there is no indication why this might be the case:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"SSH into the node"}),"\n",(0,i.jsxs)(n.li,{children:["Get the kubelet status: ",(0,i.jsx)(n.code,{children:"sudo systemctl status kubelet"})]}),"\n",(0,i.jsxs)(n.li,{children:["Check the kubelet logs: ",(0,i.jsx)(n.code,{children:"sudo journalctl -u kubelet"})]}),"\n",(0,i.jsxs)(n.li,{children:["Maybe just restart: ",(0,i.jsx)(n.code,{children:"sudo systemctl restart kubelet"})]}),"\n"]}),"\n",(0,i.jsx)(n.h1,{id:"new-questions-since-february-2025",children:"New Questions since February 2025"}),"\n",(0,i.jsx)(n.h2,{id:"storage",children:"Storage"}),"\n",(0,i.jsx)(n.p,{children:"A developer needs a persistent volume for an application. Create a PersistentVolumeClaim with:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"size 100Mi"}),"\n",(0,i.jsx)(n.li,{children:"access mode ReadWriteOnce"}),"\n",(0,i.jsx)(n.li,{children:'using the storage-class "local-path"'}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Create a pod that mounts this PVC at /data and verify that the volume is automatically created and mounted."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: my-pvc\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 100Mi\n  storageClassName: local-path\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n  - name: my-container\n    image: my-image\n    volumeMounts:\n    - mountPath: /data\n      name: my-pvc\n  volumes:\n  - name: my-pvc\n    persistentVolumeClaim:\n      claimName: my-pvc\n"})}),"\n",(0,i.jsx)(n.h2,{id:"storage-ii",children:"Storage II"}),"\n",(0,i.jsx)(n.p,{children:"Create a StorageClass:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"named fast-storage"}),"\n",(0,i.jsx)(n.li,{children:"uses the rancher.io/local-path provisioner"}),"\n",(0,i.jsx)(n.li,{children:"sets a Retain reclaim policy"}),"\n",(0,i.jsx)(n.li,{children:"uses Immediate binding (default)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Create a PersistentVolume and a PersistentVolumeClaim:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"the PV should use fast-storage"}),"\n",(0,i.jsx)(n.li,{children:"configure node affinity so Kubernetes knows where to create the volume"}),"\n",(0,i.jsx)(n.li,{children:"the PVC should bind to that PV"}),"\n",(0,i.jsx)(n.li,{children:"Verify that when the PVC is deleted, the PV remains (in Released state)"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: fast-storage\nprovisioner: rancher.io/local-path\nreclaimPolicy: Retain\nvolumeBindingMode: Immediate\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: my-pv\nspec:\n  capacity:\n    storage: 100Mi\n  accessModes:\n  - ReadWriteOnce\n  storageClassName: fast-storage\n  claimRef:\n    namespace: default\n    name: my-pvc\n  nodeAffinity:\n    required:\n      nodeSelectorTerms:\n      - matchExpressions:\n        - key: kubernetes.io/hostname\n          operator: In\n          values:\n          - my-node\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: my-pvc\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 100Mi\n  storageClassName: fast-storage\n  volumeName: my-pv\n"})}),"\n",(0,i.jsx)(n.h2,{id:"storage-iii",children:"Storage III"}),"\n",(0,i.jsx)(n.p,{children:"Manually create a PersistentVolume that:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"is named static-pv-example"}),"\n",(0,i.jsx)(n.li,{children:"requests 200Mi"}),"\n",(0,i.jsx)(n.li,{children:"uses a hostPath on node-1"}),"\n",(0,i.jsx)(n.li,{children:"access mode ReadWriteOnce"}),"\n",(0,i.jsx)(n.li,{children:"Retain reclaim policy"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Then create a matching PersistentVolumeClaim (static-pvc-example) to bind to it"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: static-pv-example\nspec:\n  capacity:\n    storage: 200Mi\n  accessModes:\n  - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Retain\n  hostPath:\n    path: /mnt/data\n  nodeAffinity:\n    required:\n      nodeSelectorTerms:\n      - matchExpressions:\n        - key: kubernetes.io/hostname\n          operator: In\n          values:\n          - node-1\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Node affinity docs: ",(0,i.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes-using-node-affinity/",children:"https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes-using-node-affinity/"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: static-pvc-example\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 200Mi\n  volumeName: static-pv-example\n"})}),"\n",(0,i.jsx)(n.h2,{id:"autoscaling",children:"Autoscaling"}),"\n",(0,i.jsx)(n.p,{children:"Deploy a sample workload and configure Horizontal Pod Autoscaling for it. Specifically:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use the existing deployment ",(0,i.jsx)(n.code,{children:"cpu-demo"})]}),"\n",(0,i.jsx)(n.li,{children:"Configure an HPA to scale this deployment from 1 up to 5 replicas when the average CPU utilization exceeds 50%."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: cpu-demo-hpa\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: cpu-demo\n  minReplicas: 1\n  maxReplicas: 5\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 50\n"})}),"\n",(0,i.jsx)(n.h2,{id:"node-affinity",children:"Node Affinity"}),"\n",(0,i.jsx)(n.p,{children:"Only schedule a Pod on the node that has a disktype=ssd label."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  affinity:\n    nodeAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n        nodeSelectorTerms:\n        - matchExpressions:\n          - key: disktype\n            operator: In\n            values:\n            - ssd\n  containers:\n  - name: my-container\n    image: my-image\n"})}),"\n",(0,i.jsx)(n.h2,{id:"pod-security",children:"Pod Security"}),"\n",(0,i.jsx)(n.p,{children:"Enforce the Restricted Pod Security Standard on the namespace restricted-ns. Pods in that namespace cannot:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"have privileged access"}),"\n",(0,i.jsx)(n.li,{children:"host networking"}),"\n",(0,i.jsx)(n.li,{children:"have any elevated rights"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["=>> Page must be memorized... ",(0,i.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/configure-pod-container/enforce-standards-namespace-labels/",children:"https://kubernetes.io/docs/tasks/configure-pod-container/enforce-standards-namespace-labels/"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Namespace\nmetadata:\n  name: my-baseline-namespace\n  labels:\n    pod-security.kubernetes.io/enforce: restricted\n    pod-security.kubernetes.io/enforce-version: v1.33 # Not needed for this task\n"})}),"\n",(0,i.jsx)(n.h2,{id:"taints-and-tolerations",children:"Taints and Tolerations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On node node-1, add a taint so that no normal pods can schedule there."}),"\n",(0,i.jsx)(n.li,{children:"Then schedule a Pod on that node by adding the appropriate toleration to the Pod spec (and ensure it actually lands on node-2)."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl taint nodes node-1 key=value:NoSchedule\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  nodeSelector:\n    kubernetes.io/hostname: node-1\n  tolerations:\n  - key: "key"\n    operator: "Equal"\n    value: "value"\n    effect: "NoSchedule"\n  containers:\n  - name: my-container\n    image: my-image\n'})}),"\n",(0,i.jsx)(n.h2,{id:"statefulsets-and-headless-services",children:"StatefulSets and Headless Services"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Deploy a StatefulSet named web with 2 replicas using the NGINX image."}),"\n",(0,i.jsx)(n.li,{children:"Each pod should have its own 1Gi persistent volume for /usr/share/nginx/html."}),"\n",(0,i.jsx)(n.li,{children:"Ensure that the StatefulSet pods have stable network identities and persistent storage that remains associated with the ordinal index (even if pods are rescheduled)."}),"\n",(0,i.jsx)(n.li,{children:"Create a Headless Service named web to facilitate stable networking for the StatefulSet."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Service\nmetadata:\n  name: web\n  labels:\n    app: web\nspec:\n  clusterIP: None # Headless service\n  selector:\n    app: web # Select pods with the label app=web\n  ports:\n  - name: http\n    port: 80\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: web\nspec:\n  serviceName: "web" # Must match the headless service name\n  replicas: 2\n  selector:\n    matchLabels:\n      app: web\n  template:\n    metadata:\n      labels:\n        app: web\n    spec:\n      containers:\n      - name: nginx\n        image: nginx\n        ports:\n        - containerPort: 80\n        volumeMounts:\n        - name: www # Must match the volumeClaimTemplates name\n  volumeClaimTemplates: # Define a PVC template\n  - metadata:\n      name: www # Must match the volumeMount name\n    spec:\n      accessModes: ["ReadWriteOnce"]\n      resources:\n        requests:\n          storage: 1Gi\n'})}),"\n",(0,i.jsx)(n.h2,{id:"coredns-troubleshooting",children:"CoreDNS Troubleshooting"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Check the logs of the CoreDNS pods for any errors: ",(0,i.jsx)(n.code,{children:"kubectl logs -n kube-system coredns-<id>"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Configuration is inside a ConfigMap, to edit: ",(0,i.jsx)(n.code,{children:"kubectl edit configmap coredns -n kube-system"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Ensure that the CoreDNS service is correctly configured and running"}),"\n",(0,i.jsxs)(n.li,{children:["Verify that the DNS resolution is working for the pods by using tools like ",(0,i.jsx)(n.code,{children:"nslookup"})," or ",(0,i.jsx)(n.code,{children:"dig"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"coredns-configuration",children:"CoreDNS Configuration"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cluster workloads need to resolve a custom domain internally."}),"\n",(0,i.jsx)(n.li,{children:"Configure CoreDNS such that any DNS query for myapp.internal returns the IP address 10.10.10.10."}),"\n",(0,i.jsx)(n.li,{children:"After configuration, pods in the cluster should be able to resolve myapp.internal to 10.10.10.10."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Needed config:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes cluster.local in-addr.arpa ip6.arpa {\n            pods insecure\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        forward . /etc/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n    hosts {\n      10.10.10.10 myapp.internal\n      fallthrough # Best practice to include\n    }\n"})}),"\n",(0,i.jsx)(n.p,{children:"After that delete the coredns pod and it should automatically restart with the new configuration."}),"\n",(0,i.jsx)(n.p,{children:"Test if it works:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl run --rm -ti dns-client --image=busybox -- nslookup myapp.internal\n"})}),"\n",(0,i.jsx)(n.h2,{id:"helm",children:"Helm"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use Helm to deploy the Traefik Ingress Controller on the cluster."}),"\n",(0,i.jsx)(n.li,{children:"Install it in a dedicated namespace traefik with release name traefik."}),"\n",(0,i.jsx)(n.li,{children:"Ensure that Traefik's support for the Kubernetes Gateway API is enabled via Helm values."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"helm repo add traefik https://traefik.github.io/charts\nhelm repo update\n\nhelm install traefik traefik/traefik --namespace traefik --create-namespace --set experimental.kubernetesGateway.enabled=true\n"})}),"\n",(0,i.jsx)(n.p,{children:"To get the values of the Helm chart (hopefully they will be provided):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"helm show values traefik/traefik # grep is your friend if there is too much output\n"})}),"\n",(0,i.jsx)(n.h2,{id:"kustomize",children:"Kustomize"}),"\n",(0,i.jsx)(n.p,{children:"You have base manifests for an app in /home/student/kustomize/base.\nUse Kustomize to deploy a production variant of this app:"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 The production variant should add the label environment: production to all resources.\n\u2022 It should prefix resource names with ",(0,i.jsx)(n.code,{children:"prod-"}),"\n\u2022 It should use Nginx image tag 1.21 instead of the base's 1.19"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.youtube.com/watch?v=eGv6iPWQKyo&t=2112s",children:"https://www.youtube.com/watch?v=eGv6iPWQKyo&t=2112s"})}),"\n",(0,i.jsx)(n.h2,{id:"gateway-api-guaranteed-task",children:'Gateway API ("guaranteed task")'}),"\n",(0,i.jsx)(n.p,{children:"Your cluster uses the Gateway API for ingress traffic.\nA service named web-service is running in the default namespace on port 80.\nA Gateway API-compatible controller is already installed, and a\nGatewayClass named example-gw-class is available in the cluster."}),"\n",(0,i.jsx)(n.p,{children:"Objective:\nUse Gateway API resources to expose web-service externally on HTTP port 80, routed via the hostname web.example.com."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: web-gateway\nspec:\n  gatewayClassName: example-gw-class\n  listeners:\n    - name: http\n      protocol: HTTP\n      port: 80\n      hostname: web.example.com\n      allowedRoutes:\n        namespaces:\n          from: same\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: web-http-route\nspec:\n  parentRefs:\n    - name: web-gateway\n      sectionName: http\n  hostnames:\n    - web.example.com\n  rules:\n    - matches:\n        - path:\n            type: Prefix\n            value: /\n      backendRefs:\n        - name: web-service\n          port: 80\n"})}),"\n",(0,i.jsx)(n.h2,{id:"pod-admission--limit-ranges",children:"Pod Admission / Limit Ranges"}),"\n",(0,i.jsx)(n.p,{children:"In the namespace limit-test, enforce default resource limits and requests for containers:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If a container has no CPU/memory requests/limits, assign a default request of 100m CPU and 50Mi memory, and a default limit of 200m CPU and 100Mi memory."}),"\n",(0,i.jsx)(n.li,{children:"Prevent any container in this namespace from requesting more than 500Mi memory."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: LimitRange\nmetadata:\n  name: limit-range\n  namespace: limit-test\nspec:\n  limits:\n    - type: Container\n      default:\n        cpu: 200m\n        memory: 100Mi\n      defaultRequest:\n        cpu: 100m\n        memory: 50Mi\n      max:\n        memory: 500Mi\n"})}),"\n",(0,i.jsx)(n.h1,{id:"important-notes",children:"Important Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.reddit.com/r/devops/comments/1m1xj7q/comment/n3kpl0u/?share_id=luomAHCKTKEnrucnwBA0d&utm_medium=android_app&utm_name=androidcss&utm_source=share&utm_term=1",children:"https://www.reddit.com/r/devops/comments/1m1xj7q/comment/n3kpl0u/?share_id=luomAHCKTKEnrucnwBA0d&utm_medium=android_app&utm_name=androidcss&utm_source=share&utm_term=1"})}),"\n",(0,i.jsx)(n.li,{children:"VPAs are not covered only HPAs"}),"\n",(0,i.jsx)(n.li,{children:"Installing packages with dpkg? How?"}),"\n",(0,i.jsx)(n.li,{children:"Definitely look at CRDs"}),"\n",(0,i.jsx)(n.li,{children:"Installing CRI?"}),"\n",(0,i.jsx)(n.li,{children:"install calico cni"}),"\n",(0,i.jsx)(n.li,{children:"update an immutable configmap"}),"\n",(0,i.jsx)(n.li,{children:"argocd ==> add repo"}),"\n",(0,i.jsxs)(n.li,{children:["vim: use command ",(0,i.jsx)(n.code,{children:":syntax on"})," for syntax highlighting; ",":set"," paste + ",":set"," noai for inserting without issues"]}),"\n",(0,i.jsx)(n.li,{children:"use kubectl explain"}),"\n",(0,i.jsxs)(n.li,{children:["Look at: ",(0,i.jsx)(n.a,{href:"https://github.com/anouarharrou/The-Ultimate-CKA-Guide/blob/main/My%20Note/CKA%20Simulations%20Exams%20Q&A.md",children:"https://github.com/anouarharrou/The-Ultimate-CKA-Guide/blob/main/My%20Note/CKA%20Simulations%20Exams%20Q&A.md"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"I also highly recommend this resource: CKA Guide Q&A (Just one note: When installing Argo with HELM, you shouldn't use --skip-crds. Instead, set the appropriate Helm chart values.)"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Concerning strategy - I tackled the easier tasks first and flagged the difficult ones (troubleshooting) for later."}),"\n",(0,i.jsx)(n.li,{children:"Personally I recommend coming up with a list of docs pages you reference frequently when practicing and when you start the exam just open those pages up in the browser so you can quickly reference them if you need to. Example: for me, when I was studying I would frequently reference the K8s Documentation Pods page, the K8s API Reference Pods page, and the K8s Documentation Persistent Volume Page so when I started the exam the first thing I did was click the link to open up the K8s Documentation then duplicated that tab (right click tab -> duplicate) a couple times, then searched the docs for the appropriate pages in each one and had them open the whole exam. Its a small thing but it definitely helped knowing where they were and having them open so I didn't need to wait for loading or anything."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>l,x:()=>o});var s=a(96540);const i={},t=s.createContext(i);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);