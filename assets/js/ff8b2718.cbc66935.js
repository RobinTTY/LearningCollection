"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[7131],{97215:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>o});var s=i(74848),t=i(28453);const a={title:"DynamoDB",sidebar_position:18},l=void 0,r={id:"cloud/aws/certified-developer-associate/dynamodb",title:"DynamoDB",description:"- Fully managed, highly available with replication across multiple AZs",source:"@site/docs/cloud/aws/certified-developer-associate/dynamodb.md",sourceDirName:"cloud/aws/certified-developer-associate",slug:"/cloud/aws/certified-developer-associate/dynamodb",permalink:"/LearningCollection/cloud/aws/certified-developer-associate/dynamodb",draft:!1,unlisted:!1,editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/cloud/aws/certified-developer-associate/dynamodb.md",tags:[],version:"current",sidebarPosition:18,frontMatter:{title:"DynamoDB",sidebar_position:18},sidebar:"docs",previous:{title:"Lambda",permalink:"/LearningCollection/cloud/aws/certified-developer-associate/lambda"},next:{title:"API Gateway",permalink:"/LearningCollection/cloud/aws/certified-developer-associate/api-gateway"}},d={},o=[{value:"Basics",id:"basics",level:2},{value:"Primary Keys",id:"primary-keys",level:3},{value:"Writing Data",id:"writing-data",level:3},{value:"Reading Data",id:"reading-data",level:3},{value:"Query",id:"query",level:4},{value:"Scan",id:"scan",level:4},{value:"Deleting Data",id:"deleting-data",level:3},{value:"Batch Operations",id:"batch-operations",level:3},{value:"Time To Live (TTL)",id:"time-to-live-ttl",level:3},{value:"Transactions",id:"transactions",level:3},{value:"Capacity Computations",id:"capacity-computations",level:4},{value:"Read/Write Capacity Modes",id:"readwrite-capacity-modes",level:2},{value:"R/W Capacity Modes \u2013 Provisioned",id:"rw-capacity-modes--provisioned",level:3},{value:"Write Capacity Units (WCU)",id:"write-capacity-units-wcu",level:3},{value:"Strongly Consistent Read vs. Eventually Consistent Read",id:"strongly-consistent-read-vs-eventually-consistent-read",level:3},{value:"Read Capacity Units (RCU)",id:"read-capacity-units-rcu",level:3},{value:"Partitions Internal",id:"partitions-internal",level:3},{value:"Throttling",id:"throttling",level:3},{value:"R/W Capacity Modes \u2013 On-Demand",id:"rw-capacity-modes--on-demand",level:3},{value:"PartiQL",id:"partiql",level:2},{value:"Conditional Writes",id:"conditional-writes",level:2},{value:"Example on Update Item",id:"example-on-update-item",level:3},{value:"Example on Delete Item",id:"example-on-delete-item",level:3},{value:"Do Not Overwrite Elements",id:"do-not-overwrite-elements",level:3},{value:"Example Complex Condition",id:"example-complex-condition",level:3},{value:"Example of String Comparisons",id:"example-of-string-comparisons",level:3},{value:"Secondary Indexes",id:"secondary-indexes",level:2},{value:"Local Secondary Index (LSI)",id:"local-secondary-index-lsi",level:3},{value:"Global Secondary Index (GSI)",id:"global-secondary-index-gsi",level:3},{value:"Indexes and Throttling",id:"indexes-and-throttling",level:3},{value:"DynamoDB Accelerator (DAX)",id:"dynamodb-accelerator-dax",level:2},{value:"DynamoDB Streams",id:"dynamodb-streams",level:2},{value:"DynamoDB Streams &amp; AWS Lambda",id:"dynamodb-streams--aws-lambda",level:3},{value:"Misc",id:"misc",level:2},{value:"DynamoDB CLI",id:"dynamodb-cli",level:3},{value:"DynamoDB as Session State Cache",id:"dynamodb-as-session-state-cache",level:3},{value:"Write Sharding",id:"write-sharding",level:3},{value:"Large Objects Pattern",id:"large-objects-pattern",level:3},{value:"Indexing S3 Objects Metadata",id:"indexing-s3-objects-metadata",level:3},{value:"Operations",id:"operations",level:3},{value:"Security &amp; Other Features",id:"security--other-features",level:2},{value:"Users Interact with DynamoDB Directly",id:"users-interact-with-dynamodb-directly",level:3},{value:"Fine-Grained Access Control",id:"fine-grained-access-control",level:3}];function c(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Fully managed, highly available with replication across multiple AZs"}),"\n",(0,s.jsx)(n.li,{children:"NoSQL database - not a relational database"}),"\n",(0,s.jsx)(n.li,{children:"Scales to massive workloads, distributed database"}),"\n",(0,s.jsx)(n.li,{children:"Millions of requests per seconds, trillions of row, 100s of TB of storage"}),"\n",(0,s.jsx)(n.li,{children:"Fast and consistent in performance (low latency on retrieval)"}),"\n",(0,s.jsx)(n.li,{children:"Integrated with IAM for security, authorization and administration"}),"\n",(0,s.jsx)(n.li,{children:"Enables event driven programming with DynamoDB Streams"}),"\n",(0,s.jsx)(n.li,{children:"Low cost and auto-scaling capabilities"}),"\n",(0,s.jsx)(n.li,{children:"Standard & Infrequent Access (IA) Table Class"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"basics",children:"Basics"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"DynamoDB is made of Tables"}),"\n",(0,s.jsx)(n.li,{children:"Each table has a Primary Key (must be decided at creation time)"}),"\n",(0,s.jsx)(n.li,{children:"Each table can have an infinite number of items (= rows)"}),"\n",(0,s.jsx)(n.li,{children:"Each item has attributes (can be added over time \u2013 can be null)"}),"\n",(0,s.jsx)(n.li,{children:"Maximum size of an item is 400KB"}),"\n",(0,s.jsxs)(n.li,{children:["Data types supported are:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Scalar Types \u2013 String, Number, Binary, Boolean, Null"}),"\n",(0,s.jsx)(n.li,{children:"Document Types \u2013 List, Map"}),"\n",(0,s.jsx)(n.li,{children:"Set Types \u2013 String Set, Number Set, Binary Set"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"primary-keys",children:"Primary Keys"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Option 1: Partition Key (HASH)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Partition key must be unique for each item"}),"\n",(0,s.jsx)(n.li,{children:"Partition key must be \u201cdiverse\u201d so that the data is distributed"}),"\n",(0,s.jsx)(n.li,{children:"Example: \u201cUser_ID\u201d for a users table"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamo-primary-hash",src:i(2057).A+"",width:"1063",height:"447"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Option 2: Partition Key + Sort Key (HASH + RANGE)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The combination must be unique for each item"}),"\n",(0,s.jsx)(n.li,{children:"Data is grouped by partition key (key with highest cardinality is a good candidate)"}),"\n",(0,s.jsx)(n.li,{children:"Example: users-games table, \u201cUser_ID\u201d for Partition Key and \u201cGame_ID\u201d for Sort Key"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamo-primary-range",src:i(38766).A+"",width:"1384",height:"423"})}),"\n",(0,s.jsx)(n.h3,{id:"writing-data",children:"Writing Data"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["PutItem","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Creates a new item or fully replace an old item (same Primary Key)"}),"\n",(0,s.jsx)(n.li,{children:"Consumes WCUs"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["UpdateItem","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Edits an existing item\u2019s attributes or adds a new item if it doesn\u2019t exist"}),"\n",(0,s.jsx)(n.li,{children:"Can be used to implement Atomic Counters \u2013 a numeric attribute that\u2019s unconditionally incremented"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Conditional Writes","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Accept a write/update/delete only if conditions are met, otherwise returns an error"}),"\n",(0,s.jsx)(n.li,{children:"Helps with concurrent access to items"}),"\n",(0,s.jsx)(n.li,{children:"No performance impact"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamo-write-types",src:i(29777).A+"",width:"1810",height:"781"})}),"\n",(0,s.jsx)(n.h3,{id:"reading-data",children:"Reading Data"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["GetItem","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Read based on Primary key"}),"\n",(0,s.jsx)(n.li,{children:"Primary Key can be HASH or HASH+RANGE"}),"\n",(0,s.jsx)(n.li,{children:"Eventually Consistent Read (default)"}),"\n",(0,s.jsx)(n.li,{children:"Option to use Strongly Consistent Reads (more RCU - might take longer)"}),"\n",(0,s.jsx)(n.li,{children:"ProjectionExpression can be specified to retrieve only certain attributes"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"query",children:"Query"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Query returns items based on:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["KeyConditionExpression","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Partition Key value (must be = operator) - required"}),"\n",(0,s.jsx)(n.li,{children:"Sort Key value (=, <, <=, >, >=, Between, Begins with) - optional"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["FilterExpression","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Additional filtering after the Query operation (before data returned to you)"}),"\n",(0,s.jsx)(n.li,{children:"Use only with non-key attributes (does not allow HASH or RANGE attributes)"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Returns:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The number of items specified in Limit"}),"\n",(0,s.jsx)(n.li,{children:"Or up to 1 MB of data"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Ability to do pagination on the results"}),"\n",(0,s.jsx)(n.li,{children:"Can query table, a Local Secondary Index, or a Global Secondary Index"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"scan",children:"Scan"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Scan the entire table and then filter out data (inefficient)"}),"\n",(0,s.jsx)(n.li,{children:"Returns up to 1 MB of data \u2013 use pagination to keep on reading"}),"\n",(0,s.jsx)(n.li,{children:"Consumes a lot of RCU"}),"\n",(0,s.jsx)(n.li,{children:"Limit impact using Limit or reduce the size of the result and pause"}),"\n",(0,s.jsxs)(n.li,{children:["For faster performance, use Parallel Scan","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Multiple workers scan multiple data segments at the same time"}),"\n",(0,s.jsx)(n.li,{children:"Increases the throughput and RCU consumed"}),"\n",(0,s.jsx)(n.li,{children:"Limit the impact of parallel scans just like you would for Scans"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Can use ProjectionExpression & FilterExpression (no changes to RCU)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"deleting-data",children:"Deleting Data"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["DeleteItem","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Delete an individual item"}),"\n",(0,s.jsx)(n.li,{children:"Ability to perform a conditional delete"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["DeleteTable","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Delete a whole table and all its items"}),"\n",(0,s.jsx)(n.li,{children:"Much quicker deletion than calling DeleteItem on all items"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"batch-operations",children:"Batch Operations"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Allows you to save in latency by reducing the number of API calls"}),"\n",(0,s.jsx)(n.li,{children:"Operations are done in parallel for better efficiency"}),"\n",(0,s.jsx)(n.li,{children:"Part of a batch can fail; in which case we need to try again for the failed items"}),"\n",(0,s.jsxs)(n.li,{children:["BatchWriteItem","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Up to 25 PutItem and/or DeleteItem in one call"}),"\n",(0,s.jsx)(n.li,{children:"Up to 16 MB of data written, up to 400 KB of data per item"}),"\n",(0,s.jsx)(n.li,{children:"Can\u2019t update items (use UpdateItem)"}),"\n",(0,s.jsx)(n.li,{children:"UnprocessedItems for failed write operations (exponential backoff or add WCU)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["BatchGetItem","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Return items from one or more tables"}),"\n",(0,s.jsx)(n.li,{children:"Up to 100 items, up to 16 MB of data"}),"\n",(0,s.jsx)(n.li,{children:"Items are retrieved in parallel to minimize latency"}),"\n",(0,s.jsx)(n.li,{children:"UnprocessedKeys for failed read operations (exponential backoff or add RCU)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"time-to-live-ttl",children:"Time To Live (TTL)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Automatically delete items after an expiry timestamp"}),"\n",(0,s.jsx)(n.li,{children:"Doesn\u2019t consume any WCUs (i.e., no extra cost)"}),"\n",(0,s.jsx)(n.li,{children:"The TTL attribute must be a \u201cNumber\u201d data type with \u201cUnix Epoch timestamp\u201d value"}),"\n",(0,s.jsx)(n.li,{children:"Expired items deleted within 48 hours of expiration"}),"\n",(0,s.jsx)(n.li,{children:"Expired items, that haven\u2019t been deleted, appears in reads/queries/scans (if you don\u2019t want them, filter them out)"}),"\n",(0,s.jsx)(n.li,{children:"Expired items are deleted from both LSIs and GSIs"}),"\n",(0,s.jsx)(n.li,{children:"A delete operation for each expired item enters the DynamoDB Streams (can help recover expired items)"}),"\n",(0,s.jsx)(n.li,{children:"Use cases: reduce stored data by keeping only current items, adhere to regulatory obligations, \u2026"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamo-ttl",src:i(93948).A+"",width:"682",height:"877"})}),"\n",(0,s.jsx)(n.h3,{id:"transactions",children:"Transactions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Coordinated, all-or-nothing operations (add/update/delete) to multiple items across one or more tables"}),"\n",(0,s.jsx)(n.li,{children:"Provides Atomicity, Consistency, Isolation, and Durability (ACID)"}),"\n",(0,s.jsx)(n.li,{children:"Read Modes \u2013 Eventual Consistency, Strong Consistency, Transactional"}),"\n",(0,s.jsx)(n.li,{children:"Write Modes \u2013 Standard, Transactional"}),"\n",(0,s.jsxs)(n.li,{children:["Consumes 2x WCUs & RCUs","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"DynamoDB performs 2 operations for every item (prepare & commit)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Two operations:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"TransactGetItems \u2013 one or more GetItem operations"}),"\n",(0,s.jsx)(n.li,{children:"TransactWriteItems \u2013 one or more PutItem, UpdateItem, and DeleteItem operations"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Use cases: financial transactions, managing orders, multiplayer games, \u2026"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamo-transaction",src:i(33652).A+"",width:"1735",height:"757"})}),"\n",(0,s.jsx)(n.h4,{id:"capacity-computations",children:"Capacity Computations"}),"\n",(0,s.jsx)(n.admonition,{title:"Important",type:"danger",children:(0,s.jsx)(n.p,{children:"This is important for the exam"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamo-transaction-capacity",src:i(77367).A+"",width:"1498",height:"490"})}),"\n",(0,s.jsx)(n.h2,{id:"readwrite-capacity-modes",children:"Read/Write Capacity Modes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Control how you manage your table\u2019s capacity (read/write throughput)"}),"\n",(0,s.jsxs)(n.li,{children:["Provisioned Mode (default)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"You specify the number of reads/writes per second"}),"\n",(0,s.jsx)(n.li,{children:"You need to plan capacity beforehand"}),"\n",(0,s.jsx)(n.li,{children:"Pay for provisioned"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["On-Demand Mode read & write capacity units","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Read/writes automatically scale up/down with your workloads"}),"\n",(0,s.jsx)(n.li,{children:"No capacity planning needed"}),"\n",(0,s.jsx)(n.li,{children:"Pay for what you use, more expensive ($$$)"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"You can switch between different modes once every 24 hours"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"rw-capacity-modes--provisioned",children:"R/W Capacity Modes \u2013 Provisioned"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Table must have provisioned read and write capacity units"}),"\n",(0,s.jsx)(n.li,{children:"Read Capacity Units (RCU) \u2013 throughput for reads"}),"\n",(0,s.jsx)(n.li,{children:"Write Capacity Units (WCU) \u2013 throughput for writes"}),"\n",(0,s.jsx)(n.li,{children:"Option to setup auto-scaling of throughput to meet demand"}),"\n",(0,s.jsx)(n.li,{children:"Throughput can be exceeded temporarily using \u201cBurst Capacity\u201d"}),"\n",(0,s.jsx)(n.li,{children:"If Burst Capacity has been consumed, you\u2019ll get a \u201cProvisionedThroughputExceededException\u201d"}),"\n",(0,s.jsx)(n.li,{children:"It\u2019s then advised to do an exponential backoff retry"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"write-capacity-units-wcu",children:"Write Capacity Units (WCU)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"One Write Capacity Unit (WCU) represents one write per second for an item up to 1 KB in size"}),"\n",(0,s.jsx)(n.li,{children:"If the items are larger than 1 KB, more WCUs are consumed"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"wcu-examples",src:i(9516).A+"",width:"1446",height:"448"})}),"\n",(0,s.jsx)(n.h3,{id:"strongly-consistent-read-vs-eventually-consistent-read",children:"Strongly Consistent Read vs. Eventually Consistent Read"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Eventually Consistent Read (default)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If we read just after a write, it\u2019s possible we\u2019ll get some stale data because of replication"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Strongly Consistent Read","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If we read just after a write, we will get the correct data"}),"\n",(0,s.jsx)(n.li,{children:"Set \u201cConsistentRead\u201d parameter to True in API calls (GetItem, BatchGetItem, Query, Scan)"}),"\n",(0,s.jsx)(n.li,{children:"Consumes twice the RCU"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"read-capacity-units-rcu",children:"Read Capacity Units (RCU)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"One Read Capacity Unit (RCU) represents one Strongly Consistent Read per second, or two Eventually Consistent Reads per second, for an item up to 4 KB in size"}),"\n",(0,s.jsx)(n.li,{children:"If the items are larger than 4 KB, more RCUs are consumed"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"rcu-examples",src:i(43931).A+"",width:"1621",height:"412"})}),"\n",(0,s.jsx)(n.h3,{id:"partitions-internal",children:"Partitions Internal"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"partition-internal",src:i(92665).A+"",width:"1702",height:"874"})}),"\n",(0,s.jsx)(n.h3,{id:"throttling",children:"Throttling"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If we exceed provisioned RCUs or WCUs, we get \u201cProvisionedThroughputExceededException\u201d"}),"\n",(0,s.jsxs)(n.li,{children:["Reasons:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Hot Keys \u2013 one partition key is being read too many times (e.g., popular item)"}),"\n",(0,s.jsx)(n.li,{children:"Hot Partitions"}),"\n",(0,s.jsx)(n.li,{children:"Very large items, remember RCU and WCU depends on size of items"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Solutions:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Exponential backoff when exception is encountered (already in SDK)"}),"\n",(0,s.jsx)(n.li,{children:"Distribute partition keys as much as possible"}),"\n",(0,s.jsx)(n.li,{children:"If RCU issue, we can use DynamoDB Accelerator (DAX)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"rw-capacity-modes--on-demand",children:"R/W Capacity Modes \u2013 On-Demand"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Read/writes automatically scale up/down with your workloads"}),"\n",(0,s.jsx)(n.li,{children:"No capacity planning needed (WCU / RCU)"}),"\n",(0,s.jsx)(n.li,{children:"Unlimited WCU & RCU, no throttle, more expensive"}),"\n",(0,s.jsx)(n.li,{children:"You\u2019re charged for reads/writes that you use in terms of RRU and WRU"}),"\n",(0,s.jsx)(n.li,{children:"Read Request Units (RRU) \u2013 throughput for reads (same as RCU)"}),"\n",(0,s.jsx)(n.li,{children:"Write Request Units (WRU) \u2013 throughput for writes (same as WCU)"}),"\n",(0,s.jsx)(n.li,{children:"2.5x more expensive than provisioned capacity (use with care)"}),"\n",(0,s.jsx)(n.li,{children:"Use cases: unknown workloads, unpredictable application traffic, \u2026"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"partiql",children:"PartiQL"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SQL-compatible query language for DynamoDB"}),"\n",(0,s.jsx)(n.li,{children:"Allows you to select, insert, update, and delete data in DynamoDB using SQL"}),"\n",(0,s.jsx)(n.li,{children:"Run queries across multiple DynamoDB tables"}),"\n",(0,s.jsxs)(n.li,{children:["Run PartiQL queries from:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"AWS Management Console"}),"\n",(0,s.jsx)(n.li,{children:"NoSQL Workbench for DynamoDB"}),"\n",(0,s.jsx)(n.li,{children:"DynamoDB APIs"}),"\n",(0,s.jsx)(n.li,{children:"AWS CLI"}),"\n",(0,s.jsx)(n.li,{children:"AWS SDK"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Supports some (but not all) statements:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"INSERT"}),"\n",(0,s.jsx)(n.li,{children:"UPDATE"}),"\n",(0,s.jsx)(n.li,{children:"SELECT"}),"\n",(0,s.jsx)(n.li,{children:"DELETE"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"It supports Batch operation"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"conditional-writes",children:"Conditional Writes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"DynamoDB has a feature called \u201cConditional Writes\u201d (Optimistic Locking)"}),"\n",(0,s.jsx)(n.li,{children:"A strategy to ensure an item hasn\u2019t changed before you update/delete it"}),"\n",(0,s.jsx)(n.li,{children:"Each item has an attribute that acts as a version number"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamo-optimistic-locking",src:i(99913).A+"",width:"1500",height:"474"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"For PutItem, UpdateItem, DeleteItem, and BatchWriteItem"}),"\n",(0,s.jsxs)(n.li,{children:["You can specify a Condition expression to determine which items should be modified:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"attribute_exists"}),"\n",(0,s.jsx)(n.li,{children:"attribute_not_exists"}),"\n",(0,s.jsx)(n.li,{children:"attribute_type"}),"\n",(0,s.jsx)(n.li,{children:"contains (for string)"}),"\n",(0,s.jsx)(n.li,{children:"begins_with (for string)"}),"\n",(0,s.jsxs)(n.li,{children:["ProductCategory IN (",":cat1",", ",":cat2",") and Price between ",":low"," and ",":high"]}),"\n",(0,s.jsx)(n.li,{children:"size (string length)"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Note: Filter Expression filters the results of read queries, while Condition Expressions are for write operations"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-on-update-item",children:"Example on Update Item"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamo-conditional-update",src:i(19916).A+"",width:"1615",height:"781"})}),"\n",(0,s.jsx)(n.h3,{id:"example-on-delete-item",children:"Example on Delete Item"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamo-delete",src:i(87459).A+"",width:"1651",height:"762"})}),"\n",(0,s.jsx)(n.h3,{id:"do-not-overwrite-elements",children:"Do Not Overwrite Elements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["attribute_not_exists(partition_key)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Make sure the item isn\u2019t overwritten"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["attribute_not_exists(partition_key) and attribute_not_exists(sort_key)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Make sure the partition / sort key combination is not overwritten"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-complex-condition",children:"Example Complex Condition"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamo-complex-condition",src:i(25984).A+"",width:"1638",height:"670"})}),"\n",(0,s.jsx)(n.h3,{id:"example-of-string-comparisons",children:"Example of String Comparisons"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"begins_with \u2013 check if prefix matches"}),"\n",(0,s.jsx)(n.li,{children:"contains \u2013 check if string is contained in another string"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamo-string-comparisons",src:i(39960).A+"",width:"1230",height:"517"})}),"\n",(0,s.jsx)(n.h2,{id:"secondary-indexes",children:"Secondary Indexes"}),"\n",(0,s.jsx)(n.h3,{id:"local-secondary-index-lsi",children:"Local Secondary Index (LSI)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Alternative Sort Key for your table (same Partition Key as that of base table)"}),"\n",(0,s.jsx)(n.li,{children:"The Sort Key consists of one scalar attribute (String, Number, or Binary)"}),"\n",(0,s.jsx)(n.li,{children:"Up to 5 Local Secondary Indexes per table"}),"\n",(0,s.jsx)(n.li,{children:"Must be defined at table creation time"}),"\n",(0,s.jsx)(n.li,{children:"Attribute Projections \u2013 can contain some or all the attributes of the base table (KEYS_ONLY, INCLUDE, ALL)"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"local-secondary-index",src:i(6774).A+"",width:"1303",height:"423"})}),"\n",(0,s.jsx)(n.h3,{id:"global-secondary-index-gsi",children:"Global Secondary Index (GSI)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Alternative Primary Key (HASH or HASH+RANGE) from the base table"}),"\n",(0,s.jsx)(n.li,{children:"Speed up queries on non-key attributes"}),"\n",(0,s.jsx)(n.li,{children:"The Index Key consists of scalar attributes (String, Number, or Binary)"}),"\n",(0,s.jsx)(n.li,{children:"Attribute Projections \u2013 some or all the attributes of the base table (KEYS_ONLY, INCLUDE, ALL)"}),"\n",(0,s.jsx)(n.li,{children:"Must provision RCUs & WCUs for the index"}),"\n",(0,s.jsx)(n.li,{children:"Can be added/modified after table creation"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"global-secondary-index",src:i(54002).A+"",width:"1695",height:"396"})}),"\n",(0,s.jsx)(n.h3,{id:"indexes-and-throttling",children:"Indexes and Throttling"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Global Secondary Index (GSI):","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If the writes are throttled on the GSI, then the main table will be throttled!"}),"\n",(0,s.jsx)(n.li,{children:"Even if the WCU on the main tables are fine"}),"\n",(0,s.jsx)(n.li,{children:"Choose your GSI partition key carefully!"}),"\n",(0,s.jsx)(n.li,{children:"Assign your WCU capacity carefully!"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Local Secondary Index (LSI):","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Uses the WCUs and RCUs of the main table"}),"\n",(0,s.jsx)(n.li,{children:"No special throttling considerations"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"dynamodb-accelerator-dax",children:"DynamoDB Accelerator (DAX)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Fully-managed, highly available, seamless in-memory cache for DynamoDB"}),"\n",(0,s.jsx)(n.li,{children:"Microseconds latency for cached reads & queries"}),"\n",(0,s.jsx)(n.li,{children:"Doesn\u2019t require application logic modification (compatible with existing DynamoDB APIs)"}),"\n",(0,s.jsx)(n.li,{children:"Solves the \u201cHot Key\u201d problem (too many reads)"}),"\n",(0,s.jsx)(n.li,{children:"5 minutes TTL for cache (default)"}),"\n",(0,s.jsx)(n.li,{children:"Up to 10 nodes in the cluster"}),"\n",(0,s.jsx)(n.li,{children:"Multi-AZ (3 nodes minimum recommended for production)"}),"\n",(0,s.jsx)(n.li,{children:"Secure (Encryption at rest with KMS, VPC, IAM, CloudTrail, \u2026)"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamodb-accelerator",src:i(96051).A+"",width:"514",height:"813"})}),"\n",(0,s.jsx)(n.p,{children:"DynamoDB Accelerator (DAX) vs. ElastiCache:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamodb-vs-elasticache",src:i(83406).A+"",width:"1276",height:"649"})}),"\n",(0,s.jsx)(n.h2,{id:"dynamodb-streams",children:"DynamoDB Streams"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ordered stream of item-level modifications (create/update/delete) in a table"}),"\n",(0,s.jsxs)(n.li,{children:["Stream records can be:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Sent to Kinesis Data Streams"}),"\n",(0,s.jsx)(n.li,{children:"Read by AWS Lambda"}),"\n",(0,s.jsx)(n.li,{children:"Read by Kinesis Client Library applications"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Data Retention for up to 24 hours"}),"\n",(0,s.jsxs)(n.li,{children:["Use cases:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"react to changes in real-time (welcome email to users)"}),"\n",(0,s.jsx)(n.li,{children:"Analytics"}),"\n",(0,s.jsx)(n.li,{children:"Insert into derivative tables"}),"\n",(0,s.jsx)(n.li,{children:"Insert into OpenSearch Service"}),"\n",(0,s.jsx)(n.li,{children:"Implement cross-region replication"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamodb-streams",src:i(36505).A+"",width:"1830",height:"865"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Ability to choose the information that will be written to the stream:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"KEYS_ONLY"})," \u2013 only the key attributes of the modified item"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NEW_IMAGE"})," \u2013 the entire item, as it appears after it was modified"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"OLD_IMAGE"})," \u2013 the entire item, as it appeared before it was modified"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NEW_AND_OLD_IMAGES"})," \u2013 both the new and the old images of the item"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"DynamoDB Streams are made of shards, just like Kinesis Data Streams"}),"\n",(0,s.jsx)(n.li,{children:"You don\u2019t provision shards, this is automated by AWS"}),"\n",(0,s.jsx)(n.li,{children:"Records are not retroactively populated in a stream after enabling it"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"dynamodb-streams--aws-lambda",children:"DynamoDB Streams & AWS Lambda"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"You need to define an Event Source Mapping to read from a DynamoDB Streams"}),"\n",(0,s.jsx)(n.li,{children:"You need to ensure the Lambda function has the appropriate permissions"}),"\n",(0,s.jsx)(n.li,{children:"Your Lambda function is invoked synchronously"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamo-streams-and-lambda",src:i(41355).A+"",width:"574",height:"841"})}),"\n",(0,s.jsx)(n.h2,{id:"misc",children:"Misc"}),"\n",(0,s.jsx)(n.h3,{id:"dynamodb-cli",children:"DynamoDB CLI"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--projection-expression"}),": one or more attributes to retrieve"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--filter-expression"}),": filter items before returned to you"]}),"\n",(0,s.jsxs)(n.li,{children:["General AWS CLI Pagination options (e.g., DynamoDB, S3, \u2026)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--page-size"}),": specify that AWS CLI retrieves the full list of items but with a larger number of API calls instead of one API call (default: 1000 items)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--max-items"}),": max. number of items to show in the CLI (returns NextToken)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--starting-token"}),": specify the last NextToken to retrieve the next set of items"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"dynamodb-as-session-state-cache",children:"DynamoDB as Session State Cache"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"It\u2019s common to use DynamoDB to store session states"}),"\n",(0,s.jsxs)(n.li,{children:["vs. ElastiCache","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"ElastiCache is in-memory, but DynamoDB is serverless"}),"\n",(0,s.jsx)(n.li,{children:"Both are key/value stores"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["vs. EFS","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"EFS must be attached to EC2 instances as a network drive"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["vs. EBS & Instance Store","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"EBS & Instance Store can only be used for local caching, not shared caching"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["vs. S3","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"S3 is higher latency, and not meant for small objects"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"write-sharding",children:"Write Sharding"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Imagine we have a voting application with two candidates, candidate A and candidate B"}),"\n",(0,s.jsx)(n.li,{children:"If Partition Key is \u201cCandidate_ID\u201d, this results into two partitions, which will generate issues (e.g., Hot Partition)"}),"\n",(0,s.jsx)(n.li,{children:"A strategy that allows better distribution of items evenly across partitions"}),"\n",(0,s.jsx)(n.li,{children:"Add a suffix to Partition Key value"}),"\n",(0,s.jsxs)(n.li,{children:["Two methods:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Sharding Using Random Suffix"}),"\n",(0,s.jsx)(n.li,{children:"Sharding Using Calculated Suffix"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamo-write-sharding",src:i(39272).A+"",width:"733",height:"511"})}),"\n",(0,s.jsx)(n.h3,{id:"large-objects-pattern",children:"Large Objects Pattern"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamo-large-objects",src:i(49638).A+"",width:"1744",height:"703"})}),"\n",(0,s.jsx)(n.h3,{id:"indexing-s3-objects-metadata",children:"Indexing S3 Objects Metadata"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamo-indexing-metadata",src:i(55842).A+"",width:"1494",height:"694"})}),"\n",(0,s.jsx)(n.h3,{id:"operations",children:"Operations"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Table Cleanup","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Option 1: Scan + DeleteItem","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Very slow, consumes RCU & WCU, expensive"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Option 2: Drop Table + Recreate table","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Fast, efficient, cheap"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Copying a DynamoDB Table","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Option 1: Using AWS Data Pipeline"}),"\n",(0,s.jsxs)(n.li,{children:["Option 2: Backup and restore into a new table","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Takes some time"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Option 3: Scan + PutItem or BatchWriteItem","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Write your own code"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"security--other-features",children:"Security & Other Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Security","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"VPC Endpoints available to access DynamoDB without using the Internet"}),"\n",(0,s.jsx)(n.li,{children:"Access fully controlled by IAM"}),"\n",(0,s.jsx)(n.li,{children:"Encryption at rest using AWS KMS and in-transit using SSL/TLS"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Backup and Restore feature available","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Point-in-time Recovery (PITR) like RDS"}),"\n",(0,s.jsx)(n.li,{children:"No performance impact"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Global Tables","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Multi-region, multi-active, fully replicated, high performance"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["DynamoDB Local","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Develop and test apps locally without accessing the DynamoDB web service (without Internet)"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"AWS Database Migration Service (AWS DMS) can be used to migrate to DynamoDB (from MongoDB, Oracle, MySQL, S3, \u2026)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"users-interact-with-dynamodb-directly",children:"Users Interact with DynamoDB Directly"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamo-users",src:i(56112).A+"",width:"1354",height:"754"})}),"\n",(0,s.jsx)(n.h3,{id:"fine-grained-access-control",children:"Fine-Grained Access Control"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Using Web Identity Federation or Cognito Identity Pools, each user gets AWS credentials"}),"\n",(0,s.jsx)(n.li,{children:"You can assign an IAM Role to these users with a Condition to limit their API access to DynamoDB"}),"\n",(0,s.jsx)(n.li,{children:"LeadingKeys \u2013 limit row-level access for users on the Key Primary"}),"\n",(0,s.jsx)(n.li,{children:"Attributes \u2013 limit specific attributes the user can see"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dynamo-access-control",src:i(86328).A+"",width:"973",height:"568"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},86328:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamo-access-control-541b3f88031a1d85dce215b022a6d906.png"},25984:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamo-complex-condition-487f74ff31dfa1331d24f83a4264675a.png"},19916:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamo-conditional-update-8384a9ef5d1ce28b266c31f534410620.png"},87459:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamo-delete-47b93b72d5176a3390ee6b4d98c4a626.png"},55842:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamo-indexing-metadata-a21c7033b3ecd9e30dd7844e92f4b9ba.png"},49638:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamo-large-objects-66b3df6affe7f77e37e3dc72805ffff9.png"},99913:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamo-optimistic-locking-090daa8dfaa9eee995ff8740bb856634.png"},2057:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamo-primary-hash-808615a08c97a9545c2df322519f4d41.png"},38766:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamo-primary-range-c39113fed1528dab863d19051da0477a.png"},41355:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamo-streams-and-lambda-53b51021ba13804cd234bc129739d032.png"},39960:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamo-string-comparisons-d3a891aeff3f6048c03162ceaa300d5e.png"},77367:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamo-transaction-capacity-422d19ce8c96275cba4711c3cdb9c830.png"},33652:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamo-transaction-c7c10111ac624ce34990add73939d187.png"},93948:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamo-ttl-fa6120152a1f938869a773907035203c.png"},56112:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamo-users-b8b6a831ccdc5aaa4a7c49d102cf292a.png"},39272:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamo-write-sharding-3fb3beb2cc17acb3b9fde75320f9aeca.png"},29777:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamo-write-types-21457160c69c0722a463aa8eac42b8d9.png"},96051:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamodb-accelerator-90b1a15cffd252a520126b169d310df9.png"},36505:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamodb-streams-d740f92b0c4019e3192310110ab4de62.png"},83406:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/dynamodb-vs-elasticache-dae4abaf509c4807125c8e49d49c9a86.png"},54002:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/global-secondary-index-68b190463406a2b4a06194914ecc3c1e.png"},6774:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/local-secondary-index-9365cbf4d967dc5a8ea248271ae4bc3d.png"},92665:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/partition-internal-de697017d446f8c6bdf41ba323dad5fb.png"},43931:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/rcu-examples-6fd7af97a7446e051844c7b5bb75301a.png"},9516:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/wcu-examples-b499d254b813973ba8b688612eb19797.png"},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>r});var s=i(96540);const t={},a=s.createContext(t);function l(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);