"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[1904],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(t),f=o,d=p["".concat(l,".").concat(f)]||p[f]||g[f]||i;return t?r.createElement(d,a(a({ref:n},u),{},{components:t})):r.createElement(d,a({ref:n},u))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=p;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},7700:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],c={id:"gettingStarted",title:"Getting Started",sidebar_position:2},l=void 0,s={unversionedId:"Databases/MongoDB/M220N MongoDB for .NET Developers/gettingStarted",id:"Databases/MongoDB/M220N MongoDB for .NET Developers/gettingStarted",isDocsHomePage:!1,title:"Getting Started",description:"Establishing a connection with the C# MongoDB driver:",source:"@site/docs/Databases/MongoDB/M220N MongoDB for .NET Developers/Getting Started.md",sourceDirName:"Databases/MongoDB/M220N MongoDB for .NET Developers",slug:"/Databases/MongoDB/M220N MongoDB for .NET Developers/gettingStarted",permalink:"/LearningCollection/Databases/MongoDB/M220N MongoDB for .NET Developers/gettingStarted",editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/Databases/MongoDB/M220N MongoDB for .NET Developers/Getting Started.md",version:"current",sidebarPosition:2,frontMatter:{id:"gettingStarted",title:"Getting Started",sidebar_position:2},sidebar:"mySidebar",previous:{title:"Introduction",permalink:"/LearningCollection/Databases/MongoDB/M220N MongoDB for .NET Developers/m220n"},next:{title:"Using the Driver",permalink:"/LearningCollection/Databases/MongoDB/M220N MongoDB for .NET Developers/usingTheDriver"}},u=[],g={toc:u};function p(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Establishing a connection with the C# MongoDB driver:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-C#"},'using MongoDB.Driver;\nusing MongoDB.Bson;\n\nvar connString = "<connectionString>";\nvar client = new MongoClient(connString);\nvar db = client.GetDatabase("sample_mflix");\nvar collection = db.GetCollection<BsonDocument>("movies");\n\n// A query\nvar result = collection.Find(new BsonDocument())\n               .SortByDescending(m => m["runtime"])\n               .Limit(10)\n               .ToList();\n\nforeach (var r in result)\n{\n   Console.WriteLine(r.GetValue("title"));\n}\n')))}p.isMDXComponent=!0}}]);