"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[1990],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},c=Object.keys(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),f=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=f(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=f(n),d=r,m=p["".concat(s,".").concat(d)]||p[d]||u[d]||c;return n?o.createElement(m,a(a({ref:t},l),{},{components:n})):o.createElement(m,a({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,a=new Array(c);a[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var f=2;f<c;f++)a[f]=n[f];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3105:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return f},toc:function(){return l},default:function(){return p}});var o=n(7462),r=n(3366),c=(n(7294),n(3905)),a=["components"],i={id:"effects",title:"Effects"},s=void 0,f={unversionedId:"Web/React/Advanced Concepts/effects",id:"Web/React/Advanced Concepts/effects",isDocsHomePage:!1,title:"Effects",description:'What is an Effect (or a "side effect")?',source:"@site/docs/Web/React/Advanced Concepts/Effects.md",sourceDirName:"Web/React/Advanced Concepts",slug:"/Web/React/Advanced Concepts/effects",permalink:"/LearningCollection/Web/React/Advanced Concepts/effects",editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/Web/React/Advanced Concepts/Effects.md",version:"current",frontMatter:{id:"effects",title:"Effects"},sidebar:"mySidebar",previous:{title:"Notes on Jekyll",permalink:"/LearningCollection/Web/Jekyll/notesOnJekyll"},next:{title:"Fragments, Portals, Refs",permalink:"/LearningCollection/Web/React/fragmentsPortalsRefs"}},l=[{value:"What is an Effect (or a &quot;side effect&quot;)?",id:"what-is-an-effect-or-a-side-effect",children:[]},{value:"Conditionally firing an effect",id:"conditionally-firing-an-effect",children:[]}],u={toc:l};function p(e){var t=e.components,n=(0,r.Z)(e,a);return(0,c.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"what-is-an-effect-or-a-side-effect"},'What is an Effect (or a "side effect")?'),(0,c.kt)("p",null,"The Effect Hook lets you perform side effects in function components:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-jsx"},'import React, { useState, useEffect } from "react";\n\nfunction Example() {\n  const [count, setCount] = useState(0);\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `You clicked ${count} times`;\n  });\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n    </div>\n  );\n}\n')),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Data fetching, setting up a subscription, and manually changing the DOM")," in React components are all ",(0,c.kt)("strong",{parentName:"p"},"examples of side effects"),". Whether or not you\u2019re used to calling these operations \u201cside effects\u201d (or just \u201ceffects\u201d), you\u2019ve likely performed them in your components before."),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"You can think of useEffect Hook as ",(0,c.kt)("inlineCode",{parentName:"p"},"componentDidMount"),", ",(0,c.kt)("inlineCode",{parentName:"p"},"componentDidUpdate"),", and ",(0,c.kt)("inlineCode",{parentName:"p"},"componentWillUnmount")," combined.")),(0,c.kt)("h2",{id:"conditionally-firing-an-effect"},"Conditionally firing an effect"),(0,c.kt)("p",null,"The default behavior for effects is to fire the effect after every completed render. That way an effect is always recreated if one of its dependencies changes."),(0,c.kt)("p",null,"However, this may be overkill in some cases, like the subscription example from the previous section. We don\u2019t need to create a new subscription on every update, only if the ",(0,c.kt)("inlineCode",{parentName:"p"},"source")," prop has changed."),(0,c.kt)("p",null,"To implement this, pass a second argument to ",(0,c.kt)("inlineCode",{parentName:"p"},"useEffect")," that is the array of values that the effect depends on. Our updated example now looks like this:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-jsx"},"useEffect(\n  // a function that should be executed\n  // after every component evaluation\n  // IF the specified dependencies change\n  () => {\n    const subscription = props.source.subscribe();\n    return () => {\n      subscription.unsubscribe();\n    };\n  },\n  // dependencies of this effect, the function only runs\n  // if the dependencies change\n  [props.source]\n);\n")))}p.isMDXComponent=!0}}]);