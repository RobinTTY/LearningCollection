"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[5535],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=a,f=m["".concat(l,".").concat(u)]||m[u]||d[u]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4014:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={id:"dotnet7",title:".Net 7",sidebar_position:3},i=void 0,s={unversionedId:"c-sharp/dotnet-versions/dotnet7",id:"c-sharp/dotnet-versions/dotnet7",title:".Net 7",description:"This page convers the most important updates introduced in .Net 7 (in my view).",source:"@site/docs/c-sharp/dotnet-versions/dotnet7.md",sourceDirName:"c-sharp/dotnet-versions",slug:"/c-sharp/dotnet-versions/dotnet7",permalink:"/LearningCollection/c-sharp/dotnet-versions/dotnet7",draft:!1,editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/c-sharp/dotnet-versions/dotnet7.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"dotnet7",title:".Net 7",sidebar_position:3},sidebar:"finance",previous:{title:".Net 6",permalink:"/LearningCollection/c-sharp/dotnet-versions/dotnet6"},next:{title:"ASP.NET Intro",permalink:"/LearningCollection/c-sharp/aspnet"}},l={},p=[{value:"New Features in .Net 7",id:"new-features-in-net-7",level:2},{value:"New Features in C# 11",id:"new-features-in-c-11",level:3},{value:"Performance Improvements in .Net 7",id:"performance-improvements-in-net-7",level:2}],c={toc:p},m="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This page convers the most important updates introduced in .Net 7 (in my view).\nFor the full breakdown see the ",(0,a.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/dotnet/core/whats-new/dotnet-7"},"official documentation")," and ",(0,a.kt)("a",{parentName:"p",href:"https://devblogs.microsoft.com/dotnet/announcing-dotnet-7/"},"Blog Post Features")," and ",(0,a.kt)("a",{parentName:"p",href:"https://devblogs.microsoft.com/dotnet/performance_improvements_in_net_7/"},"Blog Post Performance"),"."),(0,a.kt)("h2",{id:"new-features-in-net-7"},"New Features in .Net 7"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Introduced ",(0,a.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/dotnet/standard/serialization/system-text-json/custom-contracts"},"JSON contracts")," to System.Text.Json which allow for more control over the serialization process."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://devblogs.microsoft.com/dotnet/announcing-builtin-container-support-for-the-dotnet-sdk/"},"Built-in Container support")," via ",(0,a.kt)("inlineCode",{parentName:"li"},"dotnet publish")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/dotnet/core/whats-new/dotnet-7#net-libraries"},".NET library improvements:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Support for microseconds and nanoseconds in ",(0,a.kt)("inlineCode",{parentName:"li"},"TimeSpan"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"TimeOnly"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"DateTime"),", and ",(0,a.kt)("inlineCode",{parentName:"li"},"DateTimeOffset")," types"),(0,a.kt)("li",{parentName:"ul"},"APIs for reading, writing, archiving, and extracting Tar archives"),(0,a.kt)("li",{parentName:"ul"},"Rate limiting APIs to protect a resource by keeping traffic at a safe level"),(0,a.kt)("li",{parentName:"ul"},"New type converters for DateOnly, TimeOnly, Int128, UInt128, and Half"),(0,a.kt)("li",{parentName:"ul"},"APIs to get and set Unix file permissions"),(0,a.kt)("li",{parentName:"ul"},"APIs to interop with JavaScript when running in the browser or other WebAssembly architectures"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://devblogs.microsoft.com/dotnet/dotnet-maui-dotnet-7"},"NET MAUI")," is now part of .NET 7")),(0,a.kt)("h3",{id:"new-features-in-c-11"},"New Features in C# 11"),(0,a.kt)("p",null,".NET 7 also brings with it a new version of the C# language. The most important changes are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Support for ",(0,a.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/tutorials/static-virtual-interface-members"},"static virtual members")," in interfaces"),(0,a.kt)("li",{parentName:"ul"},"Pattern matching: ",(0,a.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-11.0/list-patterns"},"List patterns"),". With list patterns you can apply patterns recursively to the individual elements of list-like input \u2013 or to a range of them."),(0,a.kt)("li",{parentName:"ul"},"Added the ",(0,a.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/required"},"require modifier"),". Indicates that the field or property it's applied to must be initialized by an ",(0,a.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/object-and-collection-initializers"},"object initializer"),"."),(0,a.kt)("li",{parentName:"ul"},"Introduced ",(0,a.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/dotnet/standard/generics/math"},"generic math")," operations, which allow you to perform mathematical operations generically\u2014that is, without having to know the exact type you're working with (e.g. double/decimal/etc.)")),(0,a.kt)("h2",{id:"performance-improvements-in-net-7"},"Performance Improvements in .Net 7"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"With .NET 7 the performance on Arm64 has been improved. ",(0,a.kt)("a",{parentName:"li",href:"https://devblogs.microsoft.com/dotnet/arm64-performance-improvements-in-dotnet-7/#impact"},"Many Micro benchmarks improved by 10~60%"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/dotnet/core/deploying/native-aot/"},"Native AOT")," produces a standalone executable in the target platform's file format with no external dependencies. It's entirely native, with no IL or JIT, and provides fast startup time and a small, self-contained deployment. In .NET 7, Native AOT focuses on console apps and requires apps to be trimmed."),(0,a.kt)("li",{parentName:"ul"},"and many more improvements (see the ",(0,a.kt)("a",{parentName:"li",href:"https://devblogs.microsoft.com/dotnet/performance_improvements_in_net_7/"},"blog post"),")")))}d.isMDXComponent=!0}}]);