"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[3786],{3912:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var s=t(74848),i=t(28453);const a={id:"unions",title:"Unions",sidebar_position:4},r=void 0,o={id:"apis/graphql/schemas-and-types/unions",title:"Unions",description:"Union types share similarities with interfaces; however, they lack the ability to define any shared fields among the constituent types.",source:"@site/docs/apis/graphql/schemas-and-types/unions.md",sourceDirName:"apis/graphql/schemas-and-types",slug:"/apis/graphql/schemas-and-types/unions",permalink:"/LearningCollection/apis/graphql/schemas-and-types/unions",draft:!1,unlisted:!1,editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/apis/graphql/schemas-and-types/unions.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"unions",title:"Unions",sidebar_position:4},sidebar:"docs",previous:{title:"Interfaces",permalink:"/LearningCollection/apis/graphql/schemas-and-types/interfaces"},next:{title:"Fragments",permalink:"/LearningCollection/apis/graphql/schemas-and-types/fragments"}},c={},l=[];function d(e){const n={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Union types share similarities with interfaces; however, they lack the ability to define any shared fields among the constituent types."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gql",children:"union SearchResult = Human | Droid | Starship\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Wherever we return a ",(0,s.jsx)(n.code,{children:"SearchResult"})," type in our schema, we might get a ",(0,s.jsx)(n.code,{children:"Human"}),", a ",(0,s.jsx)(n.code,{children:"Droid"}),", or a ",(0,s.jsx)(n.code,{children:"Starship"}),". Note that members of a union type need to be concrete object types; you can\u2019t create a union type out of interfaces or other unions."]}),"\n",(0,s.jsxs)(n.p,{children:["In this case, if you query a field that returns the ",(0,s.jsx)(n.code,{children:"SearchResult"})," union type, you need to use an inline fragment to be able to query any fields at all:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gql",children:'{\n  search(text: "an") {\n    __typename\n    ... on Human {\n      name\n      height\n    }\n    ... on Droid {\n      name\n      primaryFunction\n    }\n    ... on Starship {\n      name\n      length\n    }\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"__typename"})," field resolves to a ",(0,s.jsx)(n.code,{children:"string"})," which lets you differentiate different data types from each other on the client."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(96540);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);