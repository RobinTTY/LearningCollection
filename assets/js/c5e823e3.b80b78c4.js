"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[4552],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),i=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=i(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=i(t),f=o,d=u["".concat(l,".").concat(f)]||u[f]||m[f]||a;return t?r.createElement(d,s(s({ref:n},p),{},{components:t})):r.createElement(d,s({ref:n},p))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=f;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[u]="string"==typeof e?e:o,s[1]=c;for(var i=2;i<a;i++)s[i]=t[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},2087:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>i});var r=t(7462),o=(t(7294),t(3905));const a={title:"Enums"},s=void 0,c={unversionedId:"csharp/core-concepts/types/enums",id:"csharp/core-concepts/types/enums",title:"Enums",description:"An Enum type defines a set of constant values. The following enum declares constants that define different root vegetables:",source:"@site/docs/csharp/core-concepts/types/enums.md",sourceDirName:"csharp/core-concepts/types",slug:"/csharp/core-concepts/types/enums",permalink:"/LearningCollection/csharp/core-concepts/types/enums",draft:!1,editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/csharp/core-concepts/types/enums.md",tags:[],version:"current",frontMatter:{title:"Enums"},sidebar:"docs",previous:{title:"Introduction",permalink:"/LearningCollection/csharp/core-concepts/types/introduction"},next:{title:"Tuples",permalink:"/LearningCollection/csharp/core-concepts/types/tuples"}},l={},i=[],p={toc:i},u="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"An ",(0,o.kt)("inlineCode",{parentName:"p"},"Enum")," type defines a set of constant values. The following ",(0,o.kt)("inlineCode",{parentName:"p"},"enum")," declares constants that define different root vegetables:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"public enum SomeRootVegetable\n{\n    HorseRadish,\n    Radish,\n    Turnip\n}\n")),(0,o.kt)("p",null,"You can also define an ",(0,o.kt)("inlineCode",{parentName:"p"},"enum")," to be used in combination as flags. The following declaration declares a set of flags for the four seasons. Any combination of the seasons may be applied, including an ",(0,o.kt)("inlineCode",{parentName:"p"},"All")," value that includes all seasons:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"[Flags]\npublic enum Seasons\n{\n    None = 0,\n    Summer = 1,\n    Autumn = 2,\n    Winter = 4,\n    Spring = 8,\n    All = Summer | Autumn | Winter | Spring\n}\n")),(0,o.kt)("p",null,"The following example shows declarations of both the preceding enums:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"var turnip = SomeRootVegetable.Turnip;\nvar spring = Seasons.Spring;\nvar startingOnEquinox = Seasons.Spring | Seasons.Autumn;\nvar theYear = Seasons.All;\n")))}m.isMDXComponent=!0}}]);