"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[6027],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var l=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,l,r=function(e,t){if(null==e)return{};var n,l,r={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=l.createContext({}),p=function(e){var t=l.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return l.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},h=l.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=p(n),h=r,d=c["".concat(s,".").concat(h)]||c[h]||u[h]||a;return n?l.createElement(d,i(i({ref:t},m),{},{components:n})):l.createElement(d,i({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<a;p++)i[p]=n[p];return l.createElement.apply(null,i)}return l.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5201:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var l=n(7462),r=(n(7294),n(3905));const a={id:"element-types",title:"Element Types",sidebar_position:2},i=void 0,o={unversionedId:"web/html/element-types",id:"web/html/element-types",title:"Element Types",description:"All you see on the page in your browser viewer are HTML elements. And this is where the difference between HTML tags and HTML elements lies: elements are what the user sees on the browser page, while tags are what the developer writes when creating an HTML document.",source:"@site/docs/web/html/element-types.md",sourceDirName:"web/html",slug:"/web/html/element-types",permalink:"/LearningCollection/web/html/element-types",draft:!1,editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/web/html/element-types.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"element-types",title:"Element Types",sidebar_position:2},sidebar:"finance",previous:{title:"Doctype",permalink:"/LearningCollection/web/html/doctype"},next:{title:"HTML attributes",permalink:"/LearningCollection/web/html/attributes"}},s={},p=[{value:"Block-level Elements",id:"block-level-elements",level:2},{value:"Inline Elements",id:"inline-elements",level:2}],m={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,l.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"All you see on the page in your browser viewer are HTML elements. And this is where the difference between HTML tags and HTML elements lies: elements are what the user sees on the browser page, while tags are what the developer writes when creating an HTML document."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"It is worth remembering that not all HTML tags are elements. For example, the DOCTYPE instruction, necessary for correct interpretation of code by a browser, and tags in the header of an HTML document are not elements.")),(0,r.kt)("p",null,"There are two main types of page elements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"block-level elements"),(0,r.kt)("li",{parentName:"ul"},"inline elements")),(0,r.kt)("p",null,"Both of them have their own peculiarities."),(0,r.kt)("h2",{id:"block-level-elements"},"Block-level Elements"),(0,r.kt)("p",null,"Block-level elements are mostly used to create the structure of web pages or logically divide an HTML document into parts.\nExample of block-level elements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"<div>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"<h1>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"<p>"))),(0,r.kt)("p",null,"For a full list see: ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements"},"MDN")),(0,r.kt)("p",null,"The following features are characteristic of block-level elements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"They can contain both inline elements and other block-level elements"),(0,r.kt)("li",{parentName:"ul"},"Browsers display them with a line break before and after the element"),(0,r.kt)("li",{parentName:"ul"},"Block-level elements take up the full width available"),(0,r.kt)("li",{parentName:"ul"},"The height is calculated automatically by the browser based on the contents")),(0,r.kt)("p",null,"Block level elements behave like that because they act like containers that keep all their content within"),(0,r.kt)("h2",{id:"inline-elements"},"Inline Elements"),(0,r.kt)("p",null,"Inline elements are elements of a document that constitute an integral part of a line. They emphasize a part of a text and give it a certain function or meaning. They usually contain one or more words."),(0,r.kt)("p",null,"Example of inline elements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"<a>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"<span>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"<button>"))),(0,r.kt)("p",null,"For a full list see: ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements"},"MDN")),(0,r.kt)("p",null,"The following features are characteristic of all inline elements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"They can contain only data and other inline items (the only exception is the ",(0,r.kt)("inlineCode",{parentName:"li"},"<a>")," tag that can also contain block-level elements)"),(0,r.kt)("li",{parentName:"ul"},"A browser doesn't make a line break before and after a tag"),(0,r.kt)("li",{parentName:"ul"},"They work only when they are enclosed in tags")))}u.isMDXComponent=!0}}]);