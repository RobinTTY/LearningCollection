"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[6610],{43487:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"kubernetes/cka-exam","title":"CKA Exam notes","description":"Important notes for CKA Exam:","source":"@site/docs/kubernetes/cka-exam.md","sourceDirName":"kubernetes","slug":"/kubernetes/cka-exam","permalink":"/LearningCollection/kubernetes/cka-exam","draft":false,"unlisted":false,"editUrl":"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/kubernetes/cka-exam.md","tags":[],"version":"current","frontMatter":{"id":"cka-exam","title":"CKA Exam notes"},"sidebar":"docs","previous":{"title":"Architecture","permalink":"/LearningCollection/kubernetes/architecture"},"next":{"title":"Core Components","permalink":"/LearningCollection/kubernetes/core-components"}}');var s=t(74848),a=t(28453);const o={id:"cka-exam",title:"CKA Exam notes"},i=void 0,c={},l=[{value:"Important notes for CKA Exam:",id:"important-notes-for-cka-exam",level:2},{value:"Things to remember",id:"things-to-remember",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"important-notes-for-cka-exam",children:"Important notes for CKA Exam:"}),"\n",(0,s.jsx)(n.p,{children:"=> Don't forget to set context before each task\n=> Copy + Paste is important (ctrl + shift + v | Shift + Insert)\n=> Important Linux commands"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'kubectl logs >pod-name> | grep "abc" > /tmp/access-failed.txt\n=> vim: "set paste" command'}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"things-to-remember",children:"Things to remember"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"If they want you to add an env value like the node name:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",metastring:"{8-12}",children:"spec:\n  volumes:\n    - name: shared-volume\n      emptyDir: {}\n  containers:\n    - image: nginx:1-alpine\n      name: mc-pod-1\n      env:\n        - name: NODE_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: spec.nodeName\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Install a local package"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"apt install ./cri-docker_0.3.16.3-0.debian.deb\nor dpkg -i ./cri-docker_0.3.16.3-0.debian.deb"}),"\n",(0,s.jsx)(n.p,{children:"=> start service: systemctl start cri-docker\n=> start on boot: systemctl enable cri-docker"}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Upgrade existing helm chart"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["List helm charts: ",(0,s.jsx)(n.code,{children:"helm list -n <namespace-name>"}),"\nUpdate repos: ",(0,s.jsx)(n.code,{children:"helm repo update"}),"\nSearch repos: ",(0,s.jsx)(n.code,{children:"helm search repo <search-term>"}),"\nAdd repo: ",(0,s.jsx)(n.code,{children:"helm add repo <repo-name>"}),"\nUpgrade repo: ",(0,s.jsx)(n.code,{children:"helm upgrade <release-name> <chart-name> --version <version-name>"})," (Chart name is those from repo search)"]}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:"After adjusting resource quota a deployment still has not the wanted number of replicas"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"=> delete the associated replicaset"})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var r=t(96540);const s={},a=r.createContext(s);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);