"use strict";(self.webpackChunklearning_knowledge_base=self.webpackChunklearning_knowledge_base||[]).push([[8273],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>u});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),p=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(r),f=n,u=d["".concat(s,".").concat(f)]||d[f]||m[f]||a;return r?o.createElement(u,i(i({ref:t},l),{},{components:r})):o.createElement(u,i({ref:t},l))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:n,i[1]=c;for(var p=2;p<a;p++)i[p]=r[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4308:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var o=r(7462),n=(r(7294),r(3905));const a={id:"property-decorators",title:"Property Decorators",sidebar_position:5},i=void 0,c={unversionedId:"web/typescript/decorators/property-decorators",id:"web/typescript/decorators/property-decorators",title:"Property Decorators",description:"A Property Decorator is declared just before a property declaration. A property decorator cannot be used in a declaration file, or in any other ambient context (such as in a declare class).",source:"@site/docs/web/typescript/decorators/property-decorators.md",sourceDirName:"web/typescript/decorators",slug:"/web/typescript/decorators/property-decorators",permalink:"/LearningCollection/web/typescript/decorators/property-decorators",draft:!1,editUrl:"https://github.com/RobinTTY/LearningCollection/tree/master/website/docs/web/typescript/decorators/property-decorators.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"property-decorators",title:"Property Decorators",sidebar_position:5},sidebar:"docs",previous:{title:"Accessor Decorators",permalink:"/LearningCollection/web/typescript/decorators/accessor-decorators"},next:{title:"Parameter Decorators",permalink:"/LearningCollection/web/typescript/decorators/parameter-decorators"}},s={},p=[],l={toc:p},d="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,o.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"A Property Decorator is declared just before a property declaration. A property decorator cannot be used in a declaration file, or in any other ambient context (such as in a ",(0,n.kt)("inlineCode",{parentName:"p"},"declare")," class)."),(0,n.kt)("p",null,"The expression for the property decorator will be called as a function at runtime, with the following two arguments:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Either the constructor function of the class for a static member, or the prototype of the class for an instance member"),(0,n.kt)("li",{parentName:"ol"},"The name of the member")),(0,n.kt)("p",null,"We can use this information to record metadata about the property, as in the following example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'class Greeter {\n  @format("Hello, %s")\n  greeting: string;\n  constructor(message: string) {\n    this.greeting = message;\n  }\n  greet() {\n    let formatString = getFormat(this, "greeting");\n    return formatString.replace("%s", this.greeting);\n  }\n}\n')),(0,n.kt)("p",null,"We can then define the ",(0,n.kt)("inlineCode",{parentName:"p"},"@format")," decorator and ",(0,n.kt)("inlineCode",{parentName:"p"},"getFormat")," functions using the following function declarations:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import "reflect-metadata";\nconst formatMetadataKey = Symbol("format");\nfunction format(formatString: string) {\n  return Reflect.metadata(formatMetadataKey, formatString);\n}\nfunction getFormat(target: any, propertyKey: string) {\n  return Reflect.getMetadata(formatMetadataKey, target, propertyKey);\n}\n')),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},'@format("Hello, %s")')," decorator here is a decorator factory. When ",(0,n.kt)("inlineCode",{parentName:"p"},'@format("Hello, %s")')," is called, it adds a metadata entry for the property using the ",(0,n.kt)("inlineCode",{parentName:"p"},"Reflect.metadata")," function from the ",(0,n.kt)("inlineCode",{parentName:"p"},"reflect-metadata")," library. When ",(0,n.kt)("inlineCode",{parentName:"p"},"getFormat")," is called, it reads the metadata value for the format."))}m.isMDXComponent=!0}}]);